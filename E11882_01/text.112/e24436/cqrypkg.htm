<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>CTX_QUERY Package</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1071" />
<meta name="dcterms.created" content="2015-10-23T12:26:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Text Reference" />
<meta name="dcterms.identifier" content="E24436-05" />
<meta name="dcterms.isVersionOf" content="CCREF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1998, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="coutpkg.htm" title="Previous" type="text/html" />
<link rel="Next" href="crptpkg.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e24436.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/29</span> <!-- End Header -->
<div id="CCREF2138" class="chapter"><a id="CEGJDHGF"></a>
<h1 class="chapter"><span class="secnum">10</span> CTX_QUERY Package</h1>
<p><a id="CCREF0900"></a>This chapter describes the <code dir="ltr">CTX_QUERY</code> PL/SQL package you can use for generating query feedback, counting hits, and creating stored query expressions.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
You can use this package only when your index type is <code dir="ltr">CONTEXT</code>. This package does not support the <code dir="ltr">CTXCAT</code> index type.</div>
<p>The <code dir="ltr">CTX_QUERY</code> package includes the following procedures and functions:</p>
<div class="inftblinformal">
<table class="cellalignment96" title="ctx_query procedures" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment90">
<th class="cellalignment97" id="r1c1-t3">Name</th>
<th class="cellalignment97" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment90">
<td class="cellalignment98" id="r2c1-t3" headers="r1c1-t3"><a href="#CHDCICJH">BROWSE_WORDS</a></td>
<td class="cellalignment98" headers="r2c1-t3 r1c2-t3">Returns the words around a seed word in the index.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r3c1-t3" headers="r1c1-t3"><a href="#i996910">COUNT_HITS</a></td>
<td class="cellalignment98" headers="r3c1-t3 r1c2-t3">Returns the number hits to a query.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r4c1-t3" headers="r1c1-t3"><a href="#i996934">EXPLAIN</a></td>
<td class="cellalignment98" headers="r4c1-t3 r1c2-t3">Generates query expression parse and expansion information.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r5c1-t3" headers="r1c1-t3"><a href="#i997036">HFEEDBACK</a></td>
<td class="cellalignment98" headers="r5c1-t3 r1c2-t3">Generates hierarchical query feedback information (broader term, narrower term, and related term).</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r6c1-t3" headers="r1c1-t3"><a href="#i997203">REMOVE_SQE</a></td>
<td class="cellalignment98" headers="r6c1-t3 r1c2-t3">Removes a specified stored query expression from the SQL tables.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r7c1-t3" headers="r1c1-t3"><a href="#BABJAEAA">RESULT_SET</a></td>
<td class="cellalignment98" headers="r7c1-t3 r1c2-t3">Executes a query and generates a result set.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r8c1-t3" headers="r1c1-t3"><a href="#i997218">STORE_SQE</a></td>
<td class="cellalignment98" headers="r8c1-t3 r1c2-t3">Executes a query and stores the results in stored query expression tables.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="refentry"><a id="CHDCICJH"></a>
<div id="CCREF0902" class="refsect1">
<h2 class="refsect1">BROWSE_WORDS</h2>
<p><a id="sthref1810"></a><a id="sthref1811"></a><a id="sthref1812"></a>This procedure enables you to browse words in an Oracle Text index. Specify a seed word and <code dir="ltr">BROWSE_WORDS</code> returns the words around it in the index, and an approximate count of the number of documents that contain each word.</p>
<p>This feature is useful for refining queries. You can identify the following words:</p>
<ul>
<li>
<p>Unselective words (words that have low document count)</p>
</li>
<li>
<p>Misspelled words in the document set</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1813"></a>Syntax 1: To Store Results in Table</p>
<pre dir="ltr">
ctx_query.browse_words( 
</pre>
<pre dir="ltr">
index_name  IN   VARCHAR2, 
seed        IN   VARCHAR2, 
restab      IN   VARCHAR2, 
browse_id   IN   NUMBER   DEFAULT 0, 
numwords    IN   NUMBER   DEFAULT 10, 
direction   IN   VARCHAR2 DEFAULT BROWSE_AROUND,
part_name   IN   VARCHAR2 DEFAULT NULL
</pre>
<pre dir="ltr">
); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1814"></a>Syntax 2: To Store Results in Memory</p>
<pre dir="ltr">
ctx_query.browse_words( 
</pre>
<pre dir="ltr">
index_name  IN      VARCHAR2, 
seed        IN      VARCHAR2, 
resarr      IN OUT  BROWSE_TAB, 
numwords    IN      NUMBER   DEFAULT 10, 
direction   IN      VARCHAR2 DEFAULT BROWSE_AROUND,
part_name   IN      VARCHAR2 DEFAULT NULL 
</pre>
<pre dir="ltr">
); 
</pre>
<dl>
<dt>index</dt>
<dd>
<p>Specify the name of the index. You can specify <code dir="ltr">schema.name</code>. Must be a local index.</p>
</dd>
<dt>seed</dt>
<dd>
<p>Specify the seed word. This word is lexed before browse expansion. The word need not exist in the token table. <span class="syntaxinline">seed</span> must be a single word. Using multiple words as the seed will result in an error.</p>
</dd>
<dt>restab</dt>
<dd>
<p>Specify the name of the result table. You can enter <span class="syntaxinline">restab</span> as <code dir="ltr">schema.name</code>. The table must exist before you call this procedure, and you must have <code dir="ltr">INSERT</code> permissions on the table. This table must have the following schema.</p>
<div class="inftblinformal">
<table class="cellalignment96" title="ctx_query.browse_words restab" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment90">
<th class="cellalignment97" id="r1c1-t4">Column</th>
<th class="cellalignment97" id="r1c2-t4">Datatype</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment90">
<td class="cellalignment98" id="r2c1-t4" headers="r1c1-t4">browse_id</td>
<td class="cellalignment98" headers="r2c1-t4 r1c2-t4">number</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r3c1-t4" headers="r1c1-t4">word</td>
<td class="cellalignment98" headers="r3c1-t4 r1c2-t4">varchar2(64)</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r4c1-t4" headers="r1c1-t4">doc_count</td>
<td class="cellalignment98" headers="r4c1-t4 r1c2-t4">number</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>Existing rows in <span class="syntaxinline">restab</span> are not deleted before <code dir="ltr">BROWSE_WORDS</code> is called.</p>
</dd>
<dt>resarr</dt>
<dd>
<p>Specify the name of the result array. <code dir="ltr">resarr</code> is of type <code dir="ltr">ctx_query.browse_tab</code>.</p>
<pre dir="ltr">
type browse_rec is record (
   word varchar2(64),
   doc_count number
);
type browse_tab is table of browse_rec index by binary_integer;
</pre></dd>
<dt>browse_id</dt>
<dd>
<p>Specify a numeric identifier between 0 and 2<sup>32</sup>. The rows produced for this browse have a value of in the <code dir="ltr">browse_id</code> column in <code dir="ltr">restab</code>. When you do not specify <code dir="ltr">browse_id</code>, the default is 0.</p>
</dd>
<dt>numwords</dt>
<dd>
<p>Specify the number of words returned.</p>
</dd>
<dt>direction</dt>
<dd>
<p>Specify the direction for the browse. You can specify one of:</p>
<div class="inftblinformal">
<table class="cellalignment96" title="ctx_query.browse_words direction values" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment90">
<th class="cellalignment97" id="r1c1-t5">value</th>
<th class="cellalignment97" id="r1c2-t5">behavior</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment90">
<td class="cellalignment98" id="r2c1-t5" headers="r1c1-t5"><code dir="ltr">BEFORE</code></td>
<td class="cellalignment98" headers="r2c1-t5 r1c2-t5">Browse seed word and words alphabetically before the seed.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r3c1-t5" headers="r1c1-t5"><code dir="ltr">AROUND</code></td>
<td class="cellalignment98" headers="r3c1-t5 r1c2-t5">Browse seed word and words alphabetically before and after the seed.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r4c1-t5" headers="r1c1-t5"><code dir="ltr">AFTER</code></td>
<td class="cellalignment98" headers="r4c1-t5 r1c2-t5">Browse seed word and words alphabetically after the seed.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>Symbols <code dir="ltr">CTX_QUERY.BROWSE_BEFORE</code>, <code dir="ltr">CTX_QUERY.BROWSE_AROUND</code>, and <code dir="ltr">CTX_QUERY.BROWSE_AFTER</code> are defined for these literal values as well.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition to browse.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1815"></a>Example</p>
<p class="subhead1"><a id="CCREF23930"></a>Browsing Words with Result Table</p>
<pre dir="ltr">
begin
ctx_query.browse_words('myindex','dog','myres',numwords=&gt;5,direction=&gt;'AROUND');
end;

select word, doc_count from myres order by word;

WORD       DOC_COUNT
--------   ----------
CZAR       15
DARLING    5
DOC        73
DUNK       100
EAR        3
</pre>
<p class="subhead1"><a id="CCREF23931"></a>Browsing Words with Result Array</p>
<pre dir="ltr">
set serveroutput on;
declare
  resarr ctx_query.browse_tab;
begin
ctx_query.browse_words('myindex','dog',resarr,5,CTX_QUERY.BROWSE_AROUND);
for i in 1..resarr.count loop
  dbms_output.put_line(resarr(i).word || ':' || resarr(i).doc_count);
end loop;
end;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i996910"></a>
<div id="CCREF0904" class="refsect1">
<h2 class="refsect1">COUNT_HITS</h2>
<p>Returns the number of hits for the specified query. You can call <code dir="ltr">COUNT_HITS</code> in exact or estimate mode. Exact mode returns the exact number of hits for the query. Estimate mode returns an upper-bound estimate but runs faster than exact mode.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1816"></a>Syntax</p>
<p class="subhead2"><a id="CCREF23932"></a>Syntax 1</p>
<pre dir="ltr">
exec CTX_QUERY.COUNT_HITS( 
    index_name  IN VARCHAR2, 
    text_query  IN VARCHAR2, 
    exact       IN BOOLEAN  DEFAULT TRUE,
    part_name   IN VARCHAR2 DEFAULT NULL
) RETURN NUMBER; 
</pre>
<p class="subhead2"><a id="CCREF23933"></a>Syntax 2</p>
<pre dir="ltr">
exec CTX_QUERY.COUNT_HITS_CLOB_QUERY(
    index_name  IN VARCHAR2,
    text_query  IN CLOB,
    exact       IN BOOLEAN DEFAULT TRUE,
    part_name   IN VARCHAR2 DEFAULT NULL
) RETURN NUMBER; 
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the index name.</p>
</dd>
<dt>text_query</dt>
<dd>
<p>Specify the query.</p>
</dd>
<dt>exact</dt>
<dd>
<p>Specify <code dir="ltr">TRUE</code> for an exact count. Specify <code dir="ltr">FALSE</code> for an upper-bound estimate.</p>
<p>Specifying <code dir="ltr">FALSE</code> returns a less accurate number but runs faster. Specifying <code dir="ltr">FALSE</code> might return a number which is too high if rows have been updated or deleted since the last <code dir="ltr">FULL</code> index optimize. Optimizing in full mode removes these false hits, and then <code dir="ltr">EXACT</code> set to <code dir="ltr">FALSE</code> will return the same number as <code dir="ltr">EXACT</code> set to <code dir="ltr">TRUE</code>.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition to query.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1817"></a>Notes</p>
<p>If the query contains structured criteria, then you should use <code dir="ltr">SELECT COUNT(*)</code>.</p>
<p>If the index was created with the <a id="sthref1818"></a><a id="sthref1819"></a><a id="sthref1820"></a><code dir="ltr">TRANSACTIONAL</code> parameter, then <code dir="ltr">COUNT_HITS</code> will include pending rowids as well as those that have been synchronized.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i996934"></a>
<div id="CCREF0906" class="refsect1">
<h2 class="refsect1">EXPLAIN</h2>
<p><a id="sthref1821"></a><a id="sthref1822"></a><a id="sthref1823"></a><a id="sthref1824"></a><a id="sthref1825"></a><a id="sthref1826"></a><a id="sthref1827"></a><a id="sthref1828"></a><a id="sthref1829"></a>Use <code dir="ltr">CTX_QUERY.EXPLAIN</code> to generate explain plan information for a query expression. The <code dir="ltr">EXPLAIN</code> plan provides a graphical representation of the parse tree for a Text query expression. This information is stored in a result table.</p>
<p>This procedure does <span class="italic">not</span> execute the query. Instead, this procedure can tell you how a query is expanded and parsed before you enter the query. This is especially useful for stem, wildcard, thesaurus, fuzzy, soundex, or about queries. Parse trees also show the following information:</p>
<ul>
<li>
<p>Order of execution (precedence of operators)<a id="sthref1830"></a><a id="sthref1831"></a></p>
</li>
<li>
<p><code dir="ltr">ABOUT</code> query normalization</p>
</li>
<li>
<p>Query expression optimization</p>
</li>
<li>
<p>Stop-word transformations</p>
</li>
<li>
<p>Breakdown of composite-word tokens</p>
</li>
</ul>
<p>Knowing how Oracle Text evaluates a query is useful for refining and debugging queries. You can also design your application so that it uses the explain plan information to help users write better queries.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1832"></a>Syntax</p>
<p class="subhead2"><a id="CCREF23934"></a>Syntax 1</p>
<pre dir="ltr">
exec CTX_QUERY.EXPLAIN(
</pre>
<pre dir="ltr">
    index_name     IN VARCHAR2,
    text_query     IN VARCHAR2,
    explain_table  IN VARCHAR2,
    sharelevel     IN NUMBER DEFAULT 0,
    explain_id     IN VARCHAR2 DEFAULT NULL,
    part_name      IN VARCHAR2 DEFAULT NULL
</pre>
<pre dir="ltr">
);
</pre>
<p class="subhead2"><a id="CCREF23935"></a>Syntax 2</p>
<pre dir="ltr">
exec CTX_QUERY.EXPLAIN_CLOB_QUERY(
    index_name     IN VARCHAR2,
    text_query     IN CLOB,
    explain_table  IN VARCHAR2,
    sharelevel     IN NUMBER DEFAULT 0,
    explain_id     IN VARCHAR2 DEFAULT NULL,
    part_name      IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index to be queried.</p>
</dd>
<dt>text_query</dt>
<dd>
<p>Specify the query expression to be used as criteria for selecting rows.</p>
<p>When you include a wildcard, fuzzy, or soundex operator in <code dir="ltr">text_query</code>, this procedure looks at the index tables to determine the expansion.</p>
<p>Wildcard, fuzzy (?), and soundex (!) expression feedback does not account for lazy deletes as in regular queries.</p>
</dd>
<dt>explain_table</dt>
<dd>
<p>Specify the name of the table used to store representation of the parse tree for <span class="italic">text_query</span>. You must have at least <code dir="ltr">INSERT</code> and <code dir="ltr">DELETE</code> privileges on the table used to store the results from <code dir="ltr">EXPLAIN</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="arestab.htm#i634451">"EXPLAIN Table"</a> in <a href="arestab.htm#g640034">Appendix A, "Oracle Text Result Tables"</a> for more information about the structure of the explain table.</div>
</dd>
<dt>sharelevel</dt>
<dd>
<p>Specify whether <code dir="ltr">explain_table</code> is shared by multiple <code dir="ltr">EXPLAIN</code> calls. Specify 0 for exclusive use and 1 for shared use. Default is 0 (single-use).</p>
<p>When you specify 0, the system automatically truncates the result table before the next call to <code dir="ltr">EXPLAIN</code>.</p>
<p>When you specify 1 for shared use, this procedure does not truncate the result table. Only results with the same <code dir="ltr">explain_id</code> are updated. When no results with the same <code dir="ltr">explain_id</code> exist, new results are added to the <code dir="ltr">EXPLAIN</code> table.</p>
</dd>
<dt>explain_id</dt>
<dd>
<p>Specify a name that identifies the explain results returned by an <code dir="ltr">EXPLAIN</code> procedure when more than one <code dir="ltr">EXPLAIN</code> call uses the same shared <code dir="ltr">EXPLAIN</code> table. Default is <code dir="ltr">NULL</code>.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition to query.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1833"></a>Example</p>
<p class="subhead1"><a id="CCREF23936"></a>Creating the Explain Table <a id="sthref1834"></a></p>
<p>To create an explain table called <code dir="ltr">test_explain</code> for example, use the following SQL statement:</p>
<pre dir="ltr">
create table test_explain(
         explain_id varchar2(30),
         id number,
         parent_id number,
         operation varchar2(30),
         options varchar2(30),
         object_name varchar2(64),
         position number,
         cardinality number);
</pre>
<p class="subhead1"><a id="CCREF23937"></a>Running CTX_QUERY.EXPLAIN<a id="sthref1835"></a></p>
<p>To obtain the expansion of a query expression such as <span class="italic">comp% OR ?smith</span>, use <code dir="ltr">CTX_QUERY.EXPLAIN</code> as follows:</p>
<pre dir="ltr">
ctx_query.explain(
         index_name =&gt; 'newindex',
         text_query =&gt; 'comp% OR ?smith',
         explain_table =&gt; 'test_explain',
         sharelevel =&gt; 0,
         explain_id =&gt; 'Test');
</pre>
<p class="subhead1"><a id="CCREF23938"></a>Retrieving Data from Explain <a id="sthref1836"></a>Table</p>
<p>To read the explain table, you can select the columns as follows:</p>
<pre dir="ltr">
select explain_id, id, parent_id, operation, options, object_name, position
from test_explain order by id;
</pre>
<p>The output is ordered by ID to simulate a hierarchical query:</p>
<pre dir="ltr">
EXPLAIN_ID    ID PARENT_ID OPERATION    OPTIONS OBJECT_NAME POSITION 
----------- ---- --------- ------------ ------- ----------- -------- 
Test           1         0 OR           NULL    NULL          1 
Test           2         1 EQUIVALENCE  NULL    COMP%         1
Test           3         2 WORD         NULL    COMPTROLLER   1 
Test           4         2 WORD         NULL    COMPUTER      2 
Test           5         1 EQUIVALENCE  (?)     SMITH         2 
Test           6         5 WORD         NULL    SMITH         1 
Test           7         5 WORD         NULL    SMYTHE        2 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1837"></a>Restrictions</p>
<p><code dir="ltr">CTX_QUERY.EXPLAIN</code> does not support the use of query templates.</p>
<p>You cannot use <code dir="ltr">CTX_QUERY.EXPLAIN</code> with remote queries.</p>
<p>If the query utilizes themes (for example, with an <code dir="ltr">ABOUT</code> query), then a knowledge base must be installed. Such a knowledge base may or may not have been installed with Oracle Text. For more information on knowledge bases, see <a class="olink CCAPP0900" href="../../text.112/e24435/cthes.htm#CCAPP0900"><span class="italic">Oracle Text Application Developer's Guide</span></a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1838"></a>Related Topics</p>
<p><a href="cqoper.htm#CHDEGDDF">Chapter 3, "Oracle Text CONTAINS Query Operators"</a></p>
<p><a href="astoptrn.htm#g637110">Appendix H, "Stopword Transformations in Oracle Text"</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i997036"></a>
<div id="CCREF0908" class="refsect1">
<h2 class="refsect1">HFEEDBACK <a id="sthref1839"></a><a id="sthref1840"></a><a id="sthref1841"></a><a id="sthref1842"></a><a id="sthref1843"></a><a id="sthref1844"></a><a id="sthref1845"></a></h2>
<p>In English or French, this procedure generates hierarchical query feedback information (broader term, narrower term, and related term) for the specified query.</p>
<p>Broader term, narrower term, and related term information is obtained from the knowledge base. However, only knowledge base terms that are also in the index are returned as query feedback information. This increases the chances that terms returned from <code dir="ltr">HFEEDBACK</code> produce hits over the currently indexed document set.</p>
<p>Hierarchical query feedback information is useful for suggesting other query terms to the user.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">CTX_QUERY.HFEEDBACK</code> requires an installed knowledge base. A knowledge base may or may not have been installed with Oracle Text. For more information on knowledge bases, see <a class="olink CCAPP0900" href="../../text.112/e24435/cthes.htm#CCAPP0900"><span class="italic">Oracle Text Application Developer's Guide</span></a>.
<p><code dir="ltr">CTX_QUERY.HFEEDBACK</code> is only supported in English and French.</p>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1846"></a>Syntax</p>
<p class="subhead2"><a id="CCREF23939"></a>Syntax 1</p>
<pre dir="ltr">
exec CTX_QUERY.HFEEDBACK(
           index_name     IN VARCHAR2,
           text_query     IN VARCHAR2,
           feedback_table IN VARCHAR2,
           sharelevel     IN NUMBER DEFAULT 0,
           feedback_id    IN VARCHAR2 DEFAULT NULL,
           part_name      IN VARCHAR2 DEFAULT NULL
);
</pre>
<p class="subhead2"><a id="CCREF23940"></a>Syntax 2</p>
<pre dir="ltr">
exec CTX_QUERY.HFEEDBACK_CLOB_QUERY(
           index_name     IN VARCHAR2,
           text_query     IN CLOB,
           feedback_table IN VARCHAR2,
           sharelevel     IN NUMBER DEFAULT 0,
           feedback_id    IN VARCHAR2 DEFAULT NULL,
           part_name      IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index for the text column to be queried.</p>
</dd>
<dt>text_query</dt>
<dd>
<p>Specify the query expression to be used as criteria for selecting rows.</p>
</dd>
<dt>feedback_table</dt>
<dd>
<p>Specify the name of the table used to store the feedback terms.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="arestab.htm#i634683">"HFEEDBACK Table"</a> in <a href="arestab.htm#g640034">Appendix A, "Oracle Text Result Tables"</a> for more information about the structure of the explain table.</div>
</dd>
<dt>sharelevel</dt>
<dd>
<p>Specify whether <code dir="ltr">feedback_table</code> is shared by multiple <code dir="ltr">HFEEDBACK</code> calls. Specify 0 for exclusive use and 1 for shared use. Default is 0 (single-use).</p>
<p>When you specify 0, the system automatically truncates the feedback table before the next call to <code dir="ltr">HFEEDBACK</code>.</p>
<p>When you specify 1 for shared use, this procedure does not truncate the feedback table. Only results with the same <code dir="ltr">feedback_id</code> are updated. When no results with the same <span class="syntaxinline">feedback_id</span> exist, new results are added to the feedback table.</p>
</dd>
<dt>feedback_id</dt>
<dd>
<p>Specify a value that identifies the feedback results returned by a call to <code dir="ltr">HFEEDBACK</code> when more than one <code dir="ltr">HFEEDBACK</code> call uses the same shared feedback table. Default is <code dir="ltr">NULL</code>.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition to query.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1847"></a>Example</p>
<p class="subhead1"><a id="CCREF23941"></a>Create HFEEDBACK Result Table <a id="sthref1848"></a></p>
<p>Create a result table to use with <code dir="ltr">CTX_QUERY.HFEEDBACK</code> as follows:</p>
<pre dir="ltr">
  CREATE TABLE restab ( 
    feedback_id VARCHAR2(30), 
    id          NUMBER, 
    parent_id   NUMBER, 
    operation   VARCHAR2(30), 
    options     VARCHAR2(30), 
    object_name VARCHAR2(80), 
    position    NUMBER, 
    bt_feedback ctxsys.ctx_feedback_type, 
    rt_feedback ctxsys.ctx_feedback_type, 
    nt_feedback ctxsys.ctx_feedback_type 
  ) NESTED TABLE bt_feedback STORE AS res_bt 
    NESTED TABLE rt_feedback STORE AS res_rt 
    NESTED TABLE nt_feedback STORE AS res_nt; 
 
</pre>
<p><a href="arestab.htm#i634920">CTX_FEEDBACK_TYPE</a> is<a id="sthref1849"></a> a system-defined type in the <code dir="ltr">CTXSYS</code> schema.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="arestab.htm#i634683">"HFEEDBACK Table"</a> in <a href="arestab.htm#g640034">Appendix A, "Oracle Text Result Tables"</a> for more information about the structure of the <code dir="ltr">HFEEDBACK</code> table.</div>
<p class="subhead1"><a id="CCREF23942"></a>Call CTX_QUERY.HFEEDBACK</p>
<p>The following code calls the <code dir="ltr">HFEEDBACK</code> procedure with the query <span class="italic">computer industry</span>.</p>
<pre dir="ltr">
BEGIN 
ctx_query.hfeedback (index_name     =&gt; 'my_index', 
                     text_query     =&gt; 'computer industry', 
                     feedback_table =&gt; 'restab', 
                     sharelevel     =&gt; 0, 
                     feedback_id    =&gt; 'query10' 
                    ); 
END; 
</pre>
<p class="subhead1"><a id="CCREF23943"></a>Select From the Result Table</p>
<p>The following code extracts the feedback data from the result table. It extracts broader term, narrower term, and related term feedback separately from the nested tables.</p>
<pre dir="ltr">
DECLARE 
  i NUMBER; 
BEGIN 
  FOR frec IN ( 
    SELECT object_name, bt_feedback, rt_feedback, nt_feedback  
    FROM restab 
    WHERE feedback_id = 'query10' AND object_name IS NOT NULL 
  ) LOOP 
 
    dbms_output.put_line('Broader term feedback for ' || frec.object_name || 
':'); 
    i := frec.bt_feedback.FIRST; 
    WHILE i IS NOT NULL LOOP 
      dbms_output.put_line(frec.bt_feedback(i).text); 
      i := frec.bt_feedback.NEXT(i); 
    END LOOP; 
 
    dbms_output.put_line('Related term feedback for ' || frec.object_name || 
':'); 
    i := frec.rt_feedback.FIRST; 
    WHILE i IS NOT NULL LOOP 
      dbms_output.put_line(frec.rt_feedback(i).text); 
      i := frec.rt_feedback.NEXT(i); 
    END LOOP; 
 
    dbms_output.put_line('Narrower term feedback for ' || frec.object_name || 
':'); 
    i := frec.nt_feedback.FIRST; 
    WHILE i IS NOT NULL LOOP 
      dbms_output.put_line(frec.nt_feedback(i).text); 
      i := frec.nt_feedback.NEXT(i); 
    END LOOP; 
 
  END LOOP; 
END;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1850"></a>Sample Output</p>
<p>The following output is for the preceding example, which queries on <span class="italic">computer industry</span>:</p>
<pre dir="ltr">
Broader term feedback for computer industry: 
hard sciences 
Related term feedback for computer industry: 
computer networking 
electronics 
knowledge 
library science 
mathematics 
optical technology 
robotics 
satellite technology 
semiconductors and superconductors 
symbolic logic 
telecommunications industry 
Narrower term feedback for computer industry: 
ABEND - abnormal end of task 
AT&amp;T Starlans 
ATI Technologies, Incorporated 
ActivCard 
Actrade International Ltd. 
Alta Technology 
Amiga Format 
Amiga Library Services 
Amiga Shopper 
Amstrat Action 
Apple Computer, Incorporated
..
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">HFEEDBACK</code> information you obtain depends on the contents of your index and knowledge base and as such might differ from the sample shown.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1851"></a>Restrictions</p>
<p><code dir="ltr">CTX_QUERY.HFEEDBACK</code> does not support the use of query templates.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i997203"></a>
<div id="CCREF23944" class="refsect1">
<h2 class="refsect1">REMOVE_SQE</h2>
<p><a id="sthref1852"></a><a id="sthref1853"></a><a id="sthref1854"></a>The <code dir="ltr">CTX_QUERY.REMOVE_SQE</code> procedure removes the specified stored query expression.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1855"></a>Syntax</p>
<pre dir="ltr">
CTX_QUERY.REMOVE_SQE(query_name IN VARCHAR2);
</pre>
<dl>
<dt>query_name</dt>
<dd>
<p>Specify the name of the stored query expression to be removed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1856"></a>Example</p>
<pre dir="ltr">
begin
ctx_query.remove_sqe('disasters');
end;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="BABJAEAA"></a>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">RESULT_SET</h2>
<p>This procedure executes an XML query and generates a result set in XML. The result set interface can<a id="sthref1857"></a><a id="sthref1858"></a> return data views that are difficult to express in SQL, such as top N by category queries.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">Oracle Text Application Developer's Guide</span> for details on how to use the result set interface</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1859"></a>Syntax</p>
<pre dir="ltr">
CTX_QUERY.RESULT_SET (
   index_name            IN VARCHAR2,
   query                 IN VARCHAR2,
   result_set_descriptor IN CLOB,
   result_set            IN OUT NOCOPY CLOB,
   part_name             IN VARCHAR2 DEFAULT NULL);
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the index against which to execute the query.</p>
</dd>
<dt>query</dt>
<dd>
<p>Specify the query string.</p>
</dd>
<dt>result_set_descriptor</dt>
<dd>
<p>Specify the result set descriptor in XML. It describes what the result set should contain. See <a href="#BABFJGJB">"The Input Result Set Descriptor"</a> for more details.</p>
</dd>
<dt>result_set</dt>
<dd>
<p>Specify the output result set. If this variable is <code dir="ltr">NULL</code> on input, a session-duration temporary lob will be allocated and returned to the user. The user is responsible for deallocating this temporary lob. See <a href="#BABECFAB">"The Output Result Set XML"</a> for more details.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the index partition name. If the index is global, <code dir="ltr">part_name</code> must be <code dir="ltr">NULL</code>. If the index is partitioned and <code dir="ltr">part_name</code> is not <code dir="ltr">NULL</code>, then the query will only be evaluated for the given partition. If the index is partitioned and <code dir="ltr">part_name</code> is <code dir="ltr">NULL</code>, then the query will be evaluated for all partitions.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABFJGJB"></a>The Input Result Set Descriptor</p>
<p>The result set descriptor is an XML message which describes what to calculate for the result set. The elements present in the result set descriptor and the order in which they occur serve as a simple template, specifying what to include in the output result set. That is, there should be the list of hit rowids, then a count, then a token count, and so on. The attributes of the elements specify the parameters and options to the specific operations, such as number of hits in the list of rowids, estimate versus exact count, and so on.</p>
<p>The result set descriptor itself is XML conforming to the following DTD:</p>
<pre dir="ltr">
&lt;!ELEMENT ctx_result_set_descriptor (hitlist?, group*, count?)&gt;
&lt;!ELEMENT hitlist (rowid?, score?, sdata*)&gt;
&lt;!ELEMENT group(count?)&gt;
&lt;!ELEMENT count EMPTY&gt;
&lt;!ELEMENT rowid EMPTY&gt;
&lt;!ELEMENT score EMPTY&gt;
&lt;!ELEMENT sdata EMPTY&gt;
&lt;!ATTLIST group sdata CDATA #REQUIRED&gt;
&lt;!ATTLIST hitlist start_num_hit integer #REQUIRED&gt;
&lt;!ATTLIST hitlist end_num_hit integer #REQUIRED&gt;
&lt;!ATTLIST hitlist order PCDATA #IMPLIED&gt;
&lt;!ATTLIST count exact (TRUE|FALSE) "FALSE"&gt;
&lt;!ATTLIST sdata name CDATA #REQUIRED&gt;
</pre>
<p>The following is a description of the possible XML elements for the result set descriptor:</p>
<ul>
<li>
<p><code dir="ltr">ctx_result_set_descriptor</code></p>
<p>This is the root element for the result set descriptor. The parent element is none, as are the available attributes.</p>
<p>The possible child elements are:</p>
<ul>
<li>
<p>Zero or more <code dir="ltr">hitlist</code> elements.</p>
</li>
<li>
<p>Zero or more <code dir="ltr">group</code> elements.</p>
</li>
<li>
<p>At most one <code dir="ltr">count</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">group</code></p>
<p>The <code dir="ltr">group</code> element causes the generated result set to include a group breakdown. In other words, a breakdown of the results by <code dir="ltr">SDATA</code> section values. The parent element is <code dir="ltr">ctx_result_set_descriptor</code>, and the available attributes are:</p>
<ul>
<li>
<p><code dir="ltr">sdata</code></p>
<p>Specifies the name of the <code dir="ltr">SDATA</code> section to use for grouping. It is required.</p>
</li>
</ul>
<p>Possible child elements of <code dir="ltr">group</code> are:</p>
<ul>
<li>
<p>At most one <code dir="ltr">count</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">hitlist</code></p>
<p>The <code dir="ltr">hitlist</code> element controls inclusion of a list of hit documents. The parent element is <code dir="ltr">ctx_result_set_descriptor</code>, and the available attributes are:</p>
<ul>
<li>
<p><code dir="ltr">start_hit_num</code></p>
<p>This specifies the starting document hit to be included in the generated result set. This can be set to any positive integer less than or equal to 2048. For example, if <code dir="ltr">start_hit_num</code> is 21, then the result set will include document hits starting from the 21st document hit. This element is required.</p>
</li>
<li>
<p><code dir="ltr">end_hit_num</code></p>
<p>This specifies the last document hit to be included in the generated result set. This can be set to any positive integer less than or equal to 2048. For example, if <code dir="ltr">end_hit_num</code> is 40, then the result set will include document hits up to the 40th document hit. This element is required.</p>
</li>
<li>
<p><code dir="ltr">order</code></p>
<p>This is an optional attribute that specifies the order for the documents in the generated result set. The value is a list similar to a SQL <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> statement, except that, instead of column names, they can either be <code dir="ltr">SCORE</code> or <code dir="ltr">SDATA</code> section names. In the following example, <code dir="ltr">MYDATE</code> and <code dir="ltr">MYPRICE</code> are the <code dir="ltr">SDATA</code> section names:</p>
<pre dir="ltr">
(order = "SCORE DESC, MYDATE, MYPRICE DESC")
</pre></li>
</ul>
<p>The possible child elements are:</p>
<ul>
<li>
<p>At most one <code dir="ltr">rowid</code> element.</p>
</li>
<li>
<p>At most one <code dir="ltr">score</code> element.</p>
</li>
<li>
<p>At most one <code dir="ltr">sdata</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">count</code></p>
<p>This element causes the generated result set to include a count of the number of hit documents. The parent elements are:</p>
<ul>
<li>
<p><code dir="ltr">ctx_result_set_descriptor</code></p>
</li>
<li>
<p><code dir="ltr">group</code></p>
</li>
</ul>
<p>The available attributes are:</p>
<ul>
<li>
<p><code dir="ltr">exact</code></p>
<p>This is to estimate mode. Set to <code dir="ltr">true</code> or <code dir="ltr">false</code>. It is required, and the default is <code dir="ltr">false</code>.</p>
</li>
</ul>
<p>The possible child elements are none.</p>
</li>
<li>
<p><code dir="ltr">rowid</code></p>
<p>This child element causes the generated result set to include rowid information for each hit. The parent element is <code dir="ltr">hitlist</code>. There are no attributes and no possible child elements.</p>
</li>
<li>
<p><code dir="ltr">score</code></p>
<p>This child element causes the generated result set to include score information for each hit.</p>
<ul>
<li>
<p>The parent element is <code dir="ltr">hitlist</code>.</p>
</li>
<li>
<p>There are no available attributes, and no possible child elements.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">sdata</code></p>
<p>This child element causes the generated result set to include <code dir="ltr">sdata</code> values for each hit.</p>
<ul>
<li>
<p>The parent element is <code dir="ltr">hitlist</code>.</p>
</li>
<li>
<p>The available attribute is <code dir="ltr">name</code>. This specifies the name of the <code dir="ltr">sdata</code> section. It is required.</p>
</li>
<li>
<p>There are no child elements.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABECFAB"></a>The Output Result Set XML</p>
<p>The output result set XML is XML conforming to the following DTD:</p>
<pre dir="ltr">
&lt;!ELEMENT ctx_result_set (hitlist?, groups*, count?)&gt;
&lt;!ELEMENT hitlist (hit*)&gt;
&lt;!ELEMENT hit(rowid?, score?, sdata*)&gt;
&lt;!ELEMENT groups (group*)&gt;
&lt;!ELEMENT group (count?)&gt;
&lt;!ELEMENT count CDATA&gt;
&lt;!ELEMENT rowid CDATA&gt;
&lt;!ELEMENT score CDATA&gt;
&lt;!ELEMENT sdata CDATA&gt;
&lt;!ATTLIST groups sdata CDATA #REQUIRED&gt;
&lt;!ATTLIST group value CDATA #REQUIRED&gt;
&lt;!ATTLIST sdata name CDATA #REQUIRED&gt;
</pre>
<p>The following is a description of the list of possible XML elements for the output result set:</p>
<ul>
<li>
<p><code dir="ltr">ctx_result_set</code></p>
<p>This is the root element for the generated result set. There are no attributes. The parent is none. The possible child elements are:</p>
<ul>
<li>
<p>At most one <code dir="ltr">hitlist</code> element.</p>
</li>
<li>
<p>Zero or more <code dir="ltr">groups</code> elements.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">groups</code></p>
<p>This delimits the start of a group breakdown section. The parent element is <code dir="ltr">ctx_result_set</code>. The available attributes are:</p>
<ul>
<li>
<p><code dir="ltr">sdata</code></p>
<p>This is the name of the <code dir="ltr">sdata</code> section used for grouping.</p>
</li>
</ul>
<p>The possible child elements are:</p>
<ul>
<li>
<p>Zero or more <code dir="ltr">group</code> elements.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">group</code></p>
<p>This delimits the start of a <code dir="ltr">GROUP</code> <code dir="ltr">BY</code> value. The parent element is the <code dir="ltr">groups</code> element. The available attributes are:</p>
<ul>
<li>
<p><code dir="ltr">value</code></p>
<p>This is the value of the <code dir="ltr">sdata</code> section.</p>
</li>
</ul>
<p>The possible child elements are at most one <code dir="ltr">count</code> element.</p>
</li>
<li>
<p><code dir="ltr">hitlist</code></p>
<p>This delimits the start of <code dir="ltr">hitlist</code> information. The parent element is <code dir="ltr">ctx_result_set</code>, while the children are zero or more <code dir="ltr">hit</code> elements. There are no attributes.</p>
</li>
<li>
<p><code dir="ltr">hit</code></p>
<p>This delimits the start of the information for a particular document within a <code dir="ltr">hitlist</code>. The parent element is <code dir="ltr">hitlist</code>, and there are no available attributes. The possible child elements are:</p>
<ul>
<li>
<p>Zero or one <code dir="ltr">rowid</code> elements.</p>
</li>
<li>
<p>Zero or one <code dir="ltr">score</code> element.</p>
</li>
<li>
<p>Zero or one <code dir="ltr">sdata</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">rowid</code></p>
<p>This is the rowid of the document, so the content is the rowid of the document. The parent element is the <code dir="ltr">hit</code> element. There are no child elements, and no available attributes.</p>
</li>
<li>
<p><code dir="ltr">score</code></p>
<p>This is the score of the document. The parent element is the hit element. The content is the numeric score. There are no available attributes, and no possible child elements.</p>
</li>
<li>
<p><code dir="ltr">sdata</code></p>
<p>This is the <code dir="ltr">SDATA</code> value or values for the document. The parent element is the <code dir="ltr">hit</code> element, and the available attribute is <code dir="ltr">name</code>, which is the name of the <code dir="ltr">sdata</code> section. There are no possible child elements available. The content is the <code dir="ltr">SDATA</code> section value, which, for <code dir="ltr">DATE</code> values, is in the format "YYYY-MM-DD HH24:MI:SS", depending upon the actual values being stored.</p>
</li>
<li>
<p><code dir="ltr">count</code></p>
<p>This is the document hit count. The parent element is the <code dir="ltr">ctx_result_set</code> element or the <code dir="ltr">group</code> element. It contains the numeric hit count, and has no attributes, and no possible child elements.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABBADAB"></a>Example</p>
<p>This call to <code dir="ltr">ctx_query.result_set()</code> with the specified XML <code dir="ltr">result_set_descriptor</code> will generate the following information in the form of XML:</p>
<ul>
<li>
<p>top 20 hits displaying, score, rowid, author <code dir="ltr">SDATA</code> section value, and pubDate <code dir="ltr">SDATA</code> section value, order by pubDate <code dir="ltr">SDATA</code> section value <code dir="ltr">DESC</code> and score <code dir="ltr">DESC</code></p>
</li>
<li>
<p>total doc hit count for the text query</p>
</li>
<li>
<p>counts group by pubDate <code dir="ltr">SDATA</code> section values</p>
</li>
<li>
<p>counts group by author <code dir="ltr">SDATA</code> section values</p>
</li>
</ul>
<pre dir="ltr">
declare
  rs clob;
begin
  dbms_lob.createtemporary(rs, true, dbms_lob.session);
  ctx_query.result_set('docidx', 'oracle', '
  <span class="bold">&lt;ctx_result_set_descriptor&gt;</span>  
   <span class="bold">&lt;count/&gt;</span>
   <span class="bold">&lt;hitlist start_hit_num="1" end_hit_num="5" order="pubDate desc, score desc"&gt;</span>
     <span class="bold">&lt;score/&gt;</span>
     <span class="bold">&lt;rowid/&gt;</span>
     <span class="bold">&lt;sdata name="author"/&gt;</span>
     <span class="bold">&lt;sdata name="pubDate"/&gt;</span>
   <span class="bold">&lt;/hitlist&gt;</span>
   <span class="bold">&lt;group sdata="pubDate"&gt;</span>
     <span class="bold">&lt;count/&gt;</span>
   <span class="bold">&lt;/group&gt;</span>
   <span class="bold">&lt;group sdata="author"&gt;</span>
     <span class="bold">&lt;count/&gt;</span>
   <span class="bold">&lt;/group&gt;</span>
  <span class="bold">&lt;/ctx_result_set_descriptor&gt;</span>
', rs);
  dbms_lob.freetemporary(rs);
exception
  when others then
   dbms_lob.freetemporary(rs);
   raise;
end;
/
</pre>
<p>The XML output store in the result set output clob will resemble the following:</p>
<pre dir="ltr">
&lt;ctx_result_set&gt;
  &lt;hitlist&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAC&lt;/rowid&gt;
      &lt;sdata name="AUTHOR"&gt;John&lt;/sdata&gt;
      &lt;sdata name="PUBDATE"&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAG&lt;/rowid&gt;
      &lt;sdata name="AUTHOR"&gt;John&lt;/sdata&gt;
      &lt;sdata name="PUBDATE"&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAK&lt;/rowid&gt;
      &lt;sdata name="AUTHOR"&gt;John&lt;/sdata&gt;
      &lt;sdata name="PUBDATE"&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAO&lt;/rowid&gt;
      &lt;sdata name="AUTHOR"&gt;John&lt;/sdata&gt;
      &lt;sdata name="PUBDATE"&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAS&lt;/rowid&gt;
      &lt;sdata name="AUTHOR"&gt;John&lt;/sdata&gt;
      &lt;sdata name="PUBDATE"&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
  &lt;/hitlist&gt;
 
  &lt;count&gt;100&lt;/count&gt;
 
  &lt;groups sdata="PUBDATE"&gt;
    &lt;group value="2001-01-01 00:00:00"&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
    &lt;group value="2001-01-02 00:00:00"&gt;&lt;count&gt;50&lt;/count&gt;&lt;/group&gt;
    &lt;group value="2001-01-03 00:00:00"&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
  &lt;/groups&gt;
 
  &lt;groups sdata="AUTHOR"&gt;
    &lt;group value="John"&gt;&lt;count&gt;50&lt;/count&gt;&lt;/group&gt;
    &lt;group value="Mike"&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
    &lt;group value="Steve"&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
  &lt;/groups&gt;
 
&lt;/ctx_result_set&gt;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i997218"></a>
<div id="CCREF0912" class="refsect1">
<h2 class="refsect1">STORE_SQE</h2>
<p><span class="bold"><a id="sthref1860"></a><a id="sthref1861"></a><a id="sthref1862"></a></span>This procedure creates a stored query expression. Only the query definition is stored.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1863"></a>Supported Operators</p>
<p>Stored query expressions support all of the <code dir="ltr">CONTAINS</code> query operators. Stored query expressions also support all of the special characters and other components that can be used in a query expression, including other stored query expressions.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1864"></a>Privileges</p>
<p>Users are allowed to create and remove stored query expressions owned by them. Users are allowed to use stored query expressions owned by anyone. The <code dir="ltr">CTXSYS</code> user can create or remove stored query expressions for any user.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1865"></a>Syntax</p>
<p class="subhead2"><a id="CCREF23945"></a>Syntax 1</p>
<pre dir="ltr">
CTX_QUERY.STORE_SQE(query_name      IN VARCHAR2, 
                    text_query      IN VARCHAR2);
</pre>
<p class="subhead2"><a id="CCREF23946"></a>Syntax 2</p>
<pre dir="ltr">
CTX_QUERY.STORE_SQE_CLOB_QUERY(query_name   IN VARCHAR2,
                               text_query   IN CLOB);
</pre>
<dl>
<dt>query_name</dt>
<dd>
<p>Specify the name of the stored query expression to be created.</p>
</dd>
<dt>text_query</dt>
<dd>
<p>Specify the query expression to be associated with <code dir="ltr">query_name</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1866"></a>Example</p>
<pre dir="ltr">
begin
ctx_query.store_sqe('disasters', 'hurricanes | earthquakes');
end;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment89">
<tr>
<td class="cellalignment98">
<table class="cellalignment94">
<tr>
<td class="cellalignment93"><a href="coutpkg.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment93"><a href="crptpkg.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1998, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment100">
<table class="cellalignment92">
<tr>
<td class="cellalignment93"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment93"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment93"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment93"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment93"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment93"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
