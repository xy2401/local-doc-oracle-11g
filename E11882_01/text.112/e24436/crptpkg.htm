<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>CTX_REPORT Package</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1071" />
<meta name="dcterms.created" content="2015-10-23T12:26:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Text Reference" />
<meta name="dcterms.identifier" content="E24436-05" />
<meta name="dcterms.isVersionOf" content="CCREF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1998, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="cqrypkg.htm" title="Previous" type="text/html" />
<link rel="Next" href="cthes.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e24436.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">16/29</span> <!-- End Header -->
<div id="CCREF1100" class="chapter"><a id="CHDHHEDC"></a>
<h1 class="chapter"><span class="secnum">11</span> <a id="sthref1867"></a><a id="sthref1868"></a> CTX_REPORT Package</h1>
<p>This chapter describes how to use the <code dir="ltr">CTX_REPORT</code> package to create reports on indexing and querying. These reports can help you troubleshoot problems or fine-tune your applications.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#i996746">Procedures in CTX_REPORT</a></p>
</li>
<li>
<p><a href="#i996810">Using the Function Versions</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CCAPP1000" href="../../text.112/e24435/admin.htm#CCAPP1000"><span class="italic">Oracle Text Application Developer's Guide</span></a> for an overview of the <code dir="ltr">CTX_REPORT</code> package and how you can use the various procedures described in this chapter</div>
<a id="i996746"></a>
<div id="CCREF2139" class="sect1">
<h2 class="sect1"><span class="secnum">11.1</span> Procedures in CTX_REPORT</h2>
<p>The <code dir="ltr">CTX_REPORT</code> package contains the following procedures:</p>
<div class="inftblinformal">
<table class="cellalignment96" title="ctx_report procedures" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment90">
<th class="cellalignment97" id="r1c1-t3"><span class="bold">Name</span></th>
<th class="cellalignment97" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment90">
<td class="cellalignment98" id="r2c1-t3" headers="r1c1-t3"><a href="#CHDFCJDB">DESCRIBE_INDEX</a></td>
<td class="cellalignment98" headers="r2c1-t3 r1c2-t3">Creates a report describing the index.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r3c1-t3" headers="r1c1-t3"><a href="#i996844">DESCRIBE_POLICY</a></td>
<td class="cellalignment98" headers="r3c1-t3 r1c2-t3">Creates a report describing a policy.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r4c1-t3" headers="r1c1-t3"><a href="#CHDJJGEI">CREATE_INDEX_SCRIPT</a></td>
<td class="cellalignment98" headers="r4c1-t3 r1c2-t3">Creates a SQL*Plus script to duplicate the named index.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r5c1-t3" headers="r1c1-t3"><a href="#i996888">CREATE_POLICY_SCRIPT</a></td>
<td class="cellalignment98" headers="r5c1-t3 r1c2-t3">Creates a SQL*Plus script to duplicate the named policy.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r6c1-t3" headers="r1c1-t3"><a href="#i996912">INDEX_SIZE</a></td>
<td class="cellalignment98" headers="r6c1-t3 r1c2-t3">Creates a report to show the internal objects of an index, their tablespaces and used sizes.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r7c1-t3" headers="r1c1-t3"><a href="#i996935">INDEX_STATS</a></td>
<td class="cellalignment98" headers="r7c1-t3 r1c2-t3">Creates a report to show the various statistics of an index.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r8c1-t3" headers="r1c1-t3"><a href="#i997315">QUERY_LOG_SUMMARY</a></td>
<td class="cellalignment98" headers="r8c1-t3 r1c2-t3">Creates a report showing query statistics</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r9c1-t3" headers="r1c1-t3"><a href="#i997080">TOKEN_INFO</a></td>
<td class="cellalignment98" headers="r9c1-t3 r1c2-t3">Creates a report showing the information for a token, decoded.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r10c1-t3" headers="r1c1-t3"><a href="#i997124">TOKEN_TYPE</a></td>
<td class="cellalignment98" headers="r10c1-t3 r1c2-t3">Translates a name and returns a numeric token type.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect1" -->
<a id="i996810"></a>
<div id="CCREF2140" class="sect1">
<h2 class="sect1"><span class="secnum">11.2</span> Using the Function Versions<a id="sthref1869"></a></h2>
<p>Some of the procedures in the <code dir="ltr">CTX_REPORT</code> package have function versions. You can call these functions as follows:</p>
<pre dir="ltr">
select ctx_report.describe_index('MYINDEX') from dual;
</pre>
<p>In SQL*Plus, to generate an output file to send to support, you can do:</p>
<pre dir="ltr">
set long 64000
set pages 0
set heading off
set feedback off
spool outputfile
select ctx_report.describe_index('MYINDEX') from dual;
spool off
</pre></div>
<!-- class="sect1" -->
<div class="refentry"><a id="CHDFCJDB"></a>
<div id="CCREF2141" class="refsect1">
<h2 class="refsect1">DESCRIBE_INDEX<a id="sthref1870"></a><a id="sthref1871"></a><a id="sthref1872"></a><a id="sthref1873"></a><a id="sthref1874"></a><a id="sthref1875"></a><a id="sthref1876"></a></h2>
<p>Creates a report describing the index. This includes the settings of the index metadata, the indexing objects used, the settings of the attributes of the objects, and index partition descriptions, if any.</p>
<p>You can call this operation as a procedure with an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">CLOB</code> parameter or as a function that returns the report as a <code dir="ltr">CLOB</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1877"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.DESCRIBE_INDEX(
  index_name     IN VARCHAR2,
  report         IN OUT NOCOPY CLOB,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT
);

function CTX_REPORT.DESCRIBE_INDEX(
  index_name     IN VARCHAR2,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT
) return CLOB;
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index to describe.</p>
</dd>
<dt>report</dt>
<dd>
<p>Specify the <code dir="ltr">CLOB</code> locator to which to write the report.</p>
<p>If <code dir="ltr">report</code> is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The <code dir="ltr">report</code> <code dir="ltr">CLOB</code> will be truncated before report is generated, so any existing contents will be overwritten by this call.</p>
</dd>
<dt><a id="sthref1878"></a><a id="sthref1879"></a>report_format</dt>
<dd>
<p>Specify whether the report should be generated as 'TEXT' or as 'XML'. TEXT is the default. You can also specify the values <code dir="ltr">CTX_REPORT.FMT_TEXT</code> or <code dir="ltr">CTX_REPORT.FMT_XML</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1880"></a>Notes</p>
<p><code dir="ltr">CTX_REPORT.DESCRIBE_INDEX</code> outputs <code dir="ltr">FILTER</code> <code dir="ltr">BY</code> and <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> column information if the index is created with <code dir="ltr">FILTER</code> <code dir="ltr">BY</code> and/or <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> clauses.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1881"></a>Related Topics</p>
<p><a href="csql.htm#i997677">"CREATE INDEX"</a>, and <a href="cddlpkg.htm#CEGFAEJJ">"ADD_SDATA_COLUMN"</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i996844"></a>
<div id="CCREF2142" class="refsect1">
<h2 class="refsect1">DESCRIBE_POLICY <a id="sthref1882"></a><a id="sthref1883"></a><a id="sthref1884"></a><a id="sthref1885"></a></h2>
<p>Creates a report describing the policy. This includes the settings of the policy metadata, the indexing objects used, the settings of the attributes of the objects.</p>
<p>You can call this operation as a procedure with an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">CLOB</code> parameter or as a function that returns the report as a <code dir="ltr">CLOB</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1886"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.DESCRIBE_POLICY(
  policy_name    IN VARCHAR2,
  report         IN OUT NOCOPY CLOB,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT
);

function CTX_REPORT.DESCRIBE_POLICY(
  policy_name    IN VARCHAR2,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT
) return CLOB;
</pre>
<dl>
<dt>report</dt>
<dd>
<p>Specify the <code dir="ltr">CLOB</code> locator to which to write the report.</p>
<p>If <code dir="ltr">report</code> is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The <code dir="ltr">report</code> <code dir="ltr">CLOB</code> will be truncated before <code dir="ltr">report</code> is generated, so any existing contents will be overwritten by this call.</p>
</dd>
<dt><a id="sthref1887"></a><a id="sthref1888"></a>report_format</dt>
<dd>
<p>Specify whether the report should be generated as 'TEXT' or as 'XML'. TEXT is the default. You can also specify the values <code dir="ltr">CTX_REPORT.FMT_TEXT</code> or <code dir="ltr">CTX_REPORT.FMT_XML</code>.</p>
</dd>
<dt>policy_name</dt>
<dd>
<p>Specify the name of the policy to describe.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJJGEI"></a>
<div id="CCREF2143" class="refsect1">
<h2 class="refsect1">CREATE_INDEX_SCRIPT<a id="sthref1889"></a><a id="sthref1890"></a><a id="sthref1891"></a><a id="sthref1892"></a><a id="sthref1893"></a><a id="sthref1894"></a><a id="sthref1895"></a></h2>
<p>Creates a SQL*Plus script which will create a text index that duplicates the named text index.</p>
<p>The created script will include creation of preferences identical to those used in the named text index. However, the names of the preferences will be different.</p>
<p>You can call this operation as a procedure with an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">CLOB</code> parameter or as a function that returns the report as a <code dir="ltr">CLOB</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1896"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.CREATE_INDEX_SCRIPT(
  index_name      in varchar2,
  report          in out nocopy clob,
  prefname_prefix in varchar2 default null
);

function CTX_REPORT.CREATE_INDEX_SCRIPT(
  index_name      in varchar2,
  prefname_prefix in varchar2 default null
) return clob;
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index.</p>
</dd>
<dt>report</dt>
<dd>
<p>Specify the <code dir="ltr">CLOB</code> locator to which to write the script.</p>
<p>If <code dir="ltr">report</code> is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The <code dir="ltr">report</code> <code dir="ltr">CLOB</code> will be truncated before report is generated, so any existing contents will be overwritten by this call.</p>
</dd>
<dt>prefname_prefix</dt>
<dd>
<p>Specify optional prefix to use for preference names.</p>
<p>If <code dir="ltr">prefname_prefix</code> is omitted or NULL, index name will be used. The <code dir="ltr">prefname_prefix</code> follows index length restrictions.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1897"></a>Notes</p>
<p><code dir="ltr">CTX_REPORT.CREATE_INDEX_SCRIPT</code> will also generate necessary <code dir="ltr">FILTER</code> <code dir="ltr">BY</code> and <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> clauses for <code dir="ltr">CREATE</code> <code dir="ltr">INDEX</code> statements.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1898"></a>Related Topics</p>
<p><a href="csql.htm#i997677">"CREATE INDEX"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i996888"></a>
<div id="CCREF2144" class="refsect1">
<h2 class="refsect1">CREATE_POLICY_SCRIPT<a id="sthref1899"></a><a id="sthref1900"></a><a id="sthref1901"></a><a id="sthref1902"></a><a id="sthref1903"></a><a id="sthref1904"></a></h2>
<p>Creates a SQL*Plus script which will create a text policy that duplicates the named text policy.</p>
<p>The created script will include creation of preferences identical to those used in the named text policy.</p>
<p>You can call this operation as a procedure with an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">CLOB</code> parameter or as a function that returns the report as a <code dir="ltr">CLOB</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1905"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.CREATE_POLICY_SCRIPT(
  policy_name      in varchar2,
  report           in out nocopy clob,
  prefname_prefix  in varchar2 default null
);

function CTX_REPORT.CREATE_POLICY_SCRIPT(
  policy_name      in varchar2,
  prefname_prefix  in varchar2 default null
) return clob;
</pre>
<dl>
<dt>policy_name</dt>
<dd>
<p>Specify the name of the policy.</p>
</dd>
<dt>report</dt>
<dd>
<p>Specify the locator to which to write the script.</p>
<p>If <code dir="ltr">report</code> is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The <code dir="ltr">report</code> <code dir="ltr">CLOB</code> will be truncated before report is generated, so any existing contents will be overwritten by this call.</p>
</dd>
<dt>prefname_prefix</dt>
<dd>
<p>Specify the optional prefix to use for preference names. If <code dir="ltr">prefname_prefix</code> is omitted or NULL, policy name will be used. <code dir="ltr">prefname_prefix</code> follows policy length restrictions.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i996912"></a>
<div id="CCREF2145" class="refsect1">
<h2 class="refsect1">INDEX_SIZE<a id="sthref1906"></a><a id="sthref1907"></a><a id="sthref1908"></a><a id="sthref1909"></a><a id="sthref1910"></a><a id="sthref1911"></a></h2>
<p>Creates a report showing the internal objects of the text index or text index partition, and their tablespaces, allocated, and used sizes.</p>
<p>You can call this operation as a procedure with an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">CLOB</code> parameter, or as a function that returns the report as a <code dir="ltr">CLOB</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1912"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.INDEX_SIZE(
  index_name     IN VARCHAR2,
  report         IN OUT NOCOPY CLOB,
  part_name      IN VARCHAR2 DEFAULT NULL,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT
);

function CTX_REPORT.INDEX_SIZE(
  index_name     IN VARCHAR2,
  part_name      IN VARCHAR2 DEFAULT NULL,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT
) return clob;
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index to describe</p>
</dd>
<dt>report</dt>
<dd>
<p>Specify the <code dir="ltr">CLOB</code> locator to which to write the report.</p>
<p>If <code dir="ltr">report</code> is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The <code dir="ltr">report</code> <code dir="ltr">CLOB</code> will be truncated before report is generated, so any existing contents will be overwritten by this call</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition (optional). If <code dir="ltr">part_name</code> is NULL, and the index is a local partitioned text index, then all objects of all partitions will be displayed. If <code dir="ltr">part_name</code> is provided, then only the objects of a particular partition will be displayed.</p>
</dd>
<dt><a id="sthref1913"></a><a id="sthref1914"></a>report_format</dt>
<dd>
<p>Specify whether the report should be generated as 'TEXT' or as 'XML'. TEXT is the default. You can also specify the values <code dir="ltr">CTX_REPORT</code>.<code dir="ltr">FMT_TEXT</code> or <code dir="ltr">CTX_REPORT</code>.<code dir="ltr">FMT_XML</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1915"></a>Notes</p>
<p><code dir="ltr">CTX_REPORT.INDEX_SIZE</code> will also output information on dr$<span class="italic">indexname</span>$S table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1916"></a>Related Topics</p>
<p><a href="csql.htm#i997677">"CREATE INDEX"</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i996935"></a>
<div id="CCREF2146" class="refsect1">
<h2 class="refsect1">INDEX_STATS<a id="sthref1917"></a><a id="sthref1918"></a><a id="sthref1919"></a><a id="sthref1920"></a><a id="sthref1921"></a></h2>
<p>Creates a report showing various calculated statistics about the text index.</p>
<p>This procedure fully scans the text index tables, so it may take a long time to run for large indexes.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1922"></a>Syntax</p>
<pre dir="ltr">
procedure ctx_report.index_stats(
  index_name     IN VARCHAR2,
  report         IN OUT NOCOPY CLOB,
  part_name      IN VARCHAR2 DEFAULT NULL,
  frag_stats     IN BOOLEAN DEFAULT TRUE,
  list_size      IN NUMBER DEFAULT 100,
  report_format  IN VARCHAR2 DEFAULT FMT_TEXT,
  stat_type      IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index to describe. This must be a <code dir="ltr">CONTEXT</code> index.</p>
</dd>
<dt>report</dt>
<dd>
<p>Specify the <code dir="ltr">CLOB</code> locator to which to write the report.If report is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The report <code dir="ltr">CLOB</code> will be truncated before report is generated, so any existing contents will be overwritten by this call.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition. If the index is a local partitioned index, then <code dir="ltr">part_name</code> must be provided. <code dir="ltr">INDEX_STATS</code> will calculate the statistics for that index partition.</p>
</dd>
<dt>frag_stats</dt>
<dd>
<p>Specify TRUE to calculate fragmentation statistics. If <code dir="ltr">frag_stats</code> is FALSE, the report will not show any statistics relating to size of index data. However, the operation should take less time and resources to calculate the token statistics.</p>
</dd>
<dt>list_size</dt>
<dd>
<p>Specify the number of elements in each compiled list. <code dir="ltr">list_size</code> has a maximum value of 1000.</p>
</dd>
<dt><a id="sthref1923"></a><a id="sthref1924"></a>report_format</dt>
<dd>
<p>Specify whether the report should be generated as 'TEXT' or as 'XML'. TEXT is the default. You can also specify the values <code dir="ltr">CTX_REPORT</code>.<code dir="ltr">FMT_TEXT</code> or <code dir="ltr">CTX_REPORT</code>.<code dir="ltr">FMT_XML</code>.</p>
</dd>
<dt>stat_type</dt>
<dd>
<p>Specify the estimated statistics to output. If this parameter is set, then <code dir="ltr">frag_stats</code> is ignored. The possible values are:</p>
<div class="inftblinformal">
<table class="cellalignment96" summary="stat_type" dir="ltr">
<tbody>
<tr class="cellalignment90">
<td class="cellalignment98" id="r1c1-t4">EST_FRAG_STATS</td>
<td class="cellalignment98">Get the estimated fragmentation stats for the index. When this type is given <code dir="ltr">list_size</code> is ignored.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r2c1-t4">EST_FREQUENT_TOKENS</td>
<td class="cellalignment98" headers="r2c1-t4">Get the estimated frequently queried tokens for the index. You can give a value of up to 100 for <code dir="ltr">list_size</code>.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r3c1-t4">EST_TOKENS_TO_OPTIMIZE</td>
<td class="cellalignment98" headers="r3c1-t4">Show best tokens to optimize, based on frequency of querying and fragmentation. You can give a value of up to 100 for <code dir="ltr">list_size</code>.</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r4c1-t4">EST_SLOWEST_QUERIES</td>
<td class="cellalignment98" headers="r4c1-t4">Show slowest running queries for the index. You can give a value of up to 100 for <code dir="ltr">list_size</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The estimated statistics for <code dir="ltr">stat_type</code> is only available if <code dir="ltr">query_stats</code> is enabled. See CTX_OUTPUT.<a href="coutpkg.htm#CEGGFHDC">ENABLE_QUERY_STATS</a> and CTX_OUTPUT.<a href="coutpkg.htm#CEGCDJAF">DISABLE_QUERY_STATS</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1925"></a>Example</p>
<pre dir="ltr">
create table output (result CLOB);
 
  declare
    x clob := null;
  begin
    ctx_report.index_stats('tdrbprx21',x);
    insert into output values (x);
    commit;
    dbms_lob.freetemporary(x);
  end;
  /
 
set long 32000
set head off
set pagesize 10000
select * from output; 
</pre>
<p>The following sample output is for <code dir="ltr">INDEX_STATS</code> on a context index. This report has been truncated for clarity. It shows some of the token statistics and all of the fragmentation statistics.</p>
<p>The fragmentation statistics are at the end of the report. It tells you optimal row fragmentation, an estimated amount of garbage data in the index, and a list of the most fragmented tokens. Running <code dir="ltr">CTX_DDL.OPTIMIZE_INDEX</code> cleans up the index.</p>
<pre dir="ltr">
=================================================================
              STATISTICS FOR "DR_TEST"."TDRBPRX21"
=================================================================

indexed documents:                                          53
allocated docids:                                           68
$I rows:                                                16,259

-----------------------------------------------------------------
                        TOKEN STATISTICS
-----------------------------------------------------------------

unique tokens:                                          13,445
average $I rows for each token:                           1.21
tokens with most $I rows:
  telecommunications industry (THEME)                        6
  science and technology (THEME)                             6
  EMAIL (FIELD SECTION "SOURCE")                             6
  DEC (FIELD SECTION "TIMESTAMP")                            6
  electronic mail (THEME)                                    6
  computer networking (THEME)                                6
  communications (THEME)                                     6
  95 (FIELD SECTION "TIMESTAMP")                             6
  15 (FIELD SECTION "TIMESTAMP")                             6
  HEADLINE (ZONE SECTION)                                    6

average size for each token:                                 8
tokens with largest size:
  T (NORMAL)                                               405
  SAID (NORMAL)                                            313
  HEADLINE (ZONE SECTION)                                  272
  NEW (NORMAL)                                             267
  I (NORMAL)                                               230
  MILLION (PREFIX)                                         222
  D (NORMAL)                                               219
  MILLION (NORMAL)                                         215
  U (NORMAL)                                               192
  DEC (FIELD SECTION "TIMESTAMP")                          186

average frequency for each token:                         2.00
most frequent tokens:
  HEADLINE (ZONE SECTION)                                   68
  DEC (FIELD SECTION "TIMESTAMP")                           62
  95 (FIELD SECTION "TIMESTAMP")                            62
  15 (FIELD SECTION "TIMESTAMP")                            62
  T (NORMAL)                                                61
  D (NORMAL)                                                59
  881115 (THEME)                                            58
  881115 (NORMAL)                                           58
  I (NORMAL)                                                55
  geography (THEME)                                         52

token statistics by type:
  token type:                                           NORMAL
    unique tokens:                                       6,344
    total rows:                                          7,631
    average rows:                                         1.20
    total size:                              67,445 (65.86 KB)
    average size:                                           11
    average frequency:                                    2.33
    most frequent tokens:
      T                                                     61
      D                                                     59
      881115                                                58
      I                                                     55
      SAID                                                  45
      C                                                     43
      NEW                                                   36
      MILLION                                               32
      FIRST                                                 28
      COMPANY                                               27

  token type:                                            THEME
    unique tokens:                                       4,563
    total rows:                                          5,523
    average rows:                                         1.21
    total size:                              21,930 (21.42 KB)
    average size:                                            5
    average frequency:                                    2.40
    most frequent tokens:
      881115                                                58
      political geography                                   52
      geography                                             52
      United States                                         51
      business and economics                                50
      abstract ideas and concepts                           48
      North America                                         48
      science and technology                                46
      NKS                                                   34
      nulls                                                 34
</pre>
<p>The fragmentation portion of this report is as follows:</p>
<pre dir="ltr">
-----------------------------------------------------------------
                    FRAGMENTATION STATISTICS
-----------------------------------------------------------------

total size of $I data:                     116,772 (114.04 KB)

$I rows:                                                16,259
estimated $I rows if optimal:                           13,445
estimated row fragmentation:                              17 %

garbage docids:                                             15
estimated garbage size:                      21,379 (20.88 KB)

most fragmented tokens:
  telecommunications industry (THEME)                     83 %
  science and technology (THEME)                          83 %
  EMAIL (FIELD SECTION "SOURCE")                          83 %
  DEC (FIELD SECTION "TIMESTAMP")                         83 %
  electronic mail (THEME)                                 83 %
  computer networking (THEME)                             83 %
  communications (THEME)                                  83 %
  95 (FIELD SECTION "TIMESTAMP")                          83 %
  HEADLINE (ZONE SECTION)                                 83 %
  15 (FIELD SECTION "TIMESTAMP")                          83 %
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1926"></a>Notes</p>
<p>These metadata are available only when <code dir="ltr">QUERY_STATS</code> is turned on for the index: estimated fragmentation stats, estimated frequently queried tokens, estimated most fragmented frequently queried token, and estimated slowest running queries for the specified index.</p>
<p><code dir="ltr">CTX_REPORT.INDEX_STATS</code> will also output information on dr$<span class="italic">indexname</span>$S table, which is the section data, or <code dir="ltr">SDATA</code>, table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1927"></a>Related Topics</p>
<p>CTX_OUTPUT.<a href="coutpkg.htm#CEGGFHDC">ENABLE_QUERY_STATS</a></p>
<p>CTX_OUTPUT.<a href="coutpkg.htm#CEGCDJAF">DISABLE_QUERY_STATS</a>.</p>
<p><a href="csql.htm#i997677">CREATE INDEX</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i997315"></a>
<div id="CCREF2147" class="refsect1">
<h2 class="refsect1">QUERY_LOG_SUMMARY<a id="sthref1928"></a><a id="sthref1929"></a><a id="sthref1930"></a><a id="sthref1931"></a><a id="sthref1932"></a><a id="sthref1933"></a><a id="sthref1934"></a></h2>
<p>Obtain a report of logged queries.</p>
<p><code dir="ltr">QUERY_LOG_SUMMARY</code> enables you to analyze queries you have logged. For example, suppose you have an application that searches a database of large animals, and your analysis of queries against it shows that users are continually searching for the word <span class="italic">mouse</span>; this analysis might induce you to rewrite your application so that a search for <span class="italic">mouse</span> redirects the user to a database for small animals instead of simply returning an unsuccessful search.</p>
<p>With query analysis, you can find out the following:</p>
<ul>
<li>
<p>Which queries were made</p>
</li>
<li>
<p>Which queries were successful</p>
</li>
<li>
<p>Which queries were unsuccessful</p>
</li>
<li>
<p>How many times each query was made</p>
</li>
</ul>
<p>You can combine these factors in various ways, such as determining the 50 most frequent unsuccessful queries made by your application.</p>
<p>Query logging is begun with <code dir="ltr">CTX_OUTPUT.START_QUERY_LOG</code> and terminated with <code dir="ltr">CTX_OUTPUT.END_QUERY_LOG</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must connect as <code dir="ltr">CTXSYS</code> to use <code dir="ltr">CTX_REPORT.QUERY_LOG_SUMMARY</code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="coutpkg.htm#i996990">"START_QUERY_LOG"</a> and <a href="coutpkg.htm#i996966">"END_QUERY_LOG"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1935"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.QUERY_LOG_SUMMARY(
   logfile       IN VARCHAR2,
   indexname     IN VARCHAR2 DEFAULT NULL,
   result_table  IN OUT NOCOPY QUERY_TABLE,
   row_num       IN NUMBER,
   most_freq     IN BOOLEAN DEFAULT TRUE,
   has_hit       IN BOOLEAN DEFAULT TRUE
);
</pre>
<dl>
<dt>logfile</dt>
<dd>
<p>Specify the name of the logfile that contains the queries.</p>
</dd>
<dt>indexname</dt>
<dd>
<p>Specify the name of the context index for which you want the summary report. If you specify <code dir="ltr">NULL</code>, the procedure provides a summary report for all context indexes.</p>
</dd>
<dt>result_table</dt>
<dd>
<p>Specify the name of the in-memory table of type <code dir="ltr">TABLE OF RECORD</code> where the results of the <code dir="ltr">QUERY_LOG_SUMMARY</code> are to go. The default is the location specified by the system parameter <code dir="ltr">LOG_DIRECTORY</code>.</p>
</dd>
<dt>row_num</dt>
<dd>
<p>The number of rows of results from <code dir="ltr">QUERY_LOG_SUMMARY</code> to be reported into the table named by <span class="italic">restab</span>. For example, if this is number is 10, <span class="italic">most_freq</span> is TRUE, and <span class="italic">has_hit</span> is TRUE, then the procedure returns the 10 most frequent queries that were successful (that is, returned hits).</p>
</dd>
<dt>most_freq</dt>
<dd>
<p>Specify whether <code dir="ltr">QUERY_LOG_SUMMARY</code> should return the most frequent or least frequent queries. The default is most frequent queries. If <span class="italic">most_freq</span> is set to <code dir="ltr">FALSE</code>, the procedure returns the least successful queries.</p>
</dd>
<dt>has_hit</dt>
<dd>
<p>Specify whether <code dir="ltr">QUERY_LOG_SUMMARY</code> should return queries that are successful (that is, that generate hits) or unsuccessful queries. The default is to count successful queries; set <span class="variable">has_hit</span> to <code dir="ltr">FALSE</code> to return unsuccessful queries.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1936"></a>Example</p>
<p>The following example shows how a query log can be used.</p>
<p>First connect as <code dir="ltr">CTXSYS</code>. Then create and populate two tables, and then create an index for each:</p>
<pre dir="ltr">
create table qlogtab1 (tk number primary key, text varchar2(2000));
insert into qlogtab1 values(1, 'The Roman name for France was Gaul.');
insert into qlogtab1 values(2, 'The Tour de France is held each summer.');
insert into qlogtab1 values(3, 'Jacques Anatole Thibault took the pen name Anatole France.');
create index idx_qlog1 on qlogtab1(text) indextype is ctxsys.context;
create table qlogtab2 (tk number primary key, text varchar2(2000));
insert into qlogtab2 values(1, 'The Great Wall of China is about 2400 kilometers long');
insert into qlogtab2 values(2, 'Soccer dates back at least to 217 C.E.');
insert into qlogtab2 values(3, 'The Corn Palace is a tourist attraction in South Dakota.');
create index idx_qlog2 on qlogtab2(text) indextype is ctxsys.context;
</pre>
<pre dir="ltr">
</pre>
<p>Turn on query logging, creating a log called <code dir="ltr">query_log</code>:</p>
<pre dir="ltr">
exec ctx_output.start_query_log('query.log');
</pre>
<p>Now make some queries (some of which will be unsuccessful):</p>
<pre dir="ltr">
select text from qlogtab1 where contains(text, 'France',1)&gt;0;
select text from qlogtab1 where contains(text, 'cheese',1)&gt;0;
select text from qlogtab1 where contains(text, 'Text Wizard',1)&gt;0;
select text from qlogtab2 where contains(text, 'Corn Palace',1)&gt;0;
select text from qlogtab2 where contains(text, 'China',1)&gt;0;
select text from qlogtab1 where contains(text, 'Text Wizards',1)&gt;0;
select text from qlogtab2 where contains(text, 'South Dakota',1)&gt;0;
select text from qlogtab1 where contains(text, 'Text Wizard',1)&gt;0;
select text from qlogtab2 where contains(text, 'China',1)&gt;0;
select text from qlogtab1 where contains(text, 'Text Wizard',1)&gt;0;
select text from qlogtab2 where contains(text, 'company',1)&gt;0;
select text from qlogtab1 where contains(text, 'Text Wizard',1)&gt;0;
select text from qlogtab1 where contains(text, 'France',1)&gt;0;
select text from qlogtab1 where contains(text, 'database',1)&gt;0;
select text from qlogtab2 where contains(text, 'high-tech',1)&gt;0;
select text from qlogtab1 where contains(text, 'database',1)&gt;0;
select text from qlogtab1 where contains(text, 'France',1)&gt;0;
select text from qlogtab1 where contains(text, 'Japan',1)&gt;0;
select text from qlogtab1 where contains(text, 'Egypt',1)&gt;0;
select text from qlogtab1 where contains(text, 'Argentina',1)&gt;0;
select text from qlogtab1 where contains(text, 'Argentina',1)&gt;0;
select text from qlogtab1 where contains(text, 'Argentina',1)&gt;0;
select text from qlogtab1 where contains(text, 'Japan',1)&gt;0;
select text from qlogtab1 where contains(text, 'Egypt',1)&gt;0;
select text from qlogtab1 where contains(text, 'Air Shuttle',1)&gt;0;
select text from qlogtab1 where contains(text, 'Argentina',1)&gt;0;
</pre>
<p>With the querying over, turn query logging off:</p>
<pre dir="ltr">
exec ctx_output.end_query_log;
</pre>
<p>Use <code dir="ltr">QUERY_LOG_SUMMARY</code> to get query reports. In the first instance, you ask to see the three most frequent queries that return successfully. First declare the results table (<code dir="ltr">the_queries</code>).</p>
<pre dir="ltr">
set serveroutput on;
declare
   the_queries ctx_report.query_table;
begin
   ctx_report.query_log_summary('query.log', null, the_queries, 
                   row_num=&gt;3, most_freq=&gt;TRUE, has_hit=&gt;TRUE);
   dbms_output.put_line('The 3 most frequent queries returning hits');
   dbms_output.put_line('number of times  query string');
   for i in 1..the_queries.count loop
     dbms_output.put_line(the_queries(i).times||'                '||the_queries(i).query);
   end loop;
end;
/
</pre>
<p>This returns the following:</p>
<pre dir="ltr">
TThe 3 most frequent queries returning hits
number of times  query string
3                France
2                China
1                Corn Palace
</pre>
<p>Next, look for the three most frequent queries on <code dir="ltr">idx_qlog1</code> that were successful.</p>
<pre dir="ltr">
declare
   the_queries ctx_report.query_table;
begin
   ctx_report.query_log_summary('query.log', 'idx_qlog1', the_queries, 
                   row_num=&gt;3, most_freq=&gt;TRUE, has_hit=&gt;TRUE);
   dbms_output.put_line('The 3 most frequent queries returning hits for index idx_qlog1');
   dbms_output.put_line('number of times  query string');
   for i in 1..the_queries.count loop
     dbms_output.put_line(the_queries(i).times||'                '||the_queries(i).query);
   end loop;
end;
/
</pre>
<p>Because only the queries for <span class="italic">France</span> were successful, <code dir="ltr">ctx_report.query_log_summary</code> returns the following:</p>
<pre dir="ltr">
The 3 most frequent queries returning hits for index idx_qlog1
number of times  query string
3                France
</pre>
<p>Lastly, ask to see the three least frequent queries that returned no hits (that is, queries that were unsuccessful and called infrequently). In this case, you are interested in queries on both context indexes, so you set the indexname parameter to NULL.</p>
<pre dir="ltr">
declare
   the_queries ctx_report.query_table;
begin
   ctx_report.query_log_summary('query.log', null, the_queries, row_num=&gt;3, 
                   most_freq=&gt;FALSE, has_hit=&gt;FALSE); 
   dbms_output.put_line('The 3 least frequent queries returning no hit');
   dbms_output.put_line('number of times  query string');
   for i in 1..the_queries.count loop
     dbms_output.put_line(the_queries(i).times||'                '||the_queries(i).query);
   end loop;
end;
/
</pre>
<p>This returns the following results:</p>
<pre dir="ltr">
The 3 least frequent queries returning no hit                               
number of times  query string                                              
1                high-tech                                                 
1                company                                                   
1                cheese                                                    
</pre>
<p><span class="italic">Argentina</span> and <span class="italic">Japan</span> do not make this list, because they are queried more than once, while <span class="italic">Corn Palace</span> does not make this list because it is successfully queried.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i997080"></a>
<div id="CCREF2148" class="refsect1">
<h2 class="refsect1">TOKEN_INFO<a id="sthref1937"></a><a id="sthref1938"></a><a id="sthref1939"></a><a id="sthref1940"></a></h2>
<p>Creates a report showing the information for a token, decoded. This procedure will fully scan the info for a token, so it may take a long time to run for really large tokens.</p>
<p>You can call this operation as a procedure with an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">CLOB</code> parameter or as a function that returns the report as a <code dir="ltr">CLOB</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1941"></a>Syntax</p>
<pre dir="ltr">
procedure CTX_REPORT.TOKEN_INFO(
  index_name      IN VARCHAR2,
  report          IN OUT NOCOPY CLOB,
  token           IN VARCHAR2,
  token_type      IN NUMBER,
  part_name       IN VARCHAR2 DEFAULT NULL,
  raw_info        IN BOOLEAN  DEFAULT FALSE,
  decoded_info    IN BOOLEAN  DEFAULT TRUE,
  report_format   IN VARCHAR2 DEFAULT FMT_TEXT
);

function CTX_REPORT.TOKEN_INFO(
  index_name      IN VARCHAR2,
  token           IN VARCHAR2,
  token_type      IN NUMBER,
  part_name       IN VARCHAR2 DEFAULT NULL,
  raw_info        IN VARCHAR2 DEFAULT 'N',
  decoded_info    IN VARCHAR2 DEFAULT 'Y',
  report_format   IN VARCHAR2 DEFAULT FMT_TEXT
) return clob;
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index.</p>
</dd>
<dt>report</dt>
<dd>
<p>Specify the <code dir="ltr">CLOB</code> locator to which to write the report.</p>
<p>If report is NULL, a session-duration temporary <code dir="ltr">CLOB</code> will be created and returned. It is the caller's responsibility to free this temporary <code dir="ltr">CLOB</code> as needed.</p>
<p>The <code dir="ltr">report</code> <code dir="ltr">CLOB</code> will be truncated before report is generated, so any existing contents will be overwritten by this call token may be case-sensitive, depending on the passed-in token type.</p>
</dd>
<dt>token</dt>
<dd>
<p>Specify the token text.</p>
</dd>
<dt>token_type</dt>
<dd>
<p>Specify the token type. You can use a number returned by the <a href="#i997124">TOKEN_TYPE</a> function. <code dir="ltr">THEME</code>, <code dir="ltr">ZONE</code>, <code dir="ltr">ATTR</code>, <code dir="ltr">PATH</code>, and <code dir="ltr">PATH</code> <code dir="ltr">ATTR</code> tokens are case-sensitive.</p>
<p>Everything else gets passed through the lexer, so if the index's lexer is case-sensitive, the token input is case-sensitive.</p>
</dd>
<dt>part_name</dt>
<dd>
<p>Specify the name of the index partition.</p>
<p>If the index is a local partitioned index, then part_name must be provided. <code dir="ltr">TOKEN_INFO</code> will apply to just that index partition.</p>
</dd>
<dt>raw_info</dt>
<dd>
<p>Specify <code dir="ltr">TRUE</code> to include a hex dump of the index data. If raw_info is <code dir="ltr">TRUE</code>, the report will include a hex dump of the raw data in the <code dir="ltr">token_info</code> column.</p>
</dd>
<dt>decoded_info</dt>
<dd>
<p>Specify decode and include docid and offset data. If <code dir="ltr">decoded_info</code> is FALSE, <code dir="ltr">CTX_REPORT</code> will not attempt to decode the token information. This is useful when you just want a dump of data.</p>
</dd>
<dt><a id="sthref1942"></a><a id="sthref1943"></a>report_format</dt>
<dd>
<p>Specify whether the report should be generated as 'TEXT' or as 'XML'. TEXT is the default. You can also specify the values <code dir="ltr">CTX_REPORT.FMT_TEXT</code> or <code dir="ltr">CTX_REPORT.FMT_XML</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i997124"></a>
<div id="CCREF2149" class="refsect1">
<h2 class="refsect1">TOKEN_TYPE<a id="sthref1944"></a><a id="sthref1945"></a><a id="sthref1946"></a><a id="sthref1947"></a></h2>
<p>This is a helper function which translates an English name into a numeric token type. This is suitable for use with <code dir="ltr">token_info</code>, or any other <code dir="ltr">CTX</code> API which takes in a <code dir="ltr">token_type</code>.</p>
<pre dir="ltr">
function token_type(
  index_name in varchar2,
  type_name  in varchar2
) return number;

TOKEN_TYPE_TEXT      constant number := 0;
TOKEN_TYPE_THEME     constant number := 1;
TOKEN_TYPE_ZONE_SEC  constant number := 2;
TOKEN_TYPE_ORIG           constant number := 3,
TOKEN_TYPE_ATTR_TEXT constant number := 4;
TOKEN_TYPE_ATTR_SEC  constant number := 5;
TOKEN_TYPE_PREFIX    constant number := 6;
TOKEN_TYPE_PATH_SEC  constant number := 7;
TOKEN_TYPE_PATH_ATTR constant number := 8;
TOKEN_TYPE_STEM      constant number := 9;
</pre>
<dl>
<dt>index_name</dt>
<dd>
<p>Specify the name of the index.</p>
</dd>
<dt>type_name</dt>
<dd>
<p>Specify an English name for <code dir="ltr">token_type</code>. The following strings are legal input. All input is case-insensitive.</p>
<div class="inftblinformal">
<table class="cellalignment96" title="ctx_report.token_type type_name value" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment90">
<th class="cellalignment97" id="r1c1-t8">Input</th>
<th class="cellalignment97" id="r1c2-t8">Meaning</th>
<th class="cellalignment97" id="r1c3-t8">Type Returned</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment90">
<td class="cellalignment98" id="r2c1-t8" headers="r1c1-t8"><code dir="ltr">TEXT</code></td>
<td class="cellalignment98" headers="r2c1-t8 r1c2-t8">Normal text token.</td>
<td class="cellalignment98" headers="r2c1-t8 r1c3-t8">0</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r3c1-t8" headers="r1c1-t8"><code dir="ltr">THEME</code></td>
<td class="cellalignment98" headers="r3c1-t8 r1c2-t8">Theme token.</td>
<td class="cellalignment98" headers="r3c1-t8 r1c3-t8">1</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r4c1-t8" headers="r1c1-t8"><code dir="ltr">ZONE SEC</code></td>
<td class="cellalignment98" headers="r4c1-t8 r1c2-t8">Zone token.</td>
<td class="cellalignment98" headers="r4c1-t8 r1c3-t8">2</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r5c1-t8" headers="r1c1-t8"><code dir="ltr">ORIGINAL</code></td>
<td class="cellalignment98" headers="r5c1-t8 r1c2-t8">Original form token</td>
<td class="cellalignment98" headers="r5c1-t8 r1c3-t8">3</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r6c1-t8" headers="r1c1-t8"><code dir="ltr">ATTR TEXT</code></td>
<td class="cellalignment98" headers="r6c1-t8 r1c2-t8">Text that occurs in attribute.</td>
<td class="cellalignment98" headers="r6c1-t8 r1c3-t8">4</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r7c1-t8" headers="r1c1-t8"><code dir="ltr">ATTR SEC</code></td>
<td class="cellalignment98" headers="r7c1-t8 r1c2-t8">Attribute section.</td>
<td class="cellalignment98" headers="r7c1-t8 r1c3-t8">5</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r8c1-t8" headers="r1c1-t8"><code dir="ltr">PREFIX</code></td>
<td class="cellalignment98" headers="r8c1-t8 r1c2-t8">Prefix token.</td>
<td class="cellalignment98" headers="r8c1-t8 r1c3-t8">6</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r9c1-t8" headers="r1c1-t8"><code dir="ltr">PATH SEC</code></td>
<td class="cellalignment98" headers="r9c1-t8 r1c2-t8">Path section.</td>
<td class="cellalignment98" headers="r9c1-t8 r1c3-t8">7</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r10c1-t8" headers="r1c1-t8"><code dir="ltr">PATH ATTR</code></td>
<td class="cellalignment98" headers="r10c1-t8 r1c2-t8">Path attribute section.</td>
<td class="cellalignment98" headers="r10c1-t8 r1c3-t8">8</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r11c1-t8" headers="r1c1-t8"><code dir="ltr">STEM</code></td>
<td class="cellalignment98" headers="r11c1-t8 r1c2-t8">Stem form token.</td>
<td class="cellalignment98" headers="r11c1-t8 r1c3-t8">9</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r12c1-t8" headers="r1c1-t8"><code dir="ltr">FIELD &lt;name&gt; TEXT</code></td>
<td class="cellalignment98" headers="r12c1-t8 r1c2-t8">Text token in field section &lt;name&gt;</td>
<td class="cellalignment98" headers="r12c1-t8 r1c3-t8">16-79</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r13c1-t8" headers="r1c1-t8"><code dir="ltr">FIELD &lt;name&gt; PREFIX</code></td>
<td class="cellalignment98" headers="r13c1-t8 r1c2-t8">Prefix token in field section &lt;name&gt;</td>
<td class="cellalignment98" headers="r13c1-t8 r1c3-t8">616-916</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r14c1-t8" headers="r1c1-t8"><code dir="ltr">FIELD &lt;name&gt; STEM</code></td>
<td class="cellalignment98" headers="r14c1-t8 r1c2-t8">Stem token in field section &lt;name&gt;</td>
<td class="cellalignment98" headers="r14c1-t8 r1c3-t8">916-979</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r15c1-t8" headers="r1c1-t8"><code dir="ltr">NDATA &lt;name&gt;</code></td>
<td class="cellalignment98" headers="r15c1-t8 r1c2-t8"><code dir="ltr">NDATA</code>-type token</td>
<td class="cellalignment98" headers="r15c1-t8 r1c3-t8">200-299</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r16c1-t8" headers="r1c1-t8"><code dir="ltr">TOKEN_TYPE_ATTR_TXT_PFIX</code></td>
<td class="cellalignment98" headers="r16c1-t8 r1c2-t8">Attribute text prefix.</td>
<td class="cellalignment98" headers="r16c1-t8 r1c3-t8">604</td>
</tr>
<tr class="cellalignment90">
<td class="cellalignment98" id="r17c1-t8" headers="r1c1-t8"><code dir="ltr">TOKEN_TYPE_ATTR_TXT_STEM</code></td>
<td class="cellalignment98" headers="r17c1-t8 r1c2-t8">Attribute text stem.</td>
<td class="cellalignment98" headers="r17c1-t8 r1c3-t8">904</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>For <code dir="ltr">FIELD</code> types, the index metadata needs to be read, so if you are going to be calling this a lot for such things, you might want to consider caching the values in local variables rather than calling token_type over and over again.</p>
<p>The constant types (0 - 9) also have constants in this package defined.</p>
</dd>
</dl>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1948"></a>Notes</p>
<p>To get token types for <code dir="ltr">MDATA</code> tokens, do not use <code dir="ltr">CTX_REPORT.TOKEN_TYPE</code>; use the <a href="cqoper.htm#BGBCFHDB">MDATA</a> operator instead. (See <a href="cqoper.htm#BGBCFHDB">"MDATA"</a>.) The syntax to use is '<code dir="ltr">MDATA</code> <span class="italic">fieldname</span>'.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1949"></a>Example</p>
<pre dir="ltr">
typenum := ctx_report.token_type('myindex', 'field author text');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment89">
<tr>
<td class="cellalignment98">
<table class="cellalignment94">
<tr>
<td class="cellalignment93"><a href="cqrypkg.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment93"><a href="cthes.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1998, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment100">
<table class="cellalignment92">
<tr>
<td class="cellalignment93"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment93"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment93"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment93"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment93"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment93"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
