<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Developing Applications for Windows</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033" />
<meta name="dcterms.created" content="2014-12-28T3:22:21Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Platform Guide" />
<meta name="dcterms.identifier" content="E10845-13" />
<meta name="dcterms.isVersionOf" content="NTQRF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="registry.htm" title="Previous" type="text/html" />
<link rel="Next" href="ap_doc.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10845.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">20/27</span> <!-- End Header -->
<div id="NTQRF190" class="chapter"><a id="g1012237"></a> <a id="i1006516"></a>
<h1 class="chapter"><span class="secnum">16</span> Developing Applications for Windows</h1>
<p>This chapter points to sources of information on developing applications for Windows and outlines a procedure for building and debugging external procedures.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#BACBICCJ">Finding Information on Application Development for Windows</a></p>
</li>
<li>
<p><a href="#i1005844">Building External Procedures</a></p>
</li>
<li>
<p><a href="#CIHIBGAA">Multithreaded Agent Architecture</a></p>
</li>
<li>
<p><a href="#i1006102">Debugging External Procedures</a></p>
</li>
<li>
<p><a href="#BACCGJBI">Accessing Text Files with UTL_FILE</a></p>
</li>
<li>
<p><a href="#i1006153">Accessing Web Data with Intercartridge Exchange</a></p>
</li>
</ul>
<a id="BACBICCJ"></a>
<div id="NTQRF462" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref696"></a><a id="sthref697"></a>Finding Information on Application Development for Windows</h2>
<p>This section describes where to find information on developing applications specifically for Windows. These products are included on your Oracle Database Server media.</p>
<div id="NTQRF463" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref698"></a>
<h3 class="sect2">Java Enhancements</h3>
<p>Oracle Database includes an integrated Java Virtual Machine and JIT Compiler. Oracle Database also provides Oracle Java Database Connectivity (JDBC) Drivers. For more information, refer to <a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> and <a class="olink JJDBC" href="../../java.112/e16548/toc.htm"><span class="italic">Oracle Database JDBC Developer's Guide</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDHBGJA"></a>
<div id="NTQRF469" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ODP.NET</h3>
<p>Oracle Data Provider for .NET (ODP.NET) is an implementation of a data provider for Oracle Database. ODP.NET uses Oracle native APIs to offer fast and reliable access to Oracle data and features from any .NET application. ODP.NET also uses and inherits classes and interfaces available in the Microsoft .NET Framework Class Library. For more information, refer to <a class="olink ODPNT" href="../e23174/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer's Guide</span></a> and My Oracle Support Note 726240.1.</p>
</div>
<!-- class="sect2" -->
<div id="NTQRF664" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref699"></a>
<h3 class="sect2">Oracle Developer Tools for Visual Studio</h3>
<p>The Oracle Developer Tools for Visual Studio (ODT) is a tightly integrated "Add-in" for Microsoft Visual Studio 2008, 2005, and 2003. ODT integrates with Visual Studio to make it easy to browse and edit Oracle schema objects using integrated visual designers and can automatically generate .NET code through a simple drag and drop. Developers can modify table data, execute Oracle SQL statements, edit and debug PL/SQL code, generate and edit SQL scripts, and develop and deploy .NET stored procedures. There are many more features included with these tools. For more information, visit the ODT Web home at</p>
<p><code dir="ltr"><a href="http://www.oracle.com/technetwork/developer-tools/visual-studio/overview/index-097110.html">http://www.oracle.com/technetwork/developer-tools/visual-studio/overview/index-097110.html</a></code></p>
</div>
<!-- class="sect2" -->
<div id="NTQRF665" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref700"></a>
<h3 class="sect2">Oracle Providers for ASP.NET</h3>
<p>Beginning with .NET Framework 2.0, ASP.NET includes service providers that store state in databases. By storing this state in a database, applications can ensure high availability of data, while making the data equally available to all Web servers. For more information, refer to <a class="olink ASPNT" href="../e18737/toc.htm"><span class="italic">Oracle Providers for ASP.NET Developer's Guide for Microsoft Windows</span></a>.</p>
</div>
<!-- class="sect2" -->
<div id="NTQRF464" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref701"></a>
<h3 class="sect2">XML Support</h3>
<p>Oracle XML products include XML Developer's Kit (XDK) and Oracle XML SQL Utility. For more information, refer to:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../../appdev.112/e23582/toc.htm"><span class="italic">Oracle XML Developer's Kit Programmer's Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../../appdev.112/e23094/toc.htm"><span class="italic">Oracle XML DB Developer's Guide</span></a></p>
</li>
<li>
<p><a class="olink JAXML" href="../../appdev.112/e10769/toc.htm"><span class="italic">Oracle Database XML Java API Reference</span></a></p>
</li>
<li>
<p><a class="olink CAXML" href="../../appdev.112/e10770/toc.htm"><span class="italic">Oracle Database XML C API Reference</span></a></p>
</li>
<li>
<p><a class="olink CPXML" href="../../appdev.112/e10771/toc.htm"><span class="italic">Oracle Database XML C++ API Reference</span></a></p>
</li>
<li>
<p><a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
<li>
<p><a class="olink ARPLS" href="../../appdev.112/e40758/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="NTQRF465" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref702"></a>
<h3 class="sect2">Support for Internet Applications</h3>
<p><a id="sthref703"></a>Oracle Database support for internet applications includes Oracle Portal, which enables you to publish your data to the Web, Oracle HTTP Server, and PL/SQL Embedded Gateway, which offers <a href="glossary.htm#i432445"><span class="xrefglossterm">PL/SQL</span></a> procedures stored in Oracle Database that can be started through browsers. For more information, refer to:</p>
<ul>
<li>
<p><span class="italic">Oracle Portal Installation Guide and Tutorial</span></p>
</li>
<li>
<p><a class="olink OEMCG" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=OEMCG"><span class="italic">Oracle Enterprise Manager Grid Control Installation and Basic Configuration</span></a></p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Portal is available on a separate media and included with Oracle Database for Windows.</div>
<p>Oracle Database provides built-in mechanisms that address the requirements of the largest PHP, Ruby, Python Web, and Rich Internet Applications. The features include extreme connectivity, scalability, caching, nonintrusive performance acceleration, advanced security, and high-availability.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="NTQRF470" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref704"></a>
<h3 class="sect2">Oracle Services For Microsoft Transaction Server</h3>
<p>Oracle Database for Windows permits enhanced deployment of COM/COM+ components in <a href="glossary.htm#i432315"><span class="xrefglossterm">Microsoft Transaction Server</span></a>, using Oracle Database as the resource manager. For more information, refer to <a class="olink NTMTS" href="../e26104/toc.htm"><span class="italic">Oracle Services for Microsoft Transaction Server Developer's Guide for Microsoft Windows</span></a>.</p>
</div>
<!-- class="sect2" -->
<div id="NTQRF468" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref705"></a>
<h3 class="sect2">Oracle Objects for OLE</h3>
<p>Oracle Objects for OLE (OO4O) provides easy access to data stored in Oracle Database servers with any programming or scripting language that supports the Microsoft COM Automation and ActiveX technology. These include Visual Basic, Visual C++, Visual Basic For Applications (VBA), IIS Active Server Pages (VBScript and JavaScript), and others. For more information, refer to <a class="olink OOFOL" href="../e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide for Microsoft Windows.</span></a></p>
</div>
<!-- class="sect2" -->
<div id="NTQRF472" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref706"></a>
<h3 class="sect2">Oracle Provider for OLE DB</h3>
<p>Refer to <a class="olink OLEDB" href="../e17726/toc.htm"><span class="italic">Oracle Provider for OLE DB Developer's Guide for Microsoft Windows</span></a> for information on OLE DB.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref707"></a>
<h3 class="sect2">Oracle ODBC Driver</h3>
<p>Open Database Connectivity (ODBC) provides a common C programming interface for applications to access data from database management systems. Access to databases is managed by the ODBC Driver Manager. The driver manager provides the linkage between an ODBC application and an ODBC driver for a specific database management system.</p>
<p>Oracle ODBC Driver provides access to Oracle databases for applications written using the ODBC interface.</p>
<p>Oracle Technology Network has both OracleHome based ODBC driver and Instant Client enabled ODBC driver.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Download Instant Client enabled ODBC driver from
<p><code dir="ltr"><a href="http://www.oracle.com/technetwork/database/features/instant-client/index.html">http://www.oracle.com/technetwork/database/features/instant-client/index.html</a></code></p>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle ODBC Driver is updated on a regular basis. The newest release available is included on your media. To download the latest release, visit: <code dir="ltr"><a href="http://www.oracle.com/technology/index.html">http://www.oracle.com/technology/index.html</a></code>
<p>Select Oracle ODBC Drivers from the Select a Utility or Driver list.</p>
</div>
</div>
<!-- class="sect2" -->
<div id="NTQRF467" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref708"></a>
<h3 class="sect2">Oracle COM Automation Feature</h3>
<p>Oracle <a href="glossary.htm#i432205"><span class="xrefglossterm">COM</span></a> automation feature enables PL/SQL and Java stored procedure developers and COM/COM+ developers to load COM/COM+ objects from Oracle Database. For more information, refer to <a class="olink COMDG" href="../../appdev.112/e10591/toc.htm"><span class="italic">Oracle COM Automation Feature Developer's Guide for Microsoft Windows.</span></a></p>
</div>
<!-- class="sect2" -->
<div id="NTQRF471" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref709"></a>
<h3 class="sect2">Pro*C/C++ and Pro*COBOL Applications</h3>
<p>Refer to the following guides for more information on Pro*C/C++ and Pro*COBOL applications:</p>
<ul>
<li>
<p><a class="olink LNPCC" href="../../appdev.112/e10825/toc.htm"><span class="italic">Pro*C/C++ Programmer's Guide</span></a></p>
</li>
<li>
<p><a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a></p>
</li>
<li>
<p><a class="olink LNOCI" href="../../appdev.112/e10646/toc.htm"><span class="italic">Oracle Call Interface Programmer's Guide</span></a></p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005844"></a>
<div id="NTQRF478" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Building External Procedures</h2>
<p>This section describes how to create and use <a href="glossary.htm#i432249"><span class="xrefglossterm">external procedures</span></a> on Windows. The following files are located in <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\rdbms\extproc</code>:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlinebold">extern.c</span></code> is the code example shown in <a href="#i1005976">"Writing an External Procedure"</a></p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlinebold">make.bat</span></code> is the batch file that builds the <a href="glossary.htm#i432246"><span class="xrefglossterm">dynamic link library</span></a></p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlinebold">extern.sql</span></code> automates the instructions described in <a href="#i1006021">"Registering an External Procedure"</a> and <a href="#i1006075">"Executing an External Procedure"</a></p>
</li>
</ul>
<div id="NTQRF479" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref710"></a>
<h3 class="sect2">External Procedures Overview</h3>
<p>External procedures are functions written in a third-generation language (C, for example) and callable from within PL/SQL or SQL as if they were a PL/SQL routine or function. External procedures let you take advantage of strengths and capabilities of a third-generation programming language in a PL/SQL environment.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database also provides a special purpose interface, the call specification, that lets you call external procedures from other languages, as long as they are callable by C.</div>
<p>The main advantages of external procedures are:</p>
<ul>
<li>
<p>Performance, because some tasks are performed more efficiently in a third-generation language than in PL/SQL, which is better suited for SQL transaction processing</p>
</li>
<li>
<p>Code re-usability, because dynamic link libraries (DLLs) can be called directly from PL/SQL programs on the server or in client tools</p>
</li>
</ul>
<p>You can use external procedures to perform specific processes:</p>
<ul>
<li>
<p>Solving scientific and engineering problems</p>
</li>
<li>
<p>Analyzing data</p>
</li>
<li>
<p>Controlling real-time devices and processes</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Special security precautions are warranted when configuring a listener to handle external procedures. See <a href="ap_net.htm#CHDHEHCH">"Modifying Configuration of External Procedures for Higher Security"</a> and <a class="olink NETAG0132" href="../../network.112/e41945/advcfg.htm#NETAG0132"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information.</div>
<p>To create and use an external procedure, perform the following sequential steps:</p>
<ul>
<li>
<p><a href="#i1005913">Installing and Configuring</a></p>
</li>
<li>
<p><a href="#i1005976">Writing an External Procedure</a></p>
</li>
<li>
<p><a href="#BACBIJJJ">Building a DLL</a></p>
</li>
<li>
<p><a href="#i1006021">Registering an External Procedure</a></p>
</li>
<li>
<p><a href="#CIHJHDBE">Restricting Library-Related Privileges to Trusted Users Only</a></p>
</li>
<li>
<p><a href="#i1006075">Executing an External Procedure</a></p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>You must have a C compiler and linker installed on your system to build DLLs.</p>
</li>
<li>
<p>You can combine the instructions described in the fourth and fifth tasks into one SQL script that automates the task of registering and executing your external procedure. See <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\rdbms\extproc\extern.sql</code> for an example of a SQL script that combines these steps.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1005913"></a>
<div id="NTQRF480" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Installing and Configuring</h3>
<p>This section describes installation and configuration of Oracle Database and <a href="glossary.htm#i433191"><span class="xrefglossterm">Oracle Net</span></a>.</p>
<div id="NTQRF481" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref711"></a>
<h4 class="sect3">Installing Oracle Database</h4>
<p>Follow the steps in <a class="olink NTDBI" href="../../install.112/e47798/toc.htm"><span class="italic">Oracle Database Installation Guide for Microsoft Windows</span></a> to install these products on your Windows server:</p>
<ul>
<li>
<p><a id="sthref712"></a>Oracle Database Enterprise Edition, Oracle Database Standard Edition, or Oracle Database Personal Edition. Each type contains PL/SQL, from which external procedures are called, and the PL/SQL external procedure program (EXTPROC), which runs external procedures.</p>
</li>
<li>
<p>Oracle Net Services</p>
</li>
<li>
<p><a href="glossary.htm#i432415"><span class="xrefglossterm">Oracle Protocol Support</span></a></p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1005946"></a>
<div id="NTQRF482" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><a id="sthref713"></a>Configuring Oracle Net Services</h4>
<p>During database server installation, Oracle Net Configuration Assistant configures <code dir="ltr">listener.ora</code> and <code dir="ltr">tnsnames.ora</code> files for external procedure calls.</p>
<p><a id="sthref714"></a><a id="sthref715"></a>When an application calls an external procedure, Oracle Net Listener starts an external procedure agent called EXTPROC. Using a network connection established by the listener, the application passes the following information to EXTPROC:</p>
<ul>
<li>
<p>DLL name</p>
</li>
<li>
<p>External procedure name</p>
</li>
<li>
<p>Parameters (if necessary)</p>
</li>
</ul>
<p>EXTPROC then loads the DLL, runs the external procedure, and passes back any values returned by the external procedure.</p>
<p>If you overwrite default <code dir="ltr">listener.ora</code> and <code dir="ltr">tnsnames.ora</code> files, then you must manually configure the following files for the external procedure behavior described previously to occur:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\network\admin\listener.ora</code></p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\network\admin\tnsnames.ora</code></p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Additional security may be required for the listener in a production environment. See <a class="olink NETAG010" href="../../network.112/e41945/listenercfg.htm#NETAG010"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information.</div>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1005976"></a>
<div id="NTQRF483" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref716"></a><a id="sthref717"></a>Writing an External Procedure</h3>
<p>Using a third-generation programming language, you can write functions to be built into DLLs and started by EXTPROC. The following is a simple Microsoft Visual C++ example of an external procedure called <code dir="ltr">FIND_MAX</code>:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Because external procedures are built into DLLs, they must be explicitly exported. In this example, the <code dir="ltr">DLLEXPORT</code> storage class modifier exports the function <code dir="ltr">FIND_MAX</code> from a dynamic link library.</div>
<pre dir="ltr">
#include &lt;windows.h&gt;
#define NullValue -1
/*
  This function tests if x is at least as big as y.
*/
long __declspec(dllexport) find_max(long   x, 
                                short   x_indicator, 
long    y, 
short y_indicator, 
                                short *ret_indicator)
{
   /* It can be tricky to debug DLL's that are being called by a process
      that is spawned only when needed, as in this case.  
      Therefore try using the DebugBreak(); command.  
      This will start your debugger.  Uncomment the line with DebugBreak(); 
      in it and you can step right into your code.
   */
   /* DebugBreak();  */

   /* First check to see if you have any nulls. */
   /* Just return a null if either x or y is null. */

   if ( x_indicator==NullValue || y_indicator==NullValue) {
      *ret_indicator = NullValue;   
      return(0);
   } else { 
      *ret_indicator = 0;       /* Signify that return value is not null. */
      if (x &gt;= y) return x;
      else return y;
   }
}
</pre></div>
<!-- class="sect2" -->
<a id="BACBIJJJ"></a>
<div id="NTQRF484" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref718"></a><a id="sthref719"></a>Building a DLL</h3>
<p>After writing your external procedure(s) in a third-generation programming language, use the appropriate compiler and linker to build a DLL, making sure to export the external procedures as noted previously. See your compiler and linker documentation for instructions on building a DLL and exporting its functions.</p>
<p>You can build the external procedure <code dir="ltr">FIND_MAX</code>, created in <a href="#i1005976">"Writing an External Procedure"</a>, into a DLL called <code dir="ltr">extern.dll</code> by going to <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\rdbms\extproc</code> and typing <code dir="ltr">make</code>. After building the DLL, you can move it to any directory on your system.</p>
<p>Starting with Oracle9<span class="italic">i</span> Release 2, however, the default behavior of EXTPROC is to load DLLs only from <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\bin</code> or <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\lib</code>. To load DLLs from other directories, you must set environment variable <code dir="ltr">EXTPROC_DLLS</code> to a colon (:) separated list of DLL names qualified with their complete paths. The preferred way to set this environment variable is through the <code dir="ltr">ENVS</code> parameter in <code dir="ltr">listener.ora</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS010" href="../../appdev.112/e41502/adfns_externproc.htm#ADFNS010"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information on EXTPROC</div>
</div>
<!-- class="sect2" -->
<a id="i1006021"></a>
<div id="NTQRF485" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref720"></a><a id="sthref721"></a>Registering an External Procedure</h3>
<p>Once you have built a DLL containing your external procedure(s), you must register your external procedure(s) with Oracle Database:</p>
<p><a id="sthref722"></a><a id="sthref723"></a>To create a PL/SQL library to map to the DLL:</p>
<ol>
<li>
<p>Set environment variable <code dir="ltr">EXTPROC_DLLS</code> in the <code dir="ltr">ENVS</code> parameter in <code dir="ltr">listener.ora</code>. For example:</p>
<pre dir="ltr">
SID_LIST_LISTENER =
 (SID_LIST =
  (SID_DESC =
   (SID_NAME=PLSExtProc)
   (ENVS=EXTPROC_DLLS=C:\app\oracle\product\11.2.0\dbhome_1\rdbms\extproc\extern.dll)
   (ORACLE_HOME=C:\app\oracle\product\11.2.0\dbhome_1)
   (PROGRAM=extproc)
  )
 )
</pre></li>
<li>
<p>Start SQL*Plus:</p>
<pre dir="ltr">
C:\&gt; sqlplus
</pre></li>
<li>
<p>Connect to the database with appropriate <a href="glossary.htm#i432581"><span class="xrefglossterm">username</span></a> and password.</p>
</li>
<li>
<p>Create the PL/SQL library using the <code dir="ltr">CREATE LIBRARY</code> command:</p>
<pre dir="ltr">
SQL&gt; CREATE LIBRARY externProcedures AS 'C:\app\oracle\product\11.2.0\dbhome_1\rdbms\ extproc\extern.dll';
</pre>
<p>where <code dir="ltr">externProcedures</code> is an alias library (essentially a schema object in the database), and</p>
<pre dir="ltr">
C:\app\oracle\product\11.2.0\dbhome_1\rdbms\extproc\extern.dll
</pre>
<p>is the path to the Windows operating system <code dir="ltr">dllextern.dll</code>. This example uses <code dir="ltr">C:\app\oracle\product\11.2.0</code> as your Oracle base and <code dir="ltr">dbhome_1</code> as your Oracle home.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref724"></a><a id="sthref725"></a>The DBA must grant the <code dir="ltr">EXECUTE</code> <a href="glossary.htm#i432451"><span class="xrefglossterm">privilege</span></a> on the PL/SQL library to users who want to call the library's external procedure from PL/SQL or SQL.</div>
</li>
<li>
<p><a id="sthref726"></a><a id="sthref727"></a>Create a PL/SQL program unit specification.</p>
<p>Do this by writing a PL/SQL subprogram that uses the <code dir="ltr">EXTERNAL</code> clause instead of declarations and a <code dir="ltr">BEGIN...END</code> block. The <code dir="ltr">EXTERNAL</code> clause is the interface between PL/SQL and the external procedure. The <code dir="ltr">EXTERNAL</code> clause identifies the following information about the external procedure:</p>
<ul>
<li>
<p>Name</p>
</li>
<li>
<p>DLL alias</p>
</li>
<li>
<p>Programming language in which it was written</p>
</li>
<li>
<p>Calling standard (defaults to C if omitted)</p>
</li>
</ul>
<p>In the following example, <code dir="ltr">externProcedures</code> is a DLL alias. You need the <code dir="ltr">EXECUTE</code> privilege for this library. The external procedure to call is <code dir="ltr">find_max</code>. If enclosed in double quotation marks, it becomes case-sensitive. The <code dir="ltr">LANGUAGE</code> term specifies the language in which the external procedure was written.</p>
<pre dir="ltr">
CREATE OR REPLACE FUNCTION PLS_MAX(
  x BINARY_INTEGER,
  y BINARY_INTEGER)
RETURN BINARY_INTEGER AS
  EXTERNAL LIBRARY externProcedures
  NAME "find_max"
  LANGUAGE C
  PARAMETERS (
    x long,                  -- stores value of x
    x_INDICATOR short,       -- used to determine if x is a NULL value
    y long,                  -- stores value of y
    y_INDICATOR short,        -- used to determine if y is a NULL value
  RETURN INDICATOR short );  -- need to pass pointer to return value's
                             -- indicator variable to determine if NULL
-- This means that my function will be defined as:
    -- long max(long x, short x_indicator,
    -- long y, short y_indicator, short * ret_indicator)
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CIHJHDBE"></a>
<div id="NTQRF666" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Restricting Library-Related Privileges to Trusted Users Only</h3>
<p>The <code dir="ltr">CREATE LIBRARY</code>, <code dir="ltr">CREATE ANY LIBRARY</code>, <code dir="ltr">ALTER ANY LIBRARY</code>, and <code dir="ltr">EXECUTE ANY LIBRARY</code> privileges, and grants of <code dir="ltr">EXECUTE ON</code> <code dir="ltr"><span class="codeinlineitalic">library_name</span></code> convey a great deal of power to users. If you plan to create PL/SQL interfaces to libraries, only grant the <code dir="ltr">EXECUTE</code> privilege to the PL/SQL interface. Do not grant <code dir="ltr">EXECUTE</code> on the underlying library. You must have the <code dir="ltr">EXECUTE</code> privilege on a library to create the PL/SQL interface to it. However, users have this privilege implicitly on libraries that they create in their own schemas. Explicit grants of <code dir="ltr">EXECUTE ON</code> <code dir="ltr"><span class="codeinlineitalic">library_name</span></code> are rarely required. Only make an explicit grant of these privileges to trusted users, and never to the <code dir="ltr">PUBLIC</code> role.</p>
</div>
<!-- class="sect2" -->
<a id="i1006075"></a>
<div id="NTQRF486" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Executing an External Procedure</h3>
<p>To run an external procedure, you must call the PL/SQL program unit (that is, the alias for the external function) that registered the external procedure. These calls can appear in any of the following:</p>
<ul>
<li>
<p>Anonymous blocks</p>
</li>
<li>
<p>Standalone and packaged subprograms</p>
</li>
<li>
<p>Methods of an object type</p>
</li>
<li>
<p>Database triggers</p>
</li>
<li>
<p>SQL statements (calls to packaged functions only)</p>
</li>
</ul>
<p>In <a href="#i1006021">"Registering an External Procedure"</a>, PL/SQL function <code dir="ltr">PLS_MAX</code> registered external procedure <code dir="ltr">find_max</code><span class="bold">.</span> Follow these steps to run <code dir="ltr">find_max</code>:</p>
<ol>
<li>
<p>Call PL/SQL function <code dir="ltr">PLS_MAX</code> from a PL/SQL routine named <code dir="ltr">UseIt</code>:</p>
<pre dir="ltr">
SET SERVER OUTPUT ON
CREATE OR REPLACE PROCEDURE UseIt AS
                a integer;
                b integer;
                c integer;
BEGIN
                a := 1;
                b := 2;
                c := PLS_MAX(a,b);
                dbms_output.put_line('The maximum of '||a||' and '||b||' is  '||c);
END;
</pre></li>
<li>
<p>Run the routine:</p>
<pre dir="ltr">
SQL&gt; EXECUTE UseIt;
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHIBGAA"></a>
<div id="NTQRF487" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Multithreaded Agent Architecture<a id="sthref728"></a></h2>
<p>An agent process is started for each session to access a system at the same time leading to several thousand agent processes concurrently. The agent processes operate regardless of whether each individual agent process is actually active at the moment. Agent processes and open connections can consume a disproportionate amount of system resources. This problem is addressed by using multithreaded agent architecture.</p>
<p>The multithreaded agent architecture uses a pool of shared agent threads. The tasks requested by the user sessions are put in a queue and are picked up by the first available multithreaded agent thread. Because only a small percentage of user connections are active at a given moment, using a multithreaded architecture allows for more efficient use of system resources.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>Part III of <a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a></p>
</li>
<li>
<p>"Multithreaded Agents" in <a class="olink HETER005" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=HETER005"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1006102"></a>
<div id="NTQRF488" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref729"></a><a id="sthref730"></a>Debugging External Procedures</h2>
<p>Usually, when an external procedure fails, its C prototype is faulty. That is, the prototype does not match the one generated internally by PL/SQL. This can happen if you specify an incompatible C data type. For example, to pass an <code dir="ltr">OUT</code> parameter of type <code dir="ltr">REAL</code>, you must specify <code dir="ltr">float</code> <code dir="ltr">*</code>. Specifying <code dir="ltr">float</code>, <code dir="ltr">double</code> <code dir="ltr">*</code>, or any other C data type will result in a mismatch.</p>
<p>In such cases, you might get a <code dir="ltr">lost</code> <code dir="ltr">RPC</code> <code dir="ltr">connection</code> <code dir="ltr">to</code> <code dir="ltr">external</code> <code dir="ltr">procedure</code> <code dir="ltr">agent</code> error, which means that agent <code dir="ltr">extproc</code> terminated abnormally because the external procedure caused a core dump. To avoid errors when declaring C prototype parameters, refer to <a class="olink ADDCI" href="../../appdev.112/e10765/toc.htm"><span class="italic">Oracle Database Data Cartridge Developer's Guide.</span></a></p>
<div id="NTQRF489" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref731"></a>
<h3 class="sect2">Using Package DEBUG_EXTPROC</h3>
<p>To help you debug external procedures, PL/SQL provides utility package DEBUG_EXTPROC. To install the package, run script <code dir="ltr">dbgextp.sql</code>, which you can find in the PL/SQL demo directory.</p>
<p>To use the package, follow instructions in <code dir="ltr">dbgextp.sql</code>. Your Oracle Database account must have <code dir="ltr">EXECUTE</code> privileges on the package and <code dir="ltr">CREATE</code> <code dir="ltr">LIBRARY</code> privileges.</p>
<p>To debug external procedures:</p>
<ol>
<li>
<p>From Windows Task Manager, in the Processes dialog, select <span class="bold">ExtProc.exe</span>.</p>
</li>
<li>
<p>Right click, and select <span class="bold">Debug</span>.</p>
</li>
<li>
<p>Click <span class="bold">OK</span> in the message window.</p>
<p>If you have built your DLL in a debug fashion with Microsoft Visual C++, then Visual C++ is activated.</p>
</li>
<li>
<p>In the Visual C++ window, select <span class="bold">Edit</span> <code dir="ltr">&gt;</code> <span class="bold">Breakpoints</span>.</p>
<p>Use the breakpoint identified in <code dir="ltr">dbgextp.sql</code> in the PL/SQL demo directory.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\rdbms\extproc\readme.doc</code> (explains how to run the sample and provides debugging advice)</p>
</li>
<li>
<p><a class="olink LNPLS" href="../../appdev.112/e25519/toc.htm"><span class="italic">Oracle Database PL/SQL Language Reference</span></a></p>
</li>
<li>
<p><a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a></p>
</li>
<li>
<p>"Calling External Procedures" in <a class="olink ADFNS010" href="../../appdev.112/e41502/adfns_externproc.htm#ADFNS010"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a></p>
</li>
<li>
<p><a class="olink ADDCI" href="../../appdev.112/e10765/toc.htm"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a></p>
</li>
</ul>
</div>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BACCGJBI"></a>
<div id="NTQRF490" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref732"></a><a id="sthref733"></a>Accessing Text Files with UTL_FILE</h2>
<p>Package <code dir="ltr">UTL_FILE</code> allows your PL/SQL programs to read and write operating system text files. It provides a restricted version of standard operating system stream file I/O, including open, put, get, and close operations. When you want to read or write a text file, you call the function <code dir="ltr">fopen</code>, which returns a file handle for use in subsequent procedure calls. For example, the procedure <code dir="ltr">put_line</code> writes a text string and line terminator to an open file, and the procedure <code dir="ltr">get_line</code> reads a line of text from an open file into an output buffer.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS069" href="../../appdev.112/e40758/u_file.htm#ARPLS069"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on <code dir="ltr">UTL_FILE</code></div>
<p><code dir="ltr">FSEEK</code>, a <code dir="ltr">UTL_FILE</code> subprogram, adjusts the file pointer forward or backward within the file by the number of bytes specified. In order for <code dir="ltr">UTL_FILE.FSEEK</code> to work correctly, the lines in the file must have platform-specific line terminator characters. On Windows platforms the correct line terminator characters are <code dir="ltr">&lt;CR&gt;&lt;LF&gt;</code>.</p>
</div>
<!-- class="sect1" -->
<a id="i1006153"></a>
<div id="NTQRF491" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref734"></a><a id="sthref735"></a>Accessing Web Data with Intercartridge Exchange</h2>
<p>This section discusses the following topics:</p>
<ul>
<li>
<p><a href="#i1006172">Configuring Intercartridge Exchange</a></p>
</li>
<li>
<p><a href="#i1006217">Using Intercartridge Exchange</a></p>
</li>
<li>
<p><a href="#i1006289">UTL_HTTP Exception Conditions</a></p>
</li>
<li>
<p><a href="#BACGGHHD">Exception Conditions and Error Messages</a></p>
</li>
</ul>
<a id="i1006172"></a>
<div id="NTQRF492" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref736"></a>Configuring Intercartridge Exchange</h3>
<p>You must add a parameter to the <a href="glossary.htm#i432474"><span class="xrefglossterm">registry</span></a> before using Intercartridge Exchange.</p>
<ol>
<li>
<p>Start Registry Editor from the command prompt:</p>
<pre dir="ltr">
C:\&gt; regedit
</pre>
<p>The Registry Editor window appears.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For another way to configure your registry, see <a href="registry.htm#i1006146">"Managing Registry Parameters with regedit"</a></div>
</li>
<li>
<p>Add <code dir="ltr">HTTP_PROXY</code> to the registry subkey of the Oracle home directory that you are using. The location of this parameter is determined by how many Oracle home directories are on your computer. If you have only one home directory, add <code dir="ltr">HTTP_PROXY</code> to</p>
<pre dir="ltr">
HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE\HOME0. 
</pre>
<p>If you have multiple home directory, add it to</p>
<pre dir="ltr">
HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE\KEY_<span class="italic">HOME_NAME</span> 
</pre></li>
<li>
<p>Choose <span class="bold">Add Value</span> from the <span class="bold">Edit</span> menu.</p>
<p>The Add Value dialog appears.</p>
<img width="350" height="157" src="img/http.gif" alt="Description of http.gif follows" /><br />
<a id="sthref737" href="img_text/http.htm">Description of the illustration http.gif</a><br />
<br /></li>
<li>
<p>Type <code dir="ltr">HTTP_PROXY</code> in the <span class="bold">Value Name</span> field and <code dir="ltr">REG_SZ</code> in the <span class="bold">Data Type</span> field.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
<li>
<p>Type <code dir="ltr">www-proxy.</code><code dir="ltr"><span class="codeinlineitalic">your-site</span></code> in the <span class="bold">String</span> field.</p>
<img width="379" height="115" src="img/http2.gif" alt="Description of http2.gif follows" /><br />
<a id="sthref738" href="img_text/http2.htm">Description of the illustration http2.gif</a><br />
<br /></li>
</ol>
<p>In this example, the Web site is <code dir="ltr">marketing.com</code>. You will enter the domain name of your actual Web site.</p>
</div>
<!-- class="sect2" -->
<a id="i1006217"></a>
<div id="NTQRF493" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref739"></a><a id="sthref740"></a><a id="sthref741"></a><a id="sthref742"></a><a id="sthref743"></a>Using Intercartridge Exchange</h3>
<p>Intercartridge Exchange enables you to use a stored package called <code dir="ltr">UTL_HTTP</code> to make Hypertext Transfer Protocol (HTTP) calls from PL/SQL, SQL, and SQL*Plus statements.</p>
<p><code dir="ltr">UTL_HTTP</code> can do both of the following:</p>
<ul>
<li>
<p>Access data on the Internet</p>
</li>
<li>
<p>Call Oracle Web Application Server cartridges</p>
</li>
</ul>
<p><code dir="ltr">UTL_HTTP</code> contains two similar entry points, known as packaged functions, that turn PL/SQL and SQL statements into HTTP callouts:</p>
<ul>
<li>
<p><code dir="ltr">UTL_HTTP.REQUEST</code></p>
</li>
<li>
<p><code dir="ltr">UTL_HTTP.REQUEST_PIECES</code></p>
</li>
</ul>
<p>Both packaged functions perform the following tasks:</p>
<ul>
<li>
<p>Take a string universal resource locator (URL) of a site</p>
</li>
<li>
<p>Contact that site</p>
</li>
<li>
<p>Return data (typically HTML) obtained from that site</p>
</li>
</ul>
<p>Declarations to use with both packaged functions are described in the following subsections.</p>
<div id="NTQRF494" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref744"></a>
<h4 class="sect3"><a id="sthref745"></a><a id="sthref746"></a>Packaged Function UTL_HTTP.REQUEST</h4>
<p><code dir="ltr">UTL_HTTP.REQUEST</code> uses a URL as its argument and returns up to the first 2000 bytes of data retrieved from that URL. Specify <code dir="ltr">UTL_HTTP.REQUEST</code> as follows:</p>
<pre dir="ltr">
FUNCTION REQUEST (URL IN VARCHAR2) RETURN VARCHAR2;
</pre>
<p>To use <code dir="ltr">UTL_HTTP.REQUEST</code> from SQL*Plus, enter:</p>
<pre dir="ltr">
SQL&gt; SELECT UTL_HTTP.REQUEST('HTTP://WWW.ORACLE.COM/') FROM DUAL;
</pre>
<p>which returns:</p>
<pre dir="ltr">
UTL_HTTP.REQUEST('HTTP://WWW.ORACLE.COM/')                         
        ------------------------------------------------------
&lt;html&gt;
&lt;head&gt;&lt;title&gt;Oracle Home Page&lt;/title&gt;
&lt;!--changed Jan. 16, 19
1 row selected.
</pre></div>
<!-- class="sect3" -->
<div id="NTQRF495" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref747"></a>
<h4 class="sect3"><a id="sthref748"></a><a id="sthref749"></a>Packaged Function UTL_HTTP.REQUEST_PIECES</h4>
<p><code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> uses a URL as its argument and returns a PL/SQL table of 2000 bytes of data retrieved from the given URL. The final element can be shorter than 2000 characters. The <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> return type is a PL/SQL table of type <code dir="ltr">UTL_HTTP.HTML_PIECES</code>.</p>
<p><code dir="ltr">UTL_HTTP.REQUEST_PIECES</code>, which uses type <code dir="ltr">UTL_HTTP.HTML_PIECES</code>, is specified as:</p>
<pre dir="ltr">
type html_pieces is table of varchar2(2000) index by binary_integer;
function request_pieces (url in varchar2,
  max_pieces natural default 32767)
return html_pieces;
</pre>
<p>A call to <code dir="ltr">REQUEST_PIECES</code> can look like this example. Note the use of PL/SQL table method <code dir="ltr">COUNT</code> to discover the number of pieces returned; it can be zero or more:</p>
<pre dir="ltr">
declare pieces utl_http.html_pieces;
begin 
  pieces := utl_http.request_pieces('http://www.oracle.com/'); 
   for i in 1 .. pieces.count loop
     .... -- process each piece
   end loop;
end;
</pre>
<p>The second argument to <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> (<code dir="ltr">MAX_PIECES</code>) is optional. <code dir="ltr">MAX_PIECES</code> is the maximum number of pieces (each 2000 characters in length, except for the last, which can be shorter) that <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> returns. If provided, that argument is usually a positive integer.</p>
<p>For example, the following block retrieves up to 100 pieces of data (each 2000 bytes, except perhaps the last) from the URL. The block prints the number of pieces retrieved and the total length, in bytes, of the data retrieved.</p>
<pre dir="ltr">
set serveroutput on

declare 
  x utl_http.html_pieces;
begin
  x := utl_http.request_pieces('http://www.oracle.com/', 100);
  dbms_output.put_line(x.count || ' pieces were retrieved.');
  dbms_output.put_line('with total length ');
  if x.count &lt; 1 
  then dbms_output.put_line('0');
  else dbms_output.put_line
((2000 * (x.count - 1)) + length(x(x.count)));
  end if;
end;

which displays:
Statement processed.
4 pieces were retrieved.
with total length 
7687
</pre>
<p>Elements of the PL/SQL table returned by <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> are successive pieces of data obtained from the HTTP request to that URL.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006289"></a>
<div id="NTQRF496" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref750"></a><a id="sthref751"></a><a id="sthref752"></a>UTL_HTTP Exception Conditions</h3>
<p>This subsection describes exceptions (errors) that can be raised by packaged functions <code dir="ltr">UTL_HTTP.REQUEST</code> and <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code>.</p>
<div id="NTQRF497" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref753"></a>
<h4 class="sect3">UTL_HTTP.REQUEST</h4>
<p><code dir="ltr">PRAGMA</code> <code dir="ltr">RESTRICT_REFERENCES</code> enables display of exceptions:</p>
<pre dir="ltr">
create or replace package utl_http is
function request (url in varchar2) return varchar2;
pragma restrict_references (request, wnds, rnds, wnps, rnps);
</pre></div>
<!-- class="sect3" -->
<div id="NTQRF498" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref754"></a>
<h4 class="sect3">UTL_HTTP.REQUEST_PIECES</h4>
<p><code dir="ltr">PRAGMA</code> <code dir="ltr">RESTRICT_REFERENCES</code> enables display of exceptions:</p>
<pre dir="ltr">
create or replace package utl_http is
type html_pieces is table of varchar2(2000) index by binary_integer;
function request_pieces (url in varchar2, 
   max_pieces natural default 32767)
return html_pieces;
pragma restrict_references (request_pieces, wnds, rnds, wnps, rnps);
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BACGGHHD"></a>
<div id="NTQRF499" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref755"></a><a id="sthref756"></a>Exception Conditions and Error Messages</h3>
<p>If initialization of the HTTP callout subsystem fails for environmental reasons (such as lack of available memory), then exception <code dir="ltr">UTL_HTTP.INIT_FAILED</code> is raised:</p>
<pre dir="ltr">
init_failed exception;
</pre>
<p>If the HTTP call fails due to failure of the HTTP daemon or because the argument to <code dir="ltr">REQUEST</code> or <code dir="ltr">REQUEST_PIECES</code> cannot be interpreted as a URL (because it is <code dir="ltr">NULL</code> or has non-HTTP syntax), then exception <code dir="ltr">UTL_HTTP.REQUEST_FAILED</code> is raised<code dir="ltr">:</code></p>
<pre dir="ltr">
request_failed exception;
</pre>
<p>Unless explicitly caught by an exception handler, these first two exceptions are reported by a generic message that shows them as "user-defined" exceptions, even though they are defined in this system package:</p>
<pre dir="ltr">
ORA-06510: PL/SQL: unhandled user-defined exception
</pre>
<p>If any other exception is raised during processing of the HTTP request (for example, an out-of-memory error), then function <code dir="ltr">UTL_HTTP.REQUEST</code> or <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> reraises that exception.</p>
<p>If no response is received from a request to the given URL, because the function made no contact with a site corresponding to that URL, then a formatted HTML error message may be returned:</p>
<pre dir="ltr">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Error Message&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;Fatal Error 500&lt;/H1&gt;
Can't Access Document: http://home.nothing.comm.
&lt;P&gt;
&lt;B&gt;Reason:&lt;/B&gt; Can't locate remote host:  home.nothing.comm.
&lt;P&gt;
&lt;P&gt;&lt;HR&gt;
&lt;ADDRESS&gt;&lt;A HREF="http://www.w3.org"&gt;
CERN-HTTPD3.0A&lt;/A&gt;&lt;/ADDRESS&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</pre>
<p>If <code dir="ltr">UTL_HTTP.REQUEST</code> or <code dir="ltr">UTL_HTTP.REQUEST_PIECES</code> raises an exception or returns an HTML-formatted error message, yet you believe that the URL argument is correct, try contacting that same URL with a browser to verify network availability from your computer.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2306">
<tr>
<td class="cellalignment2313">
<table class="cellalignment2311">
<tr>
<td class="cellalignment2310"><a href="registry.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2310"><a href="ap_doc.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2315">
<table class="cellalignment2309">
<tr>
<td class="cellalignment2310"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2310"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2310"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2310"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2310"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2310"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
