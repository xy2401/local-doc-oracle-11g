<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Database Change Notification Support</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T19:24:37Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Data Provider for .NET Developer's Guide" />
<meta name="dcterms.identifier" content="E23174-03" />
<meta name="dcterms.isVersionOf" content="ODPNT" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="featAQ.htm" title="Previous" type="text/html" />
<link rel="Next" href="featSafeType.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23174.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">30/158</span> <!-- End Header --><a id="CJAGGGHA"></a>
<div id="ODPNT0025" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Database Change Notification Support<a id="sthref625"></a><a id="sthref626"></a><a id="sthref627"></a><a id="sthref628"></a></h1>
<p>Oracle Data Provider for .NET provides a notification framework that supports Continuous Query Notification, enabling applications to receive client-side notifications when there is a change in a query result set, schema objects, or the state of the database, even if no Oracle Data Provider for .NET database connection exists. Using Continuous Query Notification, an application can maintain the validity of the client-side cache (for example, the ADO.NET <code>DataSet</code>) easily.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The ODP.NET Database Change Notification feature uses the Continuous Query Notification feature in the Oracle database.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Database change notification is not supported in a .NET stored procedure.</div>
<p>Using the notification framework, applications can specify a query result set as a registered query for notification request on the database, and create this notification registration to maintain the validity of the query result set. When there is a change on the database that could affect the client-side cache's query results, the notification framework notifies the application.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The content of a change notification is referred to as an <span class="italic">invalidation message</span>. It indicates that the query result set is now invalid and provides information about the changes.</div>
<p>Based on the information provided by the invalidation message, the application can then act accordingly. For example, the application might need to refresh its own copy of the data for the registered query that is stored locally in the application.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a registered object is dropped from the database and a new one is created with the same name in the same schema, re-registration is required to receive notifications for the newly created object.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for further information on Continuous Query Notification</div>
<p>By default, Windows Vista and Windows XP Service Pack 2 and later enable the Windows Firewall to block virtually all TCP network ports to incoming connections. Therefore, for Continuous Query Notification to work properly on these operating systems, the Windows Firewall must be configured properly to allow specific executables to open specific ports.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NTQRF060" href="../../win.112/e10845/config.htm#NTQRF060"><span class="italic">Oracle Database Platform Guide for Windows</span></a> for details on configuring the Windows Firewall</div>
<p>Beginning with Oracle Database 11<span class="italic">g</span> and ODP.NET 11<span class="italic">g</span> (11.1), Database Change Notification queries can be query-based (default) or object-based. The query-based registrations allow ODP.NET to notify applications when the selected rows have changed in the database. The object-based registrations allow ODP.NET to notify applications for any changes that occur in the table(s) containing the selected rows.</p>
<p>Query-based registrations have two modes: guaranteed mode and best-effort mode. In guaranteed mode, any database change notification ensures that a change occurred to something contained in the queried result set. However, if a query is complex, then it cannot be registered in guaranteed mode. Best-effort mode is used in such cases.</p>
<p>Best-effort mode simplifies the query for query-based registration. No notifications are lost from the simplification. However, the simplification may cause false positives, as the simpler version's query result could change when the original query result would not.There still remain some restrictions on which queries can have best-effort mode query-based registrations. In such cases, developers can use object-based registrations, which can register most query types. Object-based registrations generate notifications when the query object changes, even if the actual query result does not. This also means that object-based registrations are more prone to false positives than query-based registrations. Developers should be aware of the relative strengths and weaknesses of each database change notification option and choose the one that best suits their requirements.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="InstallConfiguringPort.htm#BABCAFAJ">"Configuring a Port to Listen for Database Notifications"</a></p>
</li>
<li>
<p><a class="olink ADFNS018" href="../../appdev.112/e41502/adfns_cqn.htm#ADFNS018"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for further details on the requirements for Continuous Query Notification</p>
</li>
</ul>
</div>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABIGCJJ">Database Change Notification Classes</a></p>
</li>
<li>
<p><a href="#BABIAJAI">Supported Operations</a></p>
</li>
<li>
<p><a href="#BABBIAIB">Requirements of Notification Registration</a></p>
</li>
<li>
<p><a href="#BABFIFDJ">Using Database Change Notification</a></p>
</li>
<li>
<p><a href="#BABDGFBH">Best Practice Guidelines and Performance Considerations</a></p>
</li>
</ul>
<a id="BABIGCJJ"></a>
<div id="ODPNT410" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Database Change Notification Classes<a id="sthref629"></a><a id="sthref630"></a><a id="sthref631"></a><a id="sthref632"></a><a id="sthref633"></a><a id="sthref634"></a></h2>
<p>The following classes are associated with Continuous Query Notification Support:</p>
<ul>
<li>
<p><code>OracleDependency</code></p>
<p>Represents a dependency between an application and an Oracle database based on the database events which the application is interested in. It contains information about the dependency and provides the mechanism to notify the application when specified database events occurs. The <code>OracleDependency</code> class is also responsible for creating the notification listener to listen for database notifications. There is only one database notification listener for each application domain. This notification listener terminates when the application process terminates.</p>
<p>The dependency between the application and the database is not established when the <code>OracleDependency</code> object is created. The dependency is established when the command that is associated with this <code>OracleDependency</code> object is executed. That command execution creates a database change notification registration in the database.</p>
<p>When a change has occurred in the database, the <code>HasChanges</code> property of the <code>OracleDependency</code> object is set to true. Furthermore, if an event handler was registered with the <code>OnChange</code> event of the <code>OracleDependency</code> object, the registered event handler function will be invoked.</p>
</li>
<li>
<p><code>OracleNotificationRequest</code></p>
<p>Represents a notification request to be registered in the database. It contains information about the request and the properties of the notification.</p>
</li>
<li>
<p><code>OracleNotificationEventArgs</code></p>
<p>Represents the <a href="glossary.htm#CBAEBIDG"><span class="xrefglossterm">invalidation message</span></a> generated for a notification when a specified database event occurs and contains details about that database event.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleDependencyClass.htm#BBABBDEF">"OracleDependency Class"</a></p>
</li>
<li>
<p><a href="OracleNotificationRequestClass.htm#BBACAAED">"OracleNotificationRequest Class"</a></p>
</li>
<li>
<p><a href="OracleNotificationEventArgsClass.htm#BBAFGFEJ">"OracleNotificationEventArgs Class"</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABIAJAI"></a>
<div id="ODPNT411" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Supported Operations<a id="sthref635"></a><a id="sthref636"></a><a id="sthref637"></a><a id="sthref638"></a><a id="sthref639"></a><a id="sthref640"></a><a id="sthref641"></a><a id="sthref642"></a></h2>
<p>The ODP.NET notification framework in conjunction with Continuous Query Notification supports the following activities:</p>
<ul>
<li>
<p>Creating a notification registration by:</p>
<ul>
<li>
<p>Creating an <code>OracleDependency</code> instance and binding it to an <code>OracleCommand</code> instance.</p>
</li>
</ul>
</li>
<li>
<p>Grouping multiple notification requests into one registration by:</p>
<ul>
<li>
<p>Using the <code>OracleDependency.AddCommandDependency</code> method.</p>
</li>
<li>
<p>Setting the <code>OracleCommand.Notification</code> request using the same <code>OracleNotificationRequest</code> instance.</p>
</li>
</ul>
</li>
<li>
<p>Registering for Database Change Notification by:</p>
<ul>
<li>
<p>Executing the <code>OracleCommand</code>. If either the notification property is null or <code>NotificationAutoEnlist</code> is false, the notification will not be made.</p>
</li>
</ul>
</li>
<li>
<p>Removing notification registration by:</p>
<ul>
<li>
<p>Using the <code>OracleDependency.RemoveRegistration</code> method.</p>
</li>
<li>
<p>Setting the <code>Timeout</code> property in the <code>OracleNotificationRequest</code> instance before the registration is created.</p>
</li>
<li>
<p>Setting the <code>IsNotifiedOnce</code> property to <code>true</code> in the <code>OracleNotificationRequest</code> instance before the registration is created. The registration is removed once a database notification is sent.</p>
</li>
</ul>
</li>
<li>
<p>Ensuring Change Notification Persistence by:</p>
<ul>
<li>
<p>Specifying whether or not the invalidation message is queued persistently in the database before delivery. If an invalidation message is to be stored persistently in the database, then the change notification is guaranteed to be sent. If an invalidation message is stored in an in-memory queue, the change notification can be received faster, however, it could be lost upon database shutdown or crashes.</p>
</li>
</ul>
</li>
<li>
<p>Retrieving notification information including:</p>
<ul>
<li>
<p>The changed object name.</p>
</li>
<li>
<p>The schema name of the changed object.</p>
</li>
<li>
<p>Database events that cause the notification, such as insert, delete, and so on.</p>
</li>
<li>
<p>The <code>RowID</code> of the modified object row.</p>
<p>In Oracle SQL, the <code>ROWIDTOCHAR(ROWID)</code> and <code>ROWIDTONCHAR(ROWID)</code> functions convert a <code>ROWID</code> value to <code>VARCHAR2</code> and <code>NVARCHAR</code> data types, respectively. If these functions are used within a SQL statement, <code>ROWID</code>s are not returned in the <code>OracleNotificationEventArgs</code> object that is passed to the database change notification callback.</p>
</li>
</ul>
</li>
<li>
<p>Defining the listener port number.</p>
<p>By default, the static <code>OracleDependency.Port</code> property is set to <code>-1</code>. This indicates that the ODP.NET listens on a port that is randomly picked when ODP.NET registers a database change notification request for the first time during the execution of an application.</p>
<p>ODP.NET creates only one listener that listens on one port within an application domain. Once ODP.NET starts the listener, the port number cannot be changed; Changes to the static <code>OracleDependency.Port</code> property will generate an error if a listener has already been created.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleCommandClass.htm#i996876">"OracleCommand Class"</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#BBAFJCEG">"Notification"</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#BBAEEAEB">"NotificationAutoEnlist"</a></p>
</li>
<li>
<p><a href="OracleDependencyClass.htm#BBABBDEF">"OracleDependency Class"</a></p>
</li>
<li>
<p><a href="OracleNotificationEventArgsClass.htm#BBAFGFEJ">"OracleNotificationEventArgs Class"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABBIAIB"></a>
<div id="ODPNT412" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Requirements of Notification Registration<a id="sthref643"></a><a id="sthref644"></a></h2>
<p>The connected user must have the <code>CHANGE</code> <code>NOTIFICATION</code> privilege to create a notification registration.</p>
<p>This SQL statement grants the <code>CHANGE</code> <code>NOTIFICATION</code> privilege:</p>
<pre>
grant change notification to <span class="italic">user name</span>
</pre>
<p>This SQL statement revokes the <code>CHANGE</code> <code>NOTIFICATION</code> privilege:</p>
<pre>
revoke change notification from <span class="italic">user name</span>
</pre></div>
<!-- class="sect2" -->
<a id="BABFIFDJ"></a>
<div id="ODPNT413" class="sect2">
<h2 class="sect2">Using Database Change Notification</h2>
<p>This section describes what the application should do, and the flow of the process, when an application uses Continuous Query Notification to receive notifications for any changes in the registered query result set.</p>
<div id="ODPNT414" class="sect3"><a id="sthref645"></a>
<h3 class="sect3">Application Steps</h3>
<p>The application should do the following:</p>
<ol>
<li>
<p>Create an <code>OracleDependency</code> instance.</p>
</li>
<li>
<p>Assign an event handler to the <code>OracleDependency.OnChange</code> event property if the application wishes to have an event handler invoked when database changes are detected. Otherwise, the application can choose to poll on the <code>HasChanges</code> property of the <code>OracleDependency</code> object. This event handler is invoked when the change notification is received.</p>
</li>
<li>
<p>Set the port number for the listener to listen on. The application can specify the port number for one notification listener to listen on. If the application does not specify a port number, a random one is used by the listener.</p>
</li>
<li>
<p>Bind the <code>OracleDependency</code> instance to an <code>OracleCommand</code> instance that contains the actual query to be executed. Internally, the Continuous Query Notification request (an <code>OracleNotificationRequest</code> instance) is created and assigned to the <code>OracleCommand.Notification</code> property.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div id="ODPNT415" class="sect3"><a id="sthref646"></a>
<h3 class="sect3">Flow of Notification Process</h3>
<ol>
<li>
<p>When the command associated with the notification request is executed, the notification registration is created in the database. The command execution must return a result set, or contain one or more <code>REF</code> cursors for a PL/SQL stored procedure.</p>
</li>
<li>
<p>ODP.NET starts the application listener on the first successful notification registration.</p>
</li>
<li>
<p>When a change related to the registration occurs in the database, the application is notified through the event delegate assigned to the <code>OracleDependency.OnChange</code> event property, or the application can poll the <code>OracleDependency.HasChanges</code> property.</p>
</li>
</ol>
<p>The following example demonstrates the database change notification feature.</p>
<pre>
// Database Setup
// NOTE: unless the following SQL command is executed, 
// ORA-29972 will be obtained from running this sample
/*
grant change notification to scott;
*/
using System;
using System.Threading;
using System.Data;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
 
//This sample shows the database change notification feature in ODP.NET.
//Application specifies to get a notification when emp table is updated.
//When emp table is updated, the application will get a notification 
//through an event handler.
namespace NotificationSample 
{
  public class MyNotificationSample 
  {
    public static bool IsNotified = false;
 
    public static void Main(string[] args) 
    {
      //To Run this sample, make sure that the change notification privilege
      //is granted to scott.
      string constr = "User Id=scott;Password=tiger;Data Source=oracle";
      OracleConnection con = null;
      OracleDependency dep = null;
 
      try
      {
        con = new OracleConnection(constr);
        OracleCommand    cmd = new OracleCommand("select * from emp", con);
        con.Open();
 
        // Set the port number for the listener to listen for the notification
        // request
        OracleDependency.Port = 1005; 
 
        // Create an OracleDependency instance and bind it to an OracleCommand
        // instance.
        // When an OracleDependency instance is bound to an OracleCommand
        // instance, an OracleNotificationRequest is created and is set in the
        // OracleCommand's Notification property. This indicates subsequent 
        // execution of command will register the notification.
        // By default, the notification request is using the Database Change
        // Notification.
        dep = new OracleDependency(cmd);
 
        // Add the event handler to handle the notification. The 
        // OnMyNotification method will be invoked when a notification message
        // is received from the database
        dep.OnChange += 
          new OnChangeEventHandler(MyNotificationSample.OnMyNotificaton);
 
        // The notification registration is created and the query result sets 
        // associated with the command can be invalidated when there is a 
        // change.  When the first notification registration occurs, the 
        // notification listener is started and the listener port number 
        // will be 1005.
        cmd.ExecuteNonQuery();
 
        // Updating emp table so that a notification can be received when
        // the emp table is updated.
        // Start a transaction to update emp table
        OracleTransaction txn = con.BeginTransaction();
        // Create a new command which will update emp table
        string updateCmdText = 
          "update emp set sal = sal + 10 where empno = 7782";
        OracleCommand updateCmd = new OracleCommand(updateCmdText, con);
        // Update the emp table
        updateCmd.ExecuteNonQuery();
        //When the transaction is committed, a notification will be sent from
        //the database
        txn.Commit();
      }
      catch (Exception e)
      {
        Console.WriteLine(e.Message);
      }
 
      con.Close();
      // Loop while waiting for notification
      while(MyNotificationSample.IsNotified == false)
      {
        Thread.Sleep(100);
      }
    }
 
    public static void OnMyNotificaton(object src, 
      OracleNotificationEventArgs arg)
    {
      Console.WriteLine("Notification Received");
      DataTable changeDetails = arg.Details;
      Console.WriteLine("Data has changed in {0}", 
        changeDetails.Rows[0]["ResourceName"]);
      MyNotificationSample.IsNotified = true;
    }
  }
}
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDGFBH"></a>
<div id="ODPNT416" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Best Practice Guidelines and Performance Considerations<a id="sthref647"></a><a id="sthref648"></a></h2>
<p>This section provides guidelines for working with Continuous Query Notification and the ODP.NET notification framework, and discusses the performance impacts.Every change notification registration consumes database memory, storage or network resources, or some combination thereof. The resource consumption further depends on the volume and size of the <a href="glossary.htm#CBAEBIDG"><span class="xrefglossterm">invalidation message</span></a>. In order to scale well with a large number of mid-tier clients, Oracle recommends that the client implement these best practices:</p>
<ul>
<li>
<p>Few and mostly read-only tables</p>
<p>There should be few registered objects, and these should be mostly read-only, with very infrequent invalidations. If an object is extremely volatile, then a large number of invalidation notifications are sent, potentially requiring a lot of space (in memory or on disk) in the invalidation queue. This is also true if a large number of objects are registered.</p>
</li>
<li>
<p>Few rows updated for each table</p>
<p>Transactions should update (or insert or delete) only a small number of rows within the registered tables. Depending on database resources, a whole table could be invalidated if too many rows are updated within a single transaction, for a given table.</p>
<p>This policy helps to contain the size of a single invalidation message, and reduces disk storage for the invalidation queue.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for further information on Continuous Query Notification</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2332">
<tr>
<td class="cellalignment2339">
<table class="cellalignment2337">
<tr>
<td class="cellalignment2336"><a href="featAQ.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2336"><a href="featSafeType.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2341">
<table class="cellalignment2335">
<tr>
<td class="cellalignment2336"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2336"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2336"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2336"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2336"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2336"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
