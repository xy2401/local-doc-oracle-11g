<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OracleCommand Object</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T19:24:37Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Data Provider for .NET Developer's Guide" />
<meta name="dcterms.identifier" content="E23174-03" />
<meta name="dcterms.isVersionOf" content="ODPNT" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="featLINQ.htm" title="Previous" type="text/html" />
<link rel="Next" href="featTypes.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23174.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">21/158</span> <!-- End Header --><a id="i1007222"></a>
<div id="ODPNT248" class="sect1">
<h1 class="sect1">OracleCommand Object<a id="sthref298"></a><a id="sthref299"></a><a id="sthref300"></a></h1>
<p>The <code>OracleCommand</code> object represents SQL statements or stored procedures executed on Oracle Database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Optimizer hint syntax in the form <code>--+ ...</code> is not supported. ODP.NET supports this syntax: <code>/*+ ... */</code>.</div>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#i1007235">Transactions</a></p>
</li>
<li>
<p><a href="#i1007242">Parameter Binding</a></p>
</li>
<li>
<p><a href="#CIHCAFIG">Statement Caching</a></p>
</li>
<li>
<p><a href="#CJAFGIDD">Self-Tuning</a></p>
</li>
</ul>
<a id="i1007235"></a>
<div id="ODPNT249" class="sect2">
<h2 class="sect2">Transactions<a id="sthref301"></a><a id="sthref302"></a></h2>
<p>Oracle Database starts a transaction only in the context of a connection. Once a transaction starts, all the successive command execution on that connection run in the context of that transaction. Transactions can be started only on an <code>OracleConnection</code> object, and the read-only <code>Transaction</code> property on the <code>OracleCommand</code> object is implicitly set by the <code>OracleConnection</code> object. Therefore, the application cannot set the <code>Transaction</code> property, nor does it need to.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Transactions are not supported in a .NET stored procedure.</div>
<p>Explicit transactions are required with SQL statements containing <code>"FOR</code> <code>UPDATE"</code> and <code>"RETURNING"</code> clauses. This is not necessary if global transactions are used.</p>
</div>
<!-- class="sect2" -->
<a id="i1007242"></a>
<div id="ODPNT250" class="sect2">
<h2 class="sect2">Parameter Binding<a id="sthref303"></a><a id="sthref304"></a><a id="sthref305"></a></h2>
<p>When the <code>DbType</code> property of an <code>OracleParameter</code> object is set, the <code>OracleDbType</code> property of the <code>OracleParameter</code> object changes accordingly, or vice versa. The parameter set last prevails.An application can bind the data and have ODP.NET infer both the <code>DbType</code> and <code>OracleDbType</code> properties from the .NET type of the parameter value.ODP.NET allows applications to obtain an output parameter as either a .NET Framework type or an ODP.NET type. The application can specify which type to return for an output parameter by setting the <code>DbType</code> property of the output parameter (.NET type) or the <code>OracleDbType</code> property (ODP.NET type) of the <code>OracleParameter</code> object. For example, if the output parameter is set as a <code>DbType.String</code> type by setting the <code>DbType</code> property, the output data is returned as a .NET String type. On the other hand, if the parameter is set as an <code>OracleDbType.Char</code> type by setting the <code>OracleDbType</code> property, the output data is returned as an <code>OracleString</code> type. If both <code>DbType</code> and <code>OracleDbType</code> properties are set before the command execution, the last setting takes affect.</p>
<p>ODP.NET populates <code>InputOutput</code>, <code>Output</code>, and <code>ReturnValue</code> parameters with the Oracle data, through the execution of the following <code>OracleCommand</code> methods:</p>
<ul>
<li>
<p><code>ExecuteReader</code></p>
</li>
<li>
<p><code>ExecuteNonQuery</code></p>
</li>
<li>
<p><code>ExecuteScalar</code></p>
</li>
</ul>
<p>An application should not bind a value for output parameters; it is the responsibility of ODP.NET to create the value object and populate the <code>OracleParameter</code> <code>Value</code> property with the object.</p>
<p>When binding by position (default) to a function, ODP.NET expects the return value to be bound first, before any other parameters.</p>
<p>This section describes the following:</p>
<ul>
<li>
<p><a href="#CIHJBGEE">Data Types BINARY_FLOAT and BINARY_DOUBLE</a></p>
</li>
<li>
<p><a href="#i1007297">OracleDbType Enumeration Type</a></p>
</li>
<li>
<p><a href="#i1007424">Inference of DbType, OracleDbType, and .NET Types</a></p>
</li>
<li>
<p><a href="#BABBDHBB">PL/SQL Associative Array Binding</a></p>
</li>
<li>
<p><a href="#i1007888">Array Binding</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleDbTypeEnumerationType.htm#i1017320">"OracleDbType Enumeration"</a></div>
<a id="CIHJBGEE"></a>
<div id="ODPNT251" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Data Types BINARY_FLOAT and BINARY_DOUBLE<a id="sthref306"></a><a id="sthref307"></a></h3>
<p>Starting from Oracle Database 10<span class="italic">g</span>, the database supports two new native data types, <code>BINARY_FLOAT</code> and <code>BINARY_DOUBLE</code>.</p>
<p>The <code>BINARY_FLOAT</code> and <code>BINARY_DOUBLE</code> data types represent single-precision and double-precision, floating-point values respectively.</p>
<p>In <code>OracleParameter</code> binding, an application should use the enumerations <code>OracleDbType.BinaryFloat</code> and <code>OracleDbType.BinaryDouble</code> for <code>BINARY_FLOAT</code> and <code>BINARY_DOUBLE</code> data types.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleDataReaderClass.htm#i1005021">"GetDouble"</a></p>
</li>
<li>
<p><a href="OracleDataReaderClass.htm#i1005092">"GetFloat"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1007297"></a>
<div id="ODPNT252" class="sect3">
<h3 class="sect3">OracleDbType Enumeration Type<a id="sthref308"></a><a id="sthref309"></a><a id="sthref310"></a></h3>
<p><code>OracleDbType</code> enumerated values are used to explicitly specify the <code>OracleDbType</code> value of an <code>OracleParameter</code> object.</p>
<p><a href="#g1025072">Table 3-5</a> lists all the <code>OracleDbType</code> enumeration values with a description of each enumerated value.</p>
<div id="ODPNT253" class="tblformal">
<p class="titleintable"><a id="sthref311"></a><a id="g1025072"></a>Table 3-5 OracleDbType Enumeration Values</p>
<table class="cellalignment2344" title="OracleDbType Enumeration Values " summary="rows are OracleDbType enumeration values. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment2333">
<th class="cellalignment2343" id="r1c1-t75">Member Name</th>
<th class="cellalignment2343" id="r1c2-t75">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r2c1-t75" headers="r1c1-t75">
<p><code>Array</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t75 r1c2-t75">
<p>Oracle Collection type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r3c1-t75" headers="r1c1-t75">
<p><code>BFile</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t75 r1c2-t75">
<p>Oracle <code>BFILE</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r4c1-t75" headers="r1c1-t75">
<p><code>BinaryFloat</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t75 r1c2-t75">
<p>Oracle <code>BINARY_FLOAT</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r5c1-t75" headers="r1c1-t75">
<p><code>BinaryDouble</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t75 r1c2-t75">
<p>Oracle <code>BINARY_DOUBLE</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r6c1-t75" headers="r1c1-t75">
<p><code>Blob</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t75 r1c2-t75">
<p>Oracle <code>BLOB</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r7c1-t75" headers="r1c1-t75">
<p><code>Byte</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t75 r1c2-t75">
<p><code>byte</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r8c1-t75" headers="r1c1-t75">
<p><code>Char</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t75 r1c2-t75">
<p>Oracle <code>CHAR</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r9c1-t75" headers="r1c1-t75">
<p><code>Clob</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t75 r1c2-t75">
<p>Oracle <code>CLOB</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r10c1-t75" headers="r1c1-t75">
<p><code>Date</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t75 r1c2-t75">
<p>Oracle <code>DATE</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r11c1-t75" headers="r1c1-t75">
<p><code>Decimal</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t75 r1c2-t75">
<p>Oracle <code>NUMBER</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r12c1-t75" headers="r1c1-t75">
<p><code>Double</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t75 r1c2-t75">
<p>8-byte <code>FLOAT</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r13c1-t75" headers="r1c1-t75">
<p><code>Int16</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t75 r1c2-t75">
<p>2-byte <code>INTEGER</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r14c1-t75" headers="r1c1-t75">
<p><code>Int32</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t75 r1c2-t75">
<p>4-byte <code>INTEGER</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r15c1-t75" headers="r1c1-t75">
<p><code>Int64</code></p>
</td>
<td class="cellalignment2339" headers="r15c1-t75 r1c2-t75">
<p>8-byte <code>INTEGER</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r16c1-t75" headers="r1c1-t75">
<p><code>IntervalDS</code></p>
</td>
<td class="cellalignment2339" headers="r16c1-t75 r1c2-t75">
<p>Oracle <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r17c1-t75" headers="r1c1-t75">
<p><code>IntervalYM</code></p>
</td>
<td class="cellalignment2339" headers="r17c1-t75 r1c2-t75">
<p>Oracle <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r18c1-t75" headers="r1c1-t75">
<p><code>Long</code></p>
</td>
<td class="cellalignment2339" headers="r18c1-t75 r1c2-t75">
<p>Oracle <code>LONG</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r19c1-t75" headers="r1c1-t75">
<p><code>LongRaw</code></p>
</td>
<td class="cellalignment2339" headers="r19c1-t75 r1c2-t75">
<p>Oracle <code>LONG</code> <code>RAW</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r20c1-t75" headers="r1c1-t75">
<p><code>NChar</code></p>
</td>
<td class="cellalignment2339" headers="r20c1-t75 r1c2-t75">
<p>Oracle <code>NCHAR</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r21c1-t75" headers="r1c1-t75">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r21c1-t75 r1c2-t75">
<p>Oracle Object type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r22c1-t75" headers="r1c1-t75">
<p><code>NClob</code></p>
</td>
<td class="cellalignment2339" headers="r22c1-t75 r1c2-t75">
<p>Oracle <code>NCLOB</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r23c1-t75" headers="r1c1-t75">
<p><code>NVarchar2</code></p>
</td>
<td class="cellalignment2339" headers="r23c1-t75 r1c2-t75">
<p>Oracle <code>NVARCHAR2</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r24c1-t75" headers="r1c1-t75">
<p><code>Raw</code></p>
</td>
<td class="cellalignment2339" headers="r24c1-t75 r1c2-t75">
<p>Oracle <code>RAW</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r25c1-t75" headers="r1c1-t75">
<p><code>Ref</code></p>
</td>
<td class="cellalignment2339" headers="r25c1-t75 r1c2-t75">
<p>Oracle <code>REF</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r26c1-t75" headers="r1c1-t75">
<p><code>RefCursor</code></p>
</td>
<td class="cellalignment2339" headers="r26c1-t75 r1c2-t75">
<p>Oracle <code>REF</code> <code>CURSOR</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r27c1-t75" headers="r1c1-t75">
<p><code>Single</code></p>
</td>
<td class="cellalignment2339" headers="r27c1-t75 r1c2-t75">
<p>4-byte <code>FLOAT</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r28c1-t75" headers="r1c1-t75">
<p><code>TimeStamp</code></p>
</td>
<td class="cellalignment2339" headers="r28c1-t75 r1c2-t75">
<p>Oracle <code>TIMESTAMP</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r29c1-t75" headers="r1c1-t75">
<p><code>TimeStampLTZ</code></p>
</td>
<td class="cellalignment2339" headers="r29c1-t75 r1c2-t75">
<p>Oracle <code>TIMESTAMP</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r30c1-t75" headers="r1c1-t75">
<p><code>TimeStampTZ</code></p>
</td>
<td class="cellalignment2339" headers="r30c1-t75 r1c2-t75">
<p>Oracle <code>TIMESTAMP</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r31c1-t75" headers="r1c1-t75">
<p><code>Varchar2</code></p>
</td>
<td class="cellalignment2339" headers="r31c1-t75 r1c2-t75">
<p>Oracle <code>VARCHAR2</code> type</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r32c1-t75" headers="r1c1-t75">
<p><code>XmlType</code></p>
</td>
<td class="cellalignment2339" headers="r32c1-t75 r1c2-t75">
<p>Oracle <code>XMLType</code> type</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
PL/SQL <code>LONG, LONG RAW, RAW,</code> and <code>VARCHAR</code> data types can be bound with a size up to 32512 bytes.</div>
</div>
<!-- class="sect3" -->
<a id="i1007424"></a>
<div id="ODPNT254" class="sect3">
<h3 class="sect3">Inference of DbType, OracleDbType, and .NET Types<a id="sthref312"></a><a id="sthref313"></a><a id="sthref314"></a><a id="sthref315"></a></h3>
<p>This section explains the <a id="sthref316"></a><a id="sthref317"></a><a id="sthref318"></a>inference from the <code>System.Data.DbType</code>, <code>OracleDbType</code>, and <code>Value</code> properties in the <code>OracleParameter</code> class.</p>
<p>In the <code>OracleParameter</code> class, <code>DbType</code>, <code>OracleDbType</code>, and <code>Value</code> properties are linked. Specifying the value of any of these properties infers the value of one or more of the other properties.</p>
<a id="i1007432"></a>
<div id="ODPNT255" class="sect4">
<h4 class="sect4">Inference of DbType from OracleDbType<a id="sthref319"></a></h4>
<p>In the <code>OracleParameter</code> class, specifying the value of <code>OracleDbType</code> infers the value of <code>DbType</code> as shown in <a href="#g1025157">Table 3-6</a>.</p>
<div id="ODPNT256" class="tblformal">
<p class="titleintable"><a id="sthref320"></a><a id="g1025157"></a>Table 3-6 Inference of System.Data.DbType from OracleDbType</p>
<table class="cellalignment2344" title="Inference of System.Data.DbType from OracleDbType " summary="rows are OracleDbTypes. first column is name, second column is System.Data.DbType" dir="ltr">
<thead>
<tr class="cellalignment2333">
<th class="cellalignment2343" id="r1c1-t77">OracleDbType</th>
<th class="cellalignment2343" id="r1c2-t77">System.Data.DbType</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r2c1-t77" headers="r1c1-t77">
<p><code>Array</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r3c1-t77" headers="r1c1-t77">
<p><code>BFile</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r4c1-t77" headers="r1c1-t77">
<p><code>Blob</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r5c1-t77" headers="r1c1-t77">
<p><code>BinaryFloat</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t77 r1c2-t77">
<p><code>Single</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r6c1-t77" headers="r1c1-t77">
<p><code>BinaryDouble</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t77 r1c2-t77">
<p><code>Double</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r7c1-t77" headers="r1c1-t77">
<p><code>Byte</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t77 r1c2-t77">
<p><code>Byte</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r8c1-t77" headers="r1c1-t77">
<p><code>Char</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t77 r1c2-t77">
<p><code>StringFixedLength</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r9c1-t77" headers="r1c1-t77">
<p><code>Clob</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r10c1-t77" headers="r1c1-t77">
<p><code>Date</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t77 r1c2-t77">
<p><code>Date</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r11c1-t77" headers="r1c1-t77">
<p><code>Decimal</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t77 r1c2-t77">
<p><code>Decimal</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r12c1-t77" headers="r1c1-t77">
<p><code>Double</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t77 r1c2-t77">
<p><code>Double</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r13c1-t77" headers="r1c1-t77">
<p><code>Int16</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t77 r1c2-t77">
<p><code>Int16</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r14c1-t77" headers="r1c1-t77">
<p><code>Int32</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t77 r1c2-t77">
<p><code>Int32</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r15c1-t77" headers="r1c1-t77">
<p><code>Int64</code></p>
</td>
<td class="cellalignment2339" headers="r15c1-t77 r1c2-t77">
<p><code>Int64</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r16c1-t77" headers="r1c1-t77">
<p><code>IntervalDS</code></p>
</td>
<td class="cellalignment2339" headers="r16c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r17c1-t77" headers="r1c1-t77">
<p><code>IntervalYM</code></p>
</td>
<td class="cellalignment2339" headers="r17c1-t77 r1c2-t77">
<p><code>Int64</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r18c1-t77" headers="r1c1-t77">
<p><code>Long</code></p>
</td>
<td class="cellalignment2339" headers="r18c1-t77 r1c2-t77">
<p><code>String</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r19c1-t77" headers="r1c1-t77">
<p><code>LongRaw</code></p>
</td>
<td class="cellalignment2339" headers="r19c1-t77 r1c2-t77">
<p><code>Binary</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r20c1-t77" headers="r1c1-t77">
<p><code>NChar</code></p>
</td>
<td class="cellalignment2339" headers="r20c1-t77 r1c2-t77">
<p><code>StringFixedLength</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r21c1-t77" headers="r1c1-t77">
<p><code>NClob</code></p>
</td>
<td class="cellalignment2339" headers="r21c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r22c1-t77" headers="r1c1-t77">
<p><code>NVarchar2</code></p>
</td>
<td class="cellalignment2339" headers="r22c1-t77 r1c2-t77">
<p><code>String</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r23c1-t77" headers="r1c1-t77">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r23c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r24c1-t77" headers="r1c1-t77">
<p><code>Raw</code></p>
</td>
<td class="cellalignment2339" headers="r24c1-t77 r1c2-t77">
<p><code>Binary</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r25c1-t77" headers="r1c1-t77">
<p><code>Ref</code></p>
</td>
<td class="cellalignment2339" headers="r25c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r26c1-t77" headers="r1c1-t77">
<p><code>RefCursor</code></p>
</td>
<td class="cellalignment2339" headers="r26c1-t77 r1c2-t77">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r27c1-t77" headers="r1c1-t77">
<p><code>Single</code></p>
</td>
<td class="cellalignment2339" headers="r27c1-t77 r1c2-t77">
<p><code>Single</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r28c1-t77" headers="r1c1-t77">
<p><code>TimeStamp</code></p>
</td>
<td class="cellalignment2339" headers="r28c1-t77 r1c2-t77">
<p><code>DateTime</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r29c1-t77" headers="r1c1-t77">
<p><code>TimeStampLTZ</code></p>
</td>
<td class="cellalignment2339" headers="r29c1-t77 r1c2-t77">
<p><code>DateTime</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r30c1-t77" headers="r1c1-t77">
<p><code>TimeStampTZ</code></p>
</td>
<td class="cellalignment2339" headers="r30c1-t77 r1c2-t77">
<p><code>DateTime</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r31c1-t77" headers="r1c1-t77">
<p><code>Varchar2</code></p>
</td>
<td class="cellalignment2339" headers="r31c1-t77 r1c2-t77">
<p><code>String</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r32c1-t77" headers="r1c1-t77">
<p><code>XmlType</code></p>
</td>
<td class="cellalignment2339" headers="r32c1-t77 r1c2-t77">
<p><code>String</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect4" -->
<a id="i1007557"></a>
<div id="ODPNT257" class="sect4">
<h4 class="sect4">Inference of OracleDbType from DbType<a id="sthref321"></a></h4>
<p>In the <code>OracleParameter</code> class, specifying the value of <code>DbType</code> infers the value of <code>OracleDbType</code> as shown in <a href="#g1025242">Table 3-7</a>.</p>
<div id="ODPNT258" class="tblformal">
<p class="titleintable"><a id="sthref322"></a><a id="g1025242"></a>Table 3-7 Inference of OracleDbType from DbType</p>
<table class="cellalignment2344" title="Inference of OracleDbType from DbType " summary="rows are System.Data.DbType. first column is name, second column is OracleDbType." dir="ltr">
<thead>
<tr class="cellalignment2333">
<th class="cellalignment2343" id="r1c1-t78">System.Data.DbType</th>
<th class="cellalignment2343" id="r1c2-t78">OracleDbType</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r2c1-t78" headers="r1c1-t78">
<p><code>Binary</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t78 r1c2-t78">
<p><code>Raw</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r3c1-t78" headers="r1c1-t78">
<p><code>Boolean</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r4c1-t78" headers="r1c1-t78">
<p><code>Byte</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t78 r1c2-t78">
<p><code>Byte</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r5c1-t78" headers="r1c1-t78">
<p><code>Currency</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r6c1-t78" headers="r1c1-t78">
<p><code>Date</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t78 r1c2-t78">
<p><code>Date</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r7c1-t78" headers="r1c1-t78">
<p><code>DateTime</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t78 r1c2-t78">
<p><code>TimeStamp</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r8c1-t78" headers="r1c1-t78">
<p><code>Decimal</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t78 r1c2-t78">
<p><code>Decimal</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r9c1-t78" headers="r1c1-t78">
<p><code>Double</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t78 r1c2-t78">
<p><code>Double</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r10c1-t78" headers="r1c1-t78">
<p><code>Guid</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r11c1-t78" headers="r1c1-t78">
<p><code>Int16</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t78 r1c2-t78">
<p><code>Int16</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r12c1-t78" headers="r1c1-t78">
<p><code>Int32</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t78 r1c2-t78">
<p><code>Int32</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r13c1-t78" headers="r1c1-t78">
<p><code>Int64</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t78 r1c2-t78">
<p><code>Int64</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r14c1-t78" headers="r1c1-t78">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t78 r1c2-t78">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r15c1-t78" headers="r1c1-t78">
<p><code>Sbyte</code></p>
</td>
<td class="cellalignment2339" headers="r15c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r16c1-t78" headers="r1c1-t78">
<p><code>Single</code></p>
</td>
<td class="cellalignment2339" headers="r16c1-t78 r1c2-t78">
<p><code>Single</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r17c1-t78" headers="r1c1-t78">
<p><code>String</code></p>
</td>
<td class="cellalignment2339" headers="r17c1-t78 r1c2-t78">
<p><code>Varchar2</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r18c1-t78" headers="r1c1-t78">
<p><code>StringFixedLength</code></p>
</td>
<td class="cellalignment2339" headers="r18c1-t78 r1c2-t78">
<p><code>Char</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r19c1-t78" headers="r1c1-t78">
<p><code>Time</code></p>
</td>
<td class="cellalignment2339" headers="r19c1-t78 r1c2-t78">
<p><code>TimeStamp</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r20c1-t78" headers="r1c1-t78">
<p><code>UInt16</code></p>
</td>
<td class="cellalignment2339" headers="r20c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r21c1-t78" headers="r1c1-t78">
<p><code>UInt32</code></p>
</td>
<td class="cellalignment2339" headers="r21c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r22c1-t78" headers="r1c1-t78">
<p><code>Uint64</code></p>
</td>
<td class="cellalignment2339" headers="r22c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r23c1-t78" headers="r1c1-t78">
<p><code>VarNumeric</code></p>
</td>
<td class="cellalignment2339" headers="r23c1-t78 r1c2-t78">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect4" -->
<a id="i1007666"></a>
<div id="ODPNT259" class="sect4">
<h4 class="sect4">Inference of DbType and OracleDbType from Value<a id="sthref323"></a></h4>
<p>In the <code><a id="sthref324"></a><a id="sthref325"></a>OracleParameter</code> class, <code>Value</code> is an object type that can be of any .NET Framework data type or ODP.NET type. If the <code>OracleDbType</code> and <code>DbType</code> properties of the <code>OracleParameter</code> class are not specified, the <code>OracleDbType</code> property is inferred from the type of the <code>Value</code> property.</p>
<p><a href="#g1025315">Table 3-8</a> shows the inference of <code>DbType</code> and <code>OracleDbType</code> properties from the <code>Value</code> property when the type of <code>Value</code> is one of the .NET Framework data types.</p>
<div id="ODPNT260" class="tblformal">
<p class="titleintable"><a id="sthref326"></a><a id="g1025315"></a>Table 3-8 Inference of DbType and OracleDbType from Value (.NET Datatypes)</p>
<table class="cellalignment2344" title="Inference of DbType and OracleDbType from Value (.NET Datatypes) " summary="rows are values as .NET Datatypes. first column is name, second column is System.Data.DbType. third column is OracleDbType." dir="ltr">
<thead>
<tr class="cellalignment2333">
<th class="cellalignment2343" id="r1c1-t79">Value (.NET Datatypes)</th>
<th class="cellalignment2343" id="r1c2-t79">System.Data.DbType</th>
<th class="cellalignment2343" id="r1c3-t79">OracleDbType</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r2c1-t79" headers="r1c1-t79">
<p><code>Byte</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t79 r1c2-t79">
<p><code>Byte</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t79 r1c3-t79">
<p><code>Byte</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r3c1-t79" headers="r1c1-t79">
<p><code>Byte[]</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t79 r1c2-t79">
<p><code>Binary</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t79 r1c3-t79">
<p><code>Raw</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r4c1-t79" headers="r1c1-t79">
<p><code>Char / Char []</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t79 r1c2-t79">
<p><code>String</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t79 r1c3-t79">
<p><code>Varchar2</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r5c1-t79" headers="r1c1-t79">
<p><code>DateTime</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t79 r1c2-t79">
<p><code>DateTime</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t79 r1c3-t79">
<p><code>TimeStamp</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r6c1-t79" headers="r1c1-t79">
<p><code>Decimal</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t79 r1c2-t79">
<p><code>Decimal</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t79 r1c3-t79">
<p><code>Decimal</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r7c1-t79" headers="r1c1-t79">
<p><code>Double</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t79 r1c2-t79">
<p><code>Double</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t79 r1c3-t79">
<p><code>Double</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r8c1-t79" headers="r1c1-t79">
<p><code>Float</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t79 r1c2-t79">
<p><code>Single</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t79 r1c3-t79">
<p><code>Single</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r9c1-t79" headers="r1c1-t79">
<p><code>Int16</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t79 r1c2-t79">
<p><code>Int16</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t79 r1c3-t79">
<p><code>Int16</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r10c1-t79" headers="r1c1-t79">
<p><code>Int32</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t79 r1c2-t79">
<p><code>Int32</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t79 r1c3-t79">
<p><code>Int32</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r11c1-t79" headers="r1c1-t79">
<p><code>Int64</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t79 r1c2-t79">
<p><code>Int64</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t79 r1c3-t79">
<p><code>Int64</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r12c1-t79" headers="r1c1-t79">
<p><code>IOracleCustomType</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t79 r1c2-t79">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t79 r1c3-t79">
<p><code>Object</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r13c1-t79" headers="r1c1-t79">
<p><code>Single</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t79 r1c2-t79">
<p><code>Single</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t79 r1c3-t79">
<p><code>Single</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r14c1-t79" headers="r1c1-t79">
<p><code>String</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t79 r1c2-t79">
<p><code>String</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t79 r1c3-t79">
<p><code>Varchar2</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r15c1-t79" headers="r1c1-t79">
<p><code>TimeSpan</code></p>
</td>
<td class="cellalignment2339" headers="r15c1-t79 r1c2-t79">
<p>Object</p>
</td>
<td class="cellalignment2339" headers="r15c1-t79 r1c3-t79">
<p><code>IntervalDS</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Using other .NET Framework data types as values for the <code>OracleParameter</code> class without specifying either the <code>DbType</code> or the <code>OracleDbType</code> properties raises an exception because inferring <code>DbType</code> and <code>OracleDbType</code> properties from other .NET Framework data types is not supported.</div>
<p><a href="#g1025379">Table 3-9</a> shows the inference of <code>DbType</code> and <code>OracleDbType</code> properties from the <code>Value</code> property when type of <code>Value</code> is one of <code>Oracle.DataAccess.Types</code>.</p>
<div id="ODPNT261" class="tblformal">
<p class="titleintable"><a id="sthref327"></a><a id="g1025379"></a>Table 3-9 Inference of DbType and OracleDbType from Value (ODP.NET Types)</p>
<table class="cellalignment2344" title="Inference of DbType and OracleDbType from Value (ODP.NET Types) " summary="rows are values as OracleDbType first column is name, second column is System.Data.DbType. third column is OracleDbType ." dir="ltr">
<thead>
<tr class="cellalignment2333">
<th class="cellalignment2343" id="r1c1-t81">Value (Oracle.DataAccess.Types)</th>
<th class="cellalignment2343" id="r1c2-t81">System.Data.DbType</th>
<th class="cellalignment2343" id="r1c3-t81">OracleDbType</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r2c1-t81" headers="r1c1-t81">
<p><code>OracleBFile</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t81 r1c2-t81">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t81 r1c3-t81">
<p><code>BFile</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r3c1-t81" headers="r1c1-t81">
<p><code>OracleBinary</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t81 r1c2-t81">
<p><code>Binary</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t81 r1c3-t81">
<p><code>Raw</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r4c1-t81" headers="r1c1-t81">
<p><code>OracleBlob</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t81 r1c2-t81">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t81 r1c3-t81">
<p><code>Blob</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r5c1-t81" headers="r1c1-t81">
<p><code>OracleClob</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t81 r1c2-t81">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t81 r1c3-t81">
<p><code>Clob</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r6c1-t81" headers="r1c1-t81">
<p><code>OracleDate</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t81 r1c2-t81">
<p><code>Date</code></p>
</td>
<td class="cellalignment2339" headers="r6c1-t81 r1c3-t81">
<p><code>Date</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r7c1-t81" headers="r1c1-t81">
<p><code>OracleDecimal</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t81 r1c2-t81">
<p><code>Decimal</code></p>
</td>
<td class="cellalignment2339" headers="r7c1-t81 r1c3-t81">
<p><code>Decimal</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r8c1-t81" headers="r1c1-t81">
<p><code>OracleIntervalDS</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t81 r1c2-t81">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r8c1-t81 r1c3-t81">
<p><code>IntervalDS</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r9c1-t81" headers="r1c1-t81">
<p><code>OracleIntervalYM</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t81 r1c2-t81">
<p><code>Int64</code></p>
</td>
<td class="cellalignment2339" headers="r9c1-t81 r1c3-t81">
<p><code>IntervalYM</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r10c1-t81" headers="r1c1-t81">
<p><code>OracleRef</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t81 r1c2-t81">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r10c1-t81 r1c3-t81">
<p><code>Ref</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r11c1-t81" headers="r1c1-t81">
<p><code>OracleRefCursor</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t81 r1c2-t81">
<p><code>Object</code></p>
</td>
<td class="cellalignment2339" headers="r11c1-t81 r1c3-t81">
<p><code>RefCursor</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r12c1-t81" headers="r1c1-t81">
<p><code>OracleString</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t81 r1c2-t81">
<p><code>String</code></p>
</td>
<td class="cellalignment2339" headers="r12c1-t81 r1c3-t81">
<p><code>Varchar2</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r13c1-t81" headers="r1c1-t81">
<p><code>OracleTimeStamp</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t81 r1c2-t81">
<p><code>DateTime</code></p>
</td>
<td class="cellalignment2339" headers="r13c1-t81 r1c3-t81">
<p><code>TimeStamp</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r14c1-t81" headers="r1c1-t81">
<p><code>OracleTimeStampLTZ</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t81 r1c2-t81">
<p><code>DateTime</code></p>
</td>
<td class="cellalignment2339" headers="r14c1-t81 r1c3-t81">
<p><code>TimeStampLTZ</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r15c1-t81" headers="r1c1-t81">
<p><code>OracleTimeStampTZ</code></p>
</td>
<td class="cellalignment2339" headers="r15c1-t81 r1c2-t81">
<p><code>DateTime</code></p>
</td>
<td class="cellalignment2339" headers="r15c1-t81 r1c3-t81">
<p><code>TimeStampTZ</code></p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r16c1-t81" headers="r1c1-t81">
<p><code>OracleXmlType</code></p>
</td>
<td class="cellalignment2339" headers="r16c1-t81 r1c2-t81">
<p><code>String</code></p>
</td>
<td class="cellalignment2339" headers="r16c1-t81 r1c3-t81">
<p><code>XmlType</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABBDHBB"></a>
<div id="ODPNT262" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PL/SQL Associative Array Binding<a id="sthref328"></a><a id="sthref329"></a><a id="sthref330"></a></h3>
<p>ODP.NET supports PL/SQL Associative Arrays (formerly known as PL/SQL Index-By Tables) binding.</p>
<p>An application can bind an <code>OracleParameter</code> object, as a PL/SQL Associative Array, to a PL/SQL stored procedure. The following <code>OracleParameter</code> properties are used for this feature:</p>
<ul>
<li>
<p><code>CollectionType</code><a id="sthref331"></a><a id="sthref332"></a></p>
<p>This property must be set to <code>OracleCollectionType.PLSQLAssociativeArray</code> to bind a PL/SQL Associative Array.</p>
</li>
<li>
<p><code>ArrayBindSize</code><a id="sthref333"></a><a id="sthref334"></a></p>
<p>This property is ignored for the fixed-length element types (such as <code>Int32</code>).</p>
<p>For variable-length element types (such as <code>Varchar2</code>), each element in the <code>ArrayBindSize</code> property specifies the size of the corresponding element in the <code>Value</code> property.</p>
<p>For <code>Output</code> parameters, <code>InputOutput</code> parameters, and return values, this property must be set for variable-length variables.</p>
</li>
<li>
<p><code>ArrayBindStatus</code><a id="sthref335"></a><a id="sthref336"></a></p>
<p>This property specifies the execution status of each element in the <code>OracleParameter.Value</code> property.</p>
</li>
<li>
<p><code>Size</code><a id="sthref337"></a><a id="sthref338"></a></p>
<p>This property specifies the maximum number of elements to be bound in the PL/SQL Associative Array.</p>
</li>
<li>
<p><code>Value</code><a id="sthref339"></a><a id="sthref340"></a></p>
<p>This property must be set to an array of values, <code>null</code>, or the <code>DBNull.Value</code> property.</p>
</li>
</ul>
<p>ODP.NET supports binding parameters of PL/SQL Associative Arrays which contain the following data types.</p>
<ul>
<li>
<p><code>BINARY_FLOAT</code></p>
</li>
<li>
<p><code>CHAR</code></p>
</li>
<li>
<p><code>DATE</code></p>
</li>
<li>
<p><code>NCHAR</code></p>
</li>
<li>
<p><code>NUMBER</code></p>
</li>
<li>
<p><code>NVARCHAR2</code></p>
</li>
<li>
<p><code>RAW</code></p>
</li>
<li>
<p><code>ROWID</code></p>
</li>
<li>
<p><code>UROWID</code></p>
</li>
<li>
<p><code>VARCHAR2</code></p>
</li>
</ul>
<p>Using unsupported data types with associative arrays can cause an ORA-600 error.</p>
<p class="subhead2"><a id="ODPNT263"></a>Example of PL/SQL Associative Arrays</p>
<p>This example binds three <code>OracleParameter</code> objects as PL/SQL Associative Arrays: <code>Param1</code> as an <code>In</code> parameter, <code>Param2</code> as an <code>InputOutput</code> parameter, and <code>Param3</code> as an <code>Output</code> parameter.</p>
<p>PL/SQL Package: MYPACK</p>
<pre>
/* Setup the tables and required PL/SQL:
 
   connect scott/tiger@oracle
   CREATE TABLE T1(COL1 number, COL2 varchar2(20));
 
   CREATE or replace PACKAGE MYPACK AS 
     TYPE AssocArrayVarchar2_t is table of VARCHAR(20) index by BINARY_INTEGER;
     PROCEDURE TestVarchar2(
       Param1 IN     AssocArrayVarchar2_t,
       Param2 IN OUT AssocArrayVarchar2_t,
       Param3    OUT AssocArrayVarchar2_t);
     END MYPACK;
/
 
   CREATE or REPLACE package body MYPACK as
     PROCEDURE TestVarchar2(
       Param1 IN     AssocArrayVarchar2_t,
       Param2 IN OUT AssocArrayVarchar2_t,
       Param3    OUT AssocArrayVarchar2_t)
     IS
     i integer;
     BEGIN
       -- copy a few elements from Param2 to Param1\n
       Param3(1) := Param2(1);
       Param3(2) := NULL;
       Param3(3) := Param2(3);
       -- copy all elements from Param1 to Param2\n
       Param2(1) := Param1(1);
       Param2(2) := Param1(2);
       Param2(3) := Param1(3);
       -- insert some values to db\n
       FOR i IN 1..3 LOOP
         insert into T1 values(i,Param2(i));
       END LOOP;
     END TestVarchar2;
   END MYPACK;
/
 */
 
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
 
class AssociativeArraySample
{
  static void Main()
  {
    OracleConnection con = new OracleConnection();
 
    con.ConnectionString = "User Id=scott;Password=tiger;Data Source=oracle";
    con.Open();
    Console.WriteLine("Connected to Oracle" + con.ServerVersion);
    
    OracleCommand cmd = new OracleCommand(
      "begin MyPack.TestVarchar2(:1, :2, :3); end;", con);
 
    OracleParameter Param1 = cmd.Parameters.Add("1", OracleDbType.Varchar2);
    OracleParameter Param2 = cmd.Parameters.Add("2", OracleDbType.Varchar2);
    OracleParameter Param3 = cmd.Parameters.Add("3", OracleDbType.Varchar2);
 
    Param1.Direction = ParameterDirection.Input;
    Param2.Direction = ParameterDirection.InputOutput;
    Param3.Direction = ParameterDirection.Output;
 
    // Specify that we are binding PL/SQL Associative Array
    Param1.CollectionType = OracleCollectionType.PLSQLAssociativeArray;
    Param2.CollectionType = OracleCollectionType.PLSQLAssociativeArray;
    Param3.CollectionType = OracleCollectionType.PLSQLAssociativeArray;
 
    // Setup the values for PL/SQL Associative Array
    Param1.Value = new string[3] {
      "First Element", "Second Element ", "Third Element "
    };
    Param2.Value = new string[3] {
      "First Element", "Second Element ", "Third Element "
    };
    Param3.Value = null;
 
    // Specify the maximum number of elements in the PL/SQL Associative Array
    Param1.Size = 3;
    Param2.Size = 3;
    Param3.Size = 3;
 
    // Setup the ArrayBindSize for Param1
    Param1.ArrayBindSize = new int[3] { 13, 14, 13 };
 
    // Setup the ArrayBindStatus for Param1
    Param1.ArrayBindStatus = new OracleParameterStatus[3] {
      OracleParameterStatus.Success, OracleParameterStatus.Success, 
      OracleParameterStatus.Success};
 
    // Setup the ArrayBindSize for Param2
    Param2.ArrayBindSize = new int[3] { 20, 20, 20 };
 
    // Setup the ArrayBindSize for Param3
    Param3.ArrayBindSize = new int[3] { 20, 20, 20 };
 
    // execute the cmd
    cmd.ExecuteNonQuery();
 
    //print out the parameter's values
    Console.WriteLine("parameter values after executing the PL/SQL block");
    for (int i = 0; i &lt; 3; i++)
      Console.WriteLine("Param2[{0}] = {1} ", i, 
        (cmd.Parameters[1].Value as Array).GetValue(i));
 
    for (int i = 0; i &lt; 3; i++)
      Console.WriteLine("Param3[{0}] = {1} ", i, 
        (cmd.Parameters[2].Value as Array).GetValue(i));
 
    // Close and Dispose OracleConnection object
    con.Close();
    con.Dispose();
    Console.WriteLine("Disconnected");
  }         
}
</pre></div>
<!-- class="sect3" -->
<a id="i1007888"></a>
<div id="ODPNT264" class="sect3">
<h3 class="sect3">Array Binding<a id="sthref341"></a><a id="sthref342"></a><a id="sthref343"></a><a id="sthref344"></a><a id="sthref345"></a><a id="sthref346"></a></h3>
<p>The array bind feature enables applications to bind arrays of a type using the <code>OracleParameter</code> class. Using the array bind feature, an application can insert multiple rows into a table in a single database round-trip.</p>
<p>The following example inserts three rows into the <code>Dept</code> table with a single database round-trip. The <code>OracleCommand</code> <code>ArrayBindCount<a id="sthref347"></a></code> property defines the number of elements of the array to use when executing the statement.</p>
<pre>
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
 
class ArrayBindSample
{
  static void Main()
  {
    OracleConnection con = new OracleConnection();
    con.ConnectionString = "User Id=scott;Password=tiger;Data Source=oracle;";
    con.Open();
    Console.WriteLine("Connected successfully");
 
    int[] myArrayDeptNo = new int[3] { 10, 20, 30 };
    OracleCommand cmd = new OracleCommand();
 
    // Set the command text on an OracleCommand object
    cmd.CommandText = "insert into dept(deptno) values (:deptno)";
    cmd.Connection = con;
 
    // Set the ArrayBindCount to indicate the number of values
    cmd.ArrayBindCount = 3;
 
    // Create a parameter for the array operations
    OracleParameter prm = new OracleParameter("deptno", OracleDbType.Int32);
 
    prm.Direction = ParameterDirection.Input;
    prm.Value = myArrayDeptNo;
 
    // Add the parameter to the parameter collection
    cmd.Parameters.Add(prm);
 
    // Execute the command
    cmd.ExecuteNonQuery();
    Console.WriteLine("Insert Completed Successfully");
 
    // Close and Dispose OracleConnection object
    con.Close();
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleParameterClass.htm#BABCAFIB">"Value"</a> for more information</div>
<div id="ODPNT265" class="sect4"><a id="sthref348"></a>
<h4 class="sect4">OracleParameter Array Bind Properties<a id="sthref349"></a><a id="sthref350"></a></h4>
<p>The <code>OracleParameter</code> class provides two properties for granular control when using the array bind feature:</p>
<ul>
<li>
<p><code>ArrayBindSize</code><a id="sthref351"></a><a id="sthref352"></a></p>
<p>The <code>ArrayBindSize</code> property is an array of integers specifying the maximum size for each corresponding value in an array. The <code>ArrayBindSize</code> property is similar to the <code>Size</code> property of an <code>OracleParameter</code> object, except the <code>ArrayBindSize</code> property specifies the size for each value in an array.</p>
<p>Before the execution, the application must populate the <code>ArrayBindSize</code> property; after the execution, ODP.NET populates it.</p>
<p>The <code>ArrayBindSize</code> property is used only for parameter types that have variable length such as <code>Clob</code>, <code>Blob</code>, and <code>Varchar2</code>. The size is represented in bytes for binary data types, and characters for the Unicode string types. The count for string types does not include the terminating character. The size is inferred from the actual size of the value, if it is not explicitly set. For an output parameter, the size of each value is set by ODP.NET. The <code>ArrayBindSize</code> property is ignored for fixed-length data types.</p>
</li>
<li>
<p><code>ArrayBindStatus</code><a id="sthref353"></a><a id="sthref354"></a></p>
<p>The <code>ArrayBindStatus</code> property is an array of <code>OracleParameterStatus</code> values that specify the status of each corresponding value in an array for a parameter. This property is similar to the <code>Status</code> property of the <code>OracleParameter</code> object, except that the <code>ArrayBindStatus</code> property specifies the status for each array value.</p>
<p>Before the execution, the application must populate the <code>ArrayBindStatus</code> property. After the execution, ODP.NET populates the property. Before the execution, an application using the <code>ArrayBindStatus</code> property can specify a <code>NULL</code> value for the corresponding element in the array for a parameter. After the execution, ODP.NET populates the <code>ArrayBindStatus</code> property, indicating whether the corresponding element in the array has a <code>null</code> value, or if data truncation occurred when the value was fetched.</p>
</li>
</ul>
</div>
<!-- class="sect4" -->
<div id="ODPNT266" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref355"></a>
<h4 class="sect4">Error Handling for Array Binding<a id="sthref356"></a><a id="sthref357"></a></h4>
<p>If an error occurs during an array bind execution, it can be difficult to determine which element in the <code>Value</code> property caused the error. ODP.NET provides a way to determine the row where the error occurred, making it easier to find the element in the row that caused the error.</p>
<p>When an <code>OracleException</code> object is thrown during an array bind execution, the <code>OracleErrorCollection</code> object contains one or more <code>OracleError</code> objects. Each of these <code>OracleError</code> objects represents an individual error that occurred during the execution, and contains a provider-specific property, <code>ArrayBindIndex</code>, which indicates the row number at which the error occurred.</p>
<p>The following example demonstrates error handling for array binding:</p>
<pre>
/* Database Setup
connect scott/tiger@oracle
drop table depttest;
create table depttest(deptno number(2));
*/
 
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
 
class ArrayBindExceptionSample
{
  static void Main()
  {
    OracleConnection con = new OracleConnection();
    con.ConnectionString = "User Id=scott;Password=tiger;Data Source=oracle;";
    con.Open();
 
    OracleCommand cmd = new OracleCommand();
 
    // Start a transaction
    OracleTransaction txn = con.BeginTransaction(IsolationLevel.ReadCommitted);
 
    try
    {
      int[] myArrayDeptNo = new int[3] { 10, 200000, 30 };
      // int[] myArrayDeptNo = new int[3]{ 10,20,30};
 
      // Set the command text on an OracleCommand object
      cmd.CommandText = "insert into depttest(deptno) values (:deptno)";
      cmd.Connection = con;
 
      // Set the ArrayBindCount to indicate the number of values
      cmd.ArrayBindCount = 3;
 
      // Create a parameter for the array operations
      OracleParameter prm = new OracleParameter("deptno", OracleDbType.Int32);
 
      prm.Direction = ParameterDirection.Input;
      prm.Value = myArrayDeptNo;
 
      // Add the parameter to the parameter collection
      cmd.Parameters.Add(prm);
 
      // Execute the command
      cmd.ExecuteNonQuery();
    }
    catch (OracleException e)
    {
      Console.WriteLine("OracleException {0} occured", e.Message);
      if (e.Number == 24381)
        for (int i = 0; i &lt; e.Errors.Count; i++)
          Console.WriteLine("Array Bind Error {0} occured at Row Number {1}", 
            e.Errors[i].Message, e.Errors[i].ArrayBindIndex);
 
      txn.Commit();
    }
    cmd.Parameters.Clear();
    cmd.CommandText = "select count(*) from depttest";
 
    decimal rows = (decimal)cmd.ExecuteScalar();
 
    Console.WriteLine("{0} row have been inserted", rows);
    con.Close();
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleErrorClass.htm#BABIHAIA">"ArrayBindIndex"</a> for more information</div>
</div>
<!-- class="sect4" -->
<a id="i1007952"></a>
<div id="ODPNT267" class="sect4">
<h4 class="sect4">OracleParameterStatus Enumeration Types<a id="sthref358"></a></h4>
<p><a href="#g1025447">Table 3-10</a> lists <code>OracleParameterStatus</code> enumeration values.</p>
<div id="ODPNT268" class="tblformal">
<p class="titleintable"><a id="sthref359"></a><a id="g1025447"></a>Table 3-10 OracleParameterStatus Members</p>
<table class="cellalignment2344" title="OracleParameterStatus Members " summary="rows are OracleParameterStatus members. first column is member name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment2333">
<th class="cellalignment2343" id="r1c1-t84">Member Names</th>
<th class="cellalignment2343" id="r1c2-t84">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r2c1-t84" headers="r1c1-t84">
<p><code>Success</code></p>
</td>
<td class="cellalignment2339" headers="r2c1-t84 r1c2-t84">
<p>For input parameters, indicates that the input value has been assigned to the column.</p>
<p>For output parameters, indicates that the provider assigned an intact value to the parameter.</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r3c1-t84" headers="r1c1-t84">
<p><code>NullFetched</code></p>
</td>
<td class="cellalignment2339" headers="r3c1-t84 r1c2-t84">
<p>Indicates that a <code>NULL</code> value has been fetched from a column or an <code>OUT</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r4c1-t84" headers="r1c1-t84">
<p><code>NullInsert</code></p>
</td>
<td class="cellalignment2339" headers="r4c1-t84 r1c2-t84">
<p>Indicates that a <code>NULL</code> value is to be inserted into a column.</p>
</td>
</tr>
<tr class="cellalignment2333">
<td class="cellalignment2339" id="r5c1-t84" headers="r1c1-t84">
<p><code>Truncation</code></p>
</td>
<td class="cellalignment2339" headers="r5c1-t84 r1c2-t84">
<p>Indicates that truncation has occurred when fetching the data from the column.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHCAFIG"></a>
<div id="ODPNT269" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Statement Caching<a id="sthref360"></a><a id="sthref361"></a><a id="sthref362"></a><a id="sthref363"></a><a id="sthref364"></a></h2>
<p>Statement caching eliminates the need to parse each SQL or PL/SQL statement before execution by caching server cursors created during the initial statement execution. Subsequent executions of the same statement can reuse the parsed information from the cursor, and then execute the statement without reparsing, for better performance.</p>
<p>In order to see performance gains from statement caching, Oracle recommends caching only those statements that will be repeatedly executed. Furthermore, SQL or PL/SQL statements should use parameters rather than literal values. Doing so takes full advantage of statement caching, because parsed information from parameterized statements can be reused even if the parameter values change in subsequent executions. However, if the literal values in the statements are different, the parsed information cannot be reused unless the subsequent statements also have the same literal values.</p>
<div id="ODPNT270" class="sect3"><a id="sthref365"></a>
<h3 class="sect3">Statement Caching Connection String Attributes<a id="sthref366"></a></h3>
<p>The following connection string attributes control the behavior of the ODP.NET statement caching feature:</p>
<ul>
<li>
<p><code>Statement</code> <code>Cache</code> <code>Size</code></p>
<p>This attribute enables or disables ODP.NET statement caching. By default, this attribute is set to <code>0</code> (disabled). If it is set to a value greater than <code>0</code>, ODP.NET statement caching is enabled and the value specifies the maximum number of statements that can be cached for a connection. Once a connection has cached up to the specified maximum cache size, the least recently used cursor is freed to make room to cache the newly created cursor.</p>
<p>If self tuning is enabled, then statement caching is enabled as well. The <code>Statement Cache Size</code> is configured automatically in such cases.</p>
</li>
<li>
<p><code>Statement</code> <code>Cache</code> <code>Purge</code></p>
<p>This attribute provides a way for connections to purge all statements that are cached when a connection is closed or placed back into the connection pool. By default, this attribute is set to <code>false</code>, which means that cursors are not freed when connections are placed back into the pool.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="ODPNT271" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref367"></a>
<h3 class="sect3">Enabling Statement Caching through the Registry</h3>
<p>To enable statement caching by default for all ODP.NET applications running in a system, without changing the application, set the registry key of <code>HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE\ODP.NET\</code><code><span class="codeinlineitalic">Assembly_Version</span></code> <code>\StatementCacheSize</code> to a value greater than <code>0</code>. This value specifies the number of cursors that are to be cached on the server.</p>
<p>The default value for the system can be overridden at the connection pool level. The <code>Statement</code> <code>Cache</code> <code>Size</code> attribute can be set to a different size than the registry value or it can be turned off. The <code>Statement</code> <code>Cache</code> <code>Size</code> can also be configured through an XML configuration file. For details, see <a href="featConfig.htm#CJABCACG">"Configuring Oracle Data Provider for .NET"</a>.</p>
</div>
<!-- class="sect3" -->
<div id="ODPNT272" class="sect3"><a id="sthref368"></a>
<h3 class="sect3">Statement Caching Methods and Properties<a id="sthref369"></a></h3>
<p>The following property and method are relevant only when statement caching is enabled:</p>
<ul>
<li>
<p><code>OracleCommand.AddToStatementCache</code> property</p>
<p>If statement caching is enabled, having this property set to <code>true</code> (default) adds statements to the cache when they are executed. If statement caching is disabled or if this property is set to <code>false</code>, the executed statement is not cached.</p>
</li>
<li>
<p><code>OracleConnection.PurgeStatementCache</code> method</p>
<p>This method purges all the cached statements by closing all open cursors on the database that are associated with the particular connection. Note that statement caching remains enabled after this call.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="ODPNT273" class="sect3"><a id="sthref370"></a>
<h3 class="sect3">Connections and Statement Caching</h3>
<p>Statement caching is managed separately for each connection. Therefore, executing the same statement on different connections requires parsing once for each connection and caching a separate cursor for each connection.</p>
</div>
<!-- class="sect3" -->
<div id="ODPNT274" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref371"></a>
<h3 class="sect3">Pooling and Statement Caching</h3>
<p>Pooling and statement caching can be used in conjunction. If connection pooling is enabled and the <code>Statement</code> <code>Cache</code> <code>Purge</code> attribute is set to <code>false</code>, statements executed on each separate connection are cached throughout the lifetime of the pooled connection.</p>
<p>If the <code>Statement</code> <code>Cache</code> <code>Purge</code> attribute is set to <code>true</code>, all the cached cursors are freed when the connection is placed back into the pool. When connection pooling is disabled, cursors are cached during the lifetime of the connection, but the cursors are closed when the <code>OracleConnection</code> object is closed or disposed of.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJAFGIDD"></a>
<div id="ODPNT275" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Self-Tuning</h2>
<p>ODP.NET applications can be self-tuned for performance optimization. ODP.NET dynamically monitors application queries during runtime.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Self-tuning for applications does not take place if the <code>Pooling</code> connection string attribute is set to <code>false</code>. Self-tuning is also not supported inside .NET stored procedures.</div>
<p>The statement cache size (<a href="OracleConnectionClass.htm#CHDICIGJ">StatementCacheSize</a>) is tuned automatically by monitoring the statements that are executed by the application. The following sections discuss self-tuning in applications:</p>
<ul>
<li>
<p><a href="#CJAFHEJE">Self-Tuning Statement Caching</a></p>
</li>
<li>
<p><a href="#CJADBICH">Enabling or Disabling Self-Tuning for Applications</a></p>
</li>
<li>
<p><a href="#CJAHCJHJ">Tracing Optimization Changes</a></p>
</li>
</ul>
<a id="CJAFHEJE"></a>
<div id="ODPNT276" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Self-Tuning Statement Caching</h3>
<p>Statement caching helps improve performance by eliminating the need to re-parse each SQL or PL/SQL statement before execution.</p>
<p>If self-tuning is enabled for an application, then ODP.NET continuously monitors application behavior in order to determine the optimum value for the statement cache size. Any statement cache size value specified in the connection string, configuration file, or registry is ignored.</p>
<p>When the application first initializes, it uses the default value of statement cache size. As the application executes statements, ODP.NET collects statistics that are used to self-tune the value of statement cache size. Self-tuning of statement cache size results in increased performance.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To take full advantage of statement caching, you should not dynamically generate statements, with different inline values, for every statement execution. Instead, use parameterized commands to minimize the number of unique statements that need to be executed and cached. This is because only one statement needs to be cached for every unique command text, regardless of the parameter values and the number of times that the statement is executed.</div>
<p>The maximum number of statements that can be cached per connection is determined by the <code>MaxStatementCacheSize</code> configuration attribute. The <code>MaxStatementCacheSize</code> value can be specified in the Windows registry or XML configuration file.</p>
<p>The <code>MaxStatementCacheSize</code> setting is useful in limiting the number of cached statements, as well as the number of open cursors. This is because a cached statement equates to a cursor being opened on the server. For this reason, you should not set <code>MaxStatementCacheSize</code> to a value that is greater than the database <code>MAX_OPEN_CURSORS</code> setting.</p>
<p>The following Windows registry key is used to configure the <code>MaxStatementCacheSize</code> configuration attribute:</p>
<pre>
HKLM\Software\Oracle\ODP.NET\<span class="italic">version</span>\MaxStatementCacheSize
</pre>
<p>The <code>MaxStatementCacheSize</code> key is of type <code>REG_SZ</code>. It can be set to an integer value between 0 and <code>System.Int32.MaxValue</code>.</p>
<p>The following example sets the <code>MaxStatementCacheSize</code> property in an ADO.NET 2.0, or above, configuration file:</p>
<pre>
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;configuration&gt;
  &lt;oracle.dataaccess.client&gt;
    &lt;settings&gt;
      &lt;add name="MaxStatementCacheSize" value="300"/&gt;
    &lt;/settings&gt;
  &lt;/oracle.dataaccess.client&gt;
&lt;/configuration&gt;
</pre>
<p>If self-tuning is disabled for an application, then the value of statement cache size is determined by the settings in the connection string, configuration file, or the registry. If statement cache size is not specified in any of these sources, then the default value of statement cache size is set to 0. To have ODP.NET configured with the same default settings as previous releases of ODP.NET, disable self-tuning and set the <code>StatementCacheSize</code> value to 10.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHCAFIG">"Statement Caching"</a></div>
</div>
<!-- class="sect3" -->
<a id="CJADBICH"></a>
<div id="ODPNT277" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Enabling or Disabling Self-Tuning for Applications</h3>
<p>Self-tuning for ODP.NET applications is enabled by default. An application can enable or disable self-tuning using one of the following methods:</p>
<ul>
<li>
<p>Self-Tuning Connection String Attribute</p>
<p>An application can modify the <code>Self Tuning</code> connection string attribute to enable or disable self-tuning for a particular connection pool. The default value for <code>Self Tuning</code> is <code>true</code>.</p>
</li>
<li>
<p>Windows Registry</p>
<p>An application can enable or disable self-tuning for a particular version of ODP.NET by modifying the following registry entry:</p>
<pre>
HKLM\Software\Oracle\ODP.NET\<span class="italic">version</span>\SelfTuning
</pre>
<p>The <code>SelfTuning</code> key is of type <code>REG_SZ</code>. It can be set to either <code>1</code> (enabled) or <code>0</code> (disabled).</p>
</li>
<li>
<p>Configuration File</p>
<p>An ODP.NET application can modify the application configuration file (<code>app.config</code>) or Web configuration file (<code>web.config</code>) to enable or disable self-tuning.</p>
<p>The following example shows how to enable self-tuning in an ADO.NET 2.0 application configuration file:</p>
<pre>
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;configuration&gt;
  &lt;oracle.dataaccess.client&gt;
    &lt;settings&gt;
      &lt;add name="SelfTuning" value="1"/&gt;
    &lt;/settings&gt;
  &lt;/oracle.dataaccess.client&gt;
&lt;/configuration&gt;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the optimal statement cache size is known for an application, then you can disable self-tuning and set <code>StatementCacheSize</code> to its optimum value in the registry, configuration file, or the application. If self-tuning is disabled and <code>StatementCacheSize</code> is not set at all, then the default value of 0 is used for <code>StatementCacheSize</code>.</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CJAHCJHJ"></a>
<div id="ODPNT278" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Tracing Optimization Changes</h3>
<p>Applications can trace optimization changes made by self-tuning. All changes to <code>StatementCacheSize</code> are traced. Errors, if any, are also traced.</p>
<p>The <code>TraceLevel</code> used for tracing self-tuning is <code>64</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="featConfig.htm#CJADGEAI">Table 2-1, "Configuration Attributes"</a> for details on <code>TraceLevel</code> values</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2332">
<tr>
<td class="cellalignment2339">
<table class="cellalignment2337">
<tr>
<td class="cellalignment2336"><a href="featLINQ.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2336"><a href="featTypes.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2341">
<table class="cellalignment2335">
<tr>
<td class="cellalignment2336"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2336"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2336"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2336"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2336"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2336"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
